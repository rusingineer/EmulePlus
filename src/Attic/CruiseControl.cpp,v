head	1.3;
access;
symbols
	PublicRelease_1o:1.2
	Interim_Release_1o_RC1:1.2
	Interim_Release_1o_beta1:1.2
	PublicRelease_1n:1.2
	Interim_Release_1n_RC2:1.2
	Interim_Release_1n_RC1:1.2
	Interim_Release_1n_beta2:1.2
	Interim_Release_1n_beta1:1.2
	PublicRelease_1m:1.2
	Interim_Release_1m_beta1:1.2
	PublicRelease_1l:1.2
	Interim_Release_1l_RC3:1.2
	Interim_Release_1l_RC2:1.2
	Interim_Release_1l_RC1:1.2
	Interim_Release_1l_beta2:1.2
	Interim_Release_1l_beta1:1.2
	PublicRelease_1k:1.2
	Interim_Release_1k_RC4:1.2
	Interim_1k_RC3:1.2
	Interim_1k_RC2:1.2
	Interim_Release_1k_RC1:1.2
	Interim_Release_1k_beta5:1.2
	Intrerim_Release_1k_beta4:1.2
	Interim_Release_1k_beta1:1.2
	PublicRelease_1j:1.2
	Interim_Release_1J_RC3:1.2
	Interim_Release_1j_RC3:1.2
	Interim_Release_1j_RC2:1.2
	Interim_Release_1j_RC1:1.2
	Interim_Release_1j_beta2:1.2
	Interim_Release_1j_beta1:1.2
	PublicRelease_1i:1.2
	Interim_Release_1i_RC6:1.2
	Interim_Release_1i_RC3:1.2
	Interim_Release_1i_RC2:1.2
	Interim_Release_1i_RC1:1.2
	Interim_Release_1i_beta3:1.2
	Interim_Release_1i_beta2:1.2
	Interim_Release_1i_beta1:1.2
	PublicRelease_1h:1.2
	Interim_Release_1h_rc2:1.2
	Interim_Release_1h_RC1:1.2
	Interim_Release_1h_beta2:1.2
	Interim_Release_1h_beta1_now:1.2
	Interim_Release_1h_beta1:1.2
	PublicRelease_1g:1.2
	Interim_Release_1g_RC6_Final:1.2
	Interim_Release_1g_RC6:1.2
	Interim_Release_1g_RC5:1.2
	Interim_Release_1g_RC4:1.2
	Interim_Release_1g_RC3:1.2
	Interim_Release_1g_beta2:1.2
	Interim_Release_1g_beta1:1.2
	Interim_Release_1f_RC4:1.2
	Interim_Release_1f_RC3:1.2;
locks; strict;
comment	@// @;


1.3
date	2004.10.02.04.00.30;	author aw3;	state dead;
branches;
next	1.2;

1.2
date	2003.05.22.13.16.00;	author obaldin;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.22.13.12.24;	author obaldin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Removed old Cruise Control stuff.
@
text
@#include "stdafx.h"
#include "CruiseControl.h"
#include "Loggable.h"
#include "otherfunctions.h"

#if CRUISECONTROL

CCruiseControl::CCruiseControl(CKnownFile* file) {
    kfile = file;
    nParts = kfile->GetPartCount();
}

CCruiseControl::~CCruiseControl(void) {
}

void CCruiseControl::OpenDatabases(DbEnv*	pDbEnvironment){
}

void CCruiseControl::CloseDatabases(void) {
}

#endif // CRUISECONTROL
@


1.2
log
@some CC infrastructure
@
text
@@


1.1
log
@fix for Jumpstart insisting on turning itself on
@
text
@d16 1
a16 1
void CJumpstarter::OpenDatabases(DbEnv*	pDbEnvironment){
d19 1
a19 1
void CJumpstarter::CloseDatabases(void) {
@

