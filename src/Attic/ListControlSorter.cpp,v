head	1.4;
access;
symbols
	PublicRelease_1_1c:1.3
	Interim_Release_1-1c_RC1:1.3
	Interim_Release_1-1c_beta2:1.3
	Interim_Release_1-1c_beta1:1.3
	PublicRelease_1_1b:1.3
	Interim_Release_1-1b_RC1:1.3
	PublicRelease_1_1a:1.3
	Interim_Release_1-1a_RC2:1.3
	Interim_Release_1-1a_RC1:1.3
	Interim_Release_1-1a_beta2:1.3
	Interim_Release_1-1a_beta1:1.3
	PublicRelease_1_1:1.3
	Interim_Release_1-1_beta1:1.3
	PublicRelease_1o:1.3
	Interim_Release_1o_RC1:1.3
	Interim_Release_1o_beta1:1.3
	PublicRelease_1n:1.3
	Interim_Release_1n_RC2:1.3
	Interim_Release_1n_RC1:1.3
	Interim_Release_1n_beta2:1.3
	Interim_Release_1n_beta1:1.3
	PublicRelease_1m:1.3
	Interim_Release_1m_beta1:1.3
	PublicRelease_1l:1.3
	Interim_Release_1l_RC3:1.3
	Interim_Release_1l_RC2:1.3
	Interim_Release_1l_RC1:1.3
	Interim_Release_1l_beta2:1.3
	Interim_Release_1l_beta1:1.3
	PublicRelease_1k:1.3
	Interim_Release_1k_RC4:1.3
	Interim_1k_RC3:1.3
	Interim_1k_RC2:1.3
	Interim_Release_1k_RC1:1.3
	Interim_Release_1k_beta5:1.3
	Intrerim_Release_1k_beta4:1.3
	Interim_Release_1k_beta1:1.3
	PublicRelease_1j:1.2
	Interim_Release_1J_RC3:1.2
	Interim_Release_1j_RC3:1.2
	Interim_Release_1j_RC2:1.2
	Interim_Release_1j_RC1:1.2
	Interim_Release_1j_beta2:1.2
	Interim_Release_1j_beta1:1.2
	PublicRelease_1i:1.2
	Interim_Release_1i_RC6:1.2
	Interim_Release_1i_RC3:1.2
	Interim_Release_1i_RC2:1.2
	Interim_Release_1i_RC1:1.2
	Interim_Release_1i_beta3:1.2
	Interim_Release_1i_beta2:1.2
	Interim_Release_1i_beta1:1.2
	PublicRelease_1h:1.2
	Interim_Release_1h_rc2:1.2
	Interim_Release_1h_RC1:1.2
	Interim_Release_1h_beta2:1.2
	Interim_Release_1h_beta1_now:1.2
	Interim_Release_1h_beta1:1.2
	PublicRelease_1g:1.2
	Interim_Release_1g_RC6_Final:1.2
	Interim_Release_1g_RC6:1.2
	Interim_Release_1g_RC5:1.2
	Interim_Release_1g_RC4:1.2
	Interim_Release_1g_RC3:1.2
	Interim_Release_1g_beta2:1.2
	Interim_Release_1g_beta1:1.2
	Interim_Release_1f_RC4:1.2
	Interim_Release_1f_RC3:1.2
	Interim_Release_1f_RC2:1.2
	Interim_Release_1f_RC:1.2
	Interim_Release_1f_beta2:1.2
	Interim_Release_1f_beta1:1.2
	PublicRelease_1e:1.2
	Interim_Release_1e_RC2:1.2
	Interim_Release_1e_RC:1.2
	Interim_Release_1e_beta3:1.2
	Interim_Release_1e_beta2:1.2
	Interim_Release_1e_beta2_before_kuchin:1.2
	Interim_Release_1e_beta1:1.2
	PublicRelease_1c:1.2
	featurestest:1.2.0.8
	Interim_Release_1c_RC:1.2
	Interim_Release_1c_beta2:1.2
	Interim_Release_1c_beta1:1.2
	threaded_downloadqueue:1.2.0.6
	PublicRelease_1b:1.2
	Interim_Release_1b_beta2:1.2
	Interim_Release_1b_beta1:1.2
	proxydeadlake:1.2.0.4
	PublicRelease_1a:1.2
	Interim_Release_1a_beta2:1.2
	BerkeleyDb:1.2.0.2
	Interim_Release_1a_beta1:1.2
	PublicRelease_1:1.2
	goldfish:1.2
	eMulePlus_1_RC2:1.2
	eMulePlus_26b_1RC1:1.2
	PreRelease_26b_i0e:1.2
	before_26d_merge:1.2
	Interim_Release_26b_i0d:1.1
	Interim_Release_26b_i0c:1.1
	Interim_Release_26b_i0b:1.1
	Interim_Release_26b_i0a:1.1
	systraydlg:1.1.0.8
	plus26based:1.1.0.6
	Interim_Release_25b_i0b:1.1
	Proxy_Dev:1.1
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@// @;


1.4
date	2005.03.06.22.12.01;	author aw3;	state dead;
branches;
next	1.3;

1.3
date	2004.02.15.11.55.57;	author morevit;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.16.22.01.47;	author lord_kiron;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.18.21.20;	author cax2;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.01.28.16.54.15;	author cax2;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Rewritten shared files list sorting to make it according to other lists;
Fixed sorting arrow in shared files list when second sorting level is used by default.
@
text
@//--- xrmb:downloadclientslist ---
//--- xrmb:parttraffic ---
#include "StdAfx.h"
#include "listControlSorter.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif


//-------------------------------------------------------------------------------------------------
CListCtrlSorter::CListCtrlSorter() 
:	m_selected(0),
	m_itemc(0),
	m_items(NULL)
{
}

//-------------------------------------------------------------------------------------------------
void CListCtrlSorter::init(byte items)
{
	m_itemc=items;
	m_items=new CListCtrlSorterItem*[m_itemc];
	for(byte i=0; i<m_itemc; i++)
		m_items[i]=new CListCtrlSorterItem(i);
}

//-------------------------------------------------------------------------------------------------
CListCtrlSorter::~CListCtrlSorter() 
{
	if(m_items)
	{
		for(byte i=0; i<m_itemc; i++)
			delete m_items[i];

		delete[] m_items;
		m_items=NULL;
	}
}

//-------------------------------------------------------------------------------------------------
void CListCtrlSorterItem::set(byte levels, bool reverse, bool defaultDir, byte defaultLevel)
{
	m_level=defaultLevel;
	m_dir=defaultDir;
	m_reverse=reverse;

	m_levels=levels;
	m_defaultDir=defaultDir;
	m_defaultLevel=defaultLevel;
}

//Cax2 I needed a REAL set function...
void CListCtrlSorterItem::sortIt(byte level, bool dir){
	m_level=level;
	m_dir=(dir ^ m_reverse);
}


//-------------------------------------------------------------------------------------------------
void CListCtrlSorterItem::clicked(byte id)
{
	if(m_id!=id)
	{
		m_dir=m_defaultDir;
		m_level=m_defaultLevel;
	}
	else
	{
		m_dir=!m_dir;
		if(m_dir)
		{
			m_level%=m_levels;
			m_level++;		
		}
	}
}

//-------------------------------------------------------------------------------------------------
CMuleListCtrl::ArrowType CListCtrlSorterItem::arrow()
{
	if(m_level==1)
	{
		if(m_dir ^ m_reverse)
			return CMuleListCtrl::ArrowType::arrowUp;
		else
			return CMuleListCtrl::ArrowType::arrowDown;
	}
	else
	{
		if(m_dir ^ m_reverse)
			return CMuleListCtrl::ArrowType::arrowDoubleUp;
		else
			return CMuleListCtrl::ArrowType::arrowDoubleDown;
	}
}@


1.3
log
@Changed uint32 to unsigned long from unsigned int and made necessary code changes. Got rid of _unsigned_ types int8,int16,int32,int64. Eliminated uint8 to avoid confusion. Use "byte".
@
text
@@


1.2
log
@Added instrumentation for debugging memory leaks :
#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

To all .cpp files (I hope I didn't miss any one)
@
text
@d22 1
a22 1
void CListCtrlSorter::init(uint8 items)
d26 1
a26 1
	for(uint8 i=0; i<m_itemc; i++)
d35 1
a35 1
		for(uint8 i=0; i<m_itemc; i++)
d44 1
a44 1
void CListCtrlSorterItem::set(uint8 levels, bool reverse, bool defaultDir, uint8 defaultLevel)
d56 1
a56 1
void CListCtrlSorterItem::sortIt(uint8 level, bool dir){
d63 1
a63 1
void CListCtrlSorterItem::clicked(uint8 id)
@


1.1
log
@*** empty log message ***
@
text
@d6 7
@


1.1.4.1
log
@updating this branch...
@
text
@@

