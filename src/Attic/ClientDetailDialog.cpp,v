head	1.35;
access;
symbols
	Interim_Release_1i_beta1:1.34
	PublicRelease_1h:1.30
	Interim_Release_1h_rc2:1.30
	Interim_Release_1h_RC1:1.30
	Interim_Release_1h_beta2:1.30
	Interim_Release_1h_beta1_now:1.27
	Interim_Release_1h_beta1:1.27
	PublicRelease_1g:1.27
	Interim_Release_1g_RC6_Final:1.27
	Interim_Release_1g_RC6:1.27
	Interim_Release_1g_RC5:1.27
	Interim_Release_1g_RC4:1.27
	Interim_Release_1g_RC3:1.27
	Interim_Release_1g_beta2:1.25
	Interim_Release_1g_beta1:1.24
	Interim_Release_1f_RC4:1.24
	Interim_Release_1f_RC3:1.24
	Interim_Release_1f_RC2:1.23
	Interim_Release_1f_RC:1.23
	Interim_Release_1f_beta2:1.23
	Interim_Release_1f_beta1:1.21
	PublicRelease_1e:1.21
	Interim_Release_1e_RC2:1.21
	Interim_Release_1e_RC:1.21
	Interim_Release_1e_beta3:1.21
	Interim_Release_1e_beta2:1.21
	Interim_Release_1e_beta2_before_kuchin:1.21
	Interim_Release_1e_beta1:1.21
	PublicRelease_1c:1.21
	featurestest:1.21.0.2
	Interim_Release_1c_RC:1.21
	Interim_Release_1c_beta2:1.20
	Interim_Release_1c_beta1:1.20
	threaded_downloadqueue:1.20.0.2
	PublicRelease_1b:1.17
	Interim_Release_1b_beta2:1.17
	Interim_Release_1b_beta1:1.16
	proxydeadlake:1.16.0.2
	PublicRelease_1a:1.16
	Interim_Release_1a_beta2:1.16
	BerkeleyDb:1.14.0.2
	Interim_Release_1a_beta1:1.14
	PublicRelease_1:1.14
	goldfish:1.14
	eMulePlus_1_RC2:1.14
	eMulePlus_26b_1RC1:1.14
	PreRelease_26b_i0e:1.14
	before_26d_merge:1.14
	Interim_Release_26b_i0d:1.10
	Interim_Release_26b_i0c:1.7
	Interim_Release_26b_i0b:1.7
	Interim_Release_26b_i0a:1.7
	systraydlg:1.4.0.6
	plus26based:1.4.0.4
	Interim_Release_25b_i0b:1.4
	Proxy_Dev:1.4
	Interim_Release_25b_i0a:1.4.2.1
	proxytest:1.4.2.1.0.2
	official_sockets:1.4.0.2
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@// @;


1.35
date	2003.10.10.04.12.21;	author dongato;	state dead;
branches;
next	1.34;

1.34
date	2003.09.23.19.01.32;	author netwolf1;	state Exp;
branches;
next	1.33;

1.33
date	2003.09.20.15.39.30;	author morevit;	state Exp;
branches;
next	1.32;

1.32
date	2003.09.19.14.42.45;	author morevit;	state Exp;
branches;
next	1.31;

1.31
date	2003.09.19.00.13.36;	author morevit;	state Exp;
branches;
next	1.30;

1.30
date	2003.08.31.20.48.05;	author dongato;	state Exp;
branches;
next	1.29;

1.29
date	2003.08.31.16.49.55;	author dongato;	state Exp;
branches;
next	1.28;

1.28
date	2003.08.30.11.23.25;	author emoulari;	state Exp;
branches;
next	1.27;

1.27
date	2003.06.19.07.47.47;	author partyckip;	state Exp;
branches;
next	1.26;

1.26
date	2003.06.19.07.31.53;	author partyckip;	state Exp;
branches;
next	1.25;

1.25
date	2003.06.09.00.31.11;	author syrus77;	state Exp;
branches;
next	1.24;

1.24
date	2003.05.20.20.46.25;	author netwolf1;	state Exp;
branches;
next	1.23;

1.23
date	2003.05.09.23.07.44;	author moosetea;	state Exp;
branches;
next	1.22;

1.22
date	2003.05.06.23.11.20;	author moosetea;	state Exp;
branches;
next	1.21;

1.21
date	2003.03.22.01.13.59;	author cax2;	state Exp;
branches
	1.21.2.1;
next	1.20;

1.20
date	2003.03.13.19.17.27;	author emoulari;	state Exp;
branches;
next	1.19;

1.19
date	2003.03.13.15.51.56;	author cax2;	state Exp;
branches;
next	1.18;

1.18
date	2003.03.11.14.46.25;	author cax2;	state Exp;
branches;
next	1.17;

1.17
date	2003.03.08.12.09.41;	author recdvst;	state Exp;
branches;
next	1.16;

1.16
date	2003.02.26.21.12.31;	author cax2;	state Exp;
branches;
next	1.15;

1.15
date	2003.02.25.13.16.08;	author emoulari;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.16.22.01.46;	author lord_kiron;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	2003.02.15.09.27.42;	author lord_kiron;	state Exp;
branches;
next	1.12;

1.12
date	2003.02.14.15.33.34;	author lord_kiron;	state Exp;
branches;
next	1.11;

1.11
date	2003.02.14.14.55.32;	author lord_kiron;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.13.18.27.41;	author lord_kiron;	state Exp;
branches;
next	1.9;

1.9
date	2003.02.12.20.18.21;	author obaldin;	state Exp;
branches;
next	1.8;

1.8
date	2003.02.11.22.50.43;	author lord_kiron;	state Exp;
branches;
next	1.7;

1.7
date	2003.02.10.19.24.46;	author cax2;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.07.08.00.29;	author lord_kiron;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.06.21.13.55;	author lord_kiron;	state Exp;
branches;
next	1.4;

1.4
date	2003.01.24.22.07.46;	author maverick65;	state Exp;
branches
	1.4.2.1
	1.4.4.1;
next	1.3;

1.3
date	2003.01.22.18.00.49;	author kuchin;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.22.14.14.22;	author cax2;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.17.59.09;	author cax2;	state Exp;
branches;
next	;

1.4.2.1
date	2003.01.28.16.53.58;	author cax2;	state Exp;
branches;
next	;

1.4.4.1
date	2003.02.05.01.58.41;	author obaldin;	state Exp;
branches;
next	;

1.14.2.1
date	2003.02.28.22.44.54;	author obaldin;	state Exp;
branches;
next	;

1.21.2.1
date	2003.03.23.06.22.02;	author recdvst;	state Exp;
branches;
next	1.21.2.2;

1.21.2.2
date	2003.03.24.09.39.42;	author recdvst;	state Exp;
branches;
next	;


desc
@@


1.35
log
@Removed old details code, added more keyboard shortcuts (now with only Ctrl instead of all three keys)
@
text
@//this file is part of eMule
//Copyright (C)2002 Merkur ( merkur-@@users.sourceforge.net / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the GNU General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

// ClientDetailDialog.cpp : implementation file
//

#include "stdafx.h"
#include "emule.h"
#include "ClientDetailDialog.h"
#include "otherfunctions.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif


// CClientDetailDialog dialog

IMPLEMENT_DYNAMIC(CClientDetailDialog, CDialog)
CClientDetailDialog::CClientDetailDialog(CUpDownClient* client)
	: CDialog(CClientDetailDialog::IDD, 0)
{
	m_client = client;
}

CClientDetailDialog::~CClientDetailDialog()
{
}

void CClientDetailDialog::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
}

BOOL CClientDetailDialog::OnInitDialog()
{
	EMULE_TRY

	CDialog::OnInitDialog();
	Localize();
	
	// Track loaded sources name [Tarod]
	bool loadedSourceName = false ;
	if (m_client->GetUserName())
	{
		loadedSourceName = (_tcsstr(m_client->GetUserName(), GetResString(IDS_LOADEDSOURCE)) != NULL)
							|| (_tcsstr(m_client->GetUserName(), GetResString(IDS_EXCHANGEDSOURCE)) != NULL) ;
	}
	CString buffer;
	buffer = m_client->GetUserName();
	if (!buffer.IsEmpty())
		GetDlgItem(IDC_DNAME)->SetWindowText(buffer);
	else
		GetDlgItem(IDC_DNAME)->SetWindowText(_T("?"));
	
	if (m_client->HasValidHash() && !loadedSourceName)
	{
		buffer ="";
		CString buffer2;
		for (uint16 i = 0;i != 16;i++)
		{
			buffer2.Format(_T("%02X"),m_client->GetUserHash()[i]);
			buffer+=buffer2;
		}
		GetDlgItem(IDC_DHASH)->SetWindowText(buffer);
	}
	else
		GetDlgItem(IDC_DHASH)->SetWindowText(_T("?"));

	// [Lord KiRon]
	// Display client and client version //Cax2 - show plus version
	bool isPlus=(m_client->PlusVersion() && m_client->PlusVersion()<0x2600);
	if(isPlus)	//Cax2 - second check - don't display the 38e (pre v1?) mods
		GetDlgItem(IDC_DSOFT)->SetWindowText(GetClientNameString(m_client->GetClientSoft())+_T(" [")+GetClientNameAndVersionString(m_client)+_T("]"));
	else
		GetDlgItem(IDC_DSOFT)->SetWindowText(GetClientNameString(m_client->GetClientSoft()));
	
	switch(m_client->GetClientSoft())
	{
		case SO_EMULE:
		case SO_LMULE:
		case SO_OLDEMULE:
		case SO_CDONKEY:
		case SO_SHAREAZA:
			buffer.Format(_T("v%s"),GetClientVersionString(m_client->GetClientSoft(),m_client->GetMuleVersion()));
			break;
		case SO_UNKNOWN:
			buffer.Format(_T("???"));
			break;
		default:
			buffer.Format(_T("v%s"),GetClientVersionString(m_client->GetClientSoft(),m_client->GetVersion()));
			break;
	}
	GetDlgItem(IDC_DVERSION)->SetWindowText((CString) buffer+((m_client->GetModVersion().IsEmpty())? _T("") : _T(" [")+(CString) m_client->GetModVersion()+_T("]")));
	// [/Lord KiRon]

	buffer.Format(_T("%u (%s)"),m_client->GetUserID(),(m_client->HasLowID() ? GetResString(IDS_PRIOLOW):GetResString(IDS_PRIOHIGH)));
	GetDlgItem(IDC_DID)->SetWindowText(buffer);
	
	buffer.Format(_T("%s:%i"),m_client->GetFullIP(),m_client->GetUserPort());
	GetDlgItem(IDC_DIP)->SetWindowText(buffer);

	if (m_client->GetServerIP())
	{
		in_addr server;
		server.S_un.S_addr = m_client->GetServerIP();
		CString s(inet_ntoa(server));
		GetDlgItem(IDC_DSIP)->SetWindowText(s);
		
		CServer* cserver = g_eMuleApp.m_pServerList->GetServerByAddress(s, m_client->GetServerPort()); 
		if (cserver)
			GetDlgItem(IDC_DSNAME)->SetWindowText(cserver->GetListName());
		else
			GetDlgItem(IDC_DSNAME)->SetWindowText(_T("?"));
	}
	else
	{
		GetDlgItem(IDC_DSIP)->SetWindowText(_T("?"));
		GetDlgItem(IDC_DSNAME)->SetWindowText(_T("?"));
	}

	CKnownFile* file = g_eMuleApp.m_pSharedFilesList->GetFileByID(m_client->reqfileid);
	if (file)
	{
		if (m_client->GetUploadState() != US_UPLOADING) 
		{
			GetDlgItem(IDC_CURRENTLY)->SetWindowText(GetResString(IDS_CURRENTLY));
		}
		GetDlgItem(IDC_DDOWNLOADING)->SetWindowText(MakeStringEscaped(file->GetFileName()));
	}
	else
		GetDlgItem(IDC_DDOWNLOADING)->SetWindowText(_T("-"));

	GetDlgItem(IDC_DDUP)->SetWindowText(CastItoXBytes(m_client->GetTransferredDown()));

	GetDlgItem(IDC_DDOWN)->SetWindowText(CastItoXBytes(m_client->GetTransferredUp()));

	buffer.Format(_T("%.1f %s"),(float)m_client->GetDownloadDataRate()/1024,GetResString(IDS_KBYTESEC));
	GetDlgItem(IDC_DAVUR)->SetWindowText(buffer);

	buffer.Format(_T("%.1f %s"),max((float)m_client->GetDataRate()/1024,.0),GetResString(IDS_KBYTESEC));
	GetDlgItem(IDC_DAVDR)->SetWindowText(buffer);
	
	if (m_client->Credits())
	{
		GetDlgItem(IDC_DUPTOTAL)->SetWindowText(CastItoXBytes(m_client->Credits()->GetDownloadedTotal()));
		GetDlgItem(IDC_DDOWNTOTAL)->SetWindowText(CastItoXBytes(m_client->Credits()->GetUploadedTotal()));
		buffer.Format(_T("%.1f"),(float)m_client->Credits()->GetScoreRatio(m_client->GetIP()));
		GetDlgItem(IDC_DRATIO)->SetWindowText(buffer);
	
		if (g_eMuleApp.m_pClientCreditList->CryptoAvailable())
		{
				switch(m_client->Credits()->GetCurrentIdentState(m_client->GetIP()))
				{
					case IS_NOTAVAILABLE:
						GetDlgItem(IDC_CDIDENT)->SetWindowText(GetResString(IDS_IDENTNOSUPPORT));
						break;
					case IS_IDFAILED:
					case IS_IDNEEDED:
					case IS_IDBADGUY:
						GetDlgItem(IDC_CDIDENT)->SetWindowText(GetResString(IDS_IDENTFAILED));
						break;
					case IS_IDENTIFIED:
						GetDlgItem(IDC_CDIDENT)->SetWindowText(GetResString(IDS_IDENTOK));
						break;
				}
		}
		else
			GetDlgItem(IDC_CDIDENT)->SetWindowText(GetResString(IDS_IDENTNOSUPPORT));
	}
	else
	{
		GetDlgItem(IDC_DDOWNTOTAL)->SetWindowText(_T("?"));
		GetDlgItem(IDC_DUPTOTAL)->SetWindowText(_T("?"));
		GetDlgItem(IDC_DRATIO)->SetWindowText(_T("?"));
		GetDlgItem(IDC_CDIDENT)->SetWindowText(_T("?"));
	}

    // Maverick
    if (m_client->IsRemoteInfoAvaiable())
	{
		buffer.Format(_T("%0.1f"),m_client->GetRemoteBaseModifier());
		GetDlgItem(IDC_DRATIO_REMOTE)->SetWindowText(buffer);
		buffer.Format(_T("%ld"),m_client->GetRemoteRatio());
		GetDlgItem(IDC_DRATING_REMOTE)->SetWindowText(buffer);
		buffer.Format(_T("%ld"),m_client->GetRemoteScore());
		GetDlgItem(IDC_DSCORE_REMOTE)->SetWindowText(buffer);
		if (!m_client->GetRemoteCommunityEnabled()) 
			GetDlgItem(IDC_COMUSER_REMOTE)->SetWindowText(GetResString(IDS_DISABLED));
		else if (m_client->GetRemoteCommunity()) 
			GetDlgItem(IDC_COMUSER_REMOTE)->SetWindowText(GetResString(IDS_YES));
		else
			GetDlgItem(IDC_COMUSER_REMOTE)->SetWindowText(GetResString(IDS_NO));
	}
	else
	{
		if (m_client->Credits())
		{
			buffer.Format(_T("%0.1f"),m_client->GetRemoteBaseModifier());
			GetDlgItem(IDC_DRATIO_REMOTE)->SetWindowText(buffer);
			buffer.Format(_T("%ld"),m_client->GetRemoteRatio());
			GetDlgItem(IDC_DRATING_REMOTE)->SetWindowText(buffer);
			buffer.Format(_T("%ld"),m_client->GetRemoteScore());
			GetDlgItem(IDC_DSCORE_REMOTE)->SetWindowText(buffer);
		}
		else
		{
			GetDlgItem(IDC_DSCORE_REMOTE)->SetWindowText(_T("?"));
			GetDlgItem(IDC_DRATING_REMOTE)->SetWindowText(_T("?"));
			GetDlgItem(IDC_DRATIO_REMOTE)->SetWindowText(_T("?"));
		}
		GetDlgItem(IDC_COMUSER_REMOTE)->SetWindowText(GetResString(IDS_DISABLED));
	}
    // end Maverick

	if (m_client->GetUserName() && !loadedSourceName)
	{
		buffer.Format(_T("%.1f"),(float)m_client->GetScore(false,m_client->IsDownloading(),true));
		GetDlgItem(IDC_DRATING)->SetWindowText(buffer);
	}
	else
		GetDlgItem(IDC_DRATING)->SetWindowText(_T("?"));

	if (m_client->GetUploadState() != US_NONE)
	{
			buffer.Format(_T("%u"),m_client->GetScore(false,m_client->IsDownloading(),false));
			GetDlgItem(IDC_DSCORE)->SetWindowText(buffer);
	}
	else
		GetDlgItem(IDC_DSCORE)->SetWindowText(_T("-"));

	// DonGato (Community Sharing)
	
		//
		if (g_eMuleApp.m_pGlobPrefs->CommunityEnabled())
		{
			if (m_client->IsCommunity())
				GetDlgItem(IDC_COMUSER)->SetWindowText(GetResString(IDS_YES));
			else
				GetDlgItem(IDC_COMUSER)->SetWindowText(GetResString(IDS_NO));
		}
		else
			GetDlgItem(IDC_COMUSER)->SetWindowText(GetResString(IDS_DISABLED));

	// START - enkeyDEV(Ottavio84) -Show download queue wait time-
	if (m_client->GetDownloadState() == DS_ONQUEUE)
		GetDlgItem(IDC_QUEUETIME)->SetWindowText(CastSecondsToHM(m_client->GetQueueWaitTime()/1000));
	else
		GetDlgItem(IDC_QUEUETIME)->SetWindowText(_T("-"));
	// END - enkeyDEV(Ottavio84) -Show download queue wait time-

	return true;

	EMULE_CATCH

	return false;
}

BEGIN_MESSAGE_MAP(CClientDetailDialog, CDialog)
END_MESSAGE_MAP()


// CClientDetailDialog message handlers
void CClientDetailDialog::Localize()
{
	EMULE_TRY

	GetDlgItem(IDC_STATIC30)->SetWindowText(GetResString(IDS_CD_GENERAL));
	GetDlgItem(IDC_STATIC31)->SetWindowText(GetResString(IDS_CD_UNAME));
	GetDlgItem(IDC_STATIC32)->SetWindowText(GetResString(IDS_CD_UHASH));
	GetDlgItem(IDC_STATIC33)->SetWindowText(GetResString(IDS_CD_CSOFT));
	GetDlgItem(IDC_STATIC34)->SetWindowText(GetResString(IDS_CD_UIP));
	GetDlgItem(IDC_STATIC35)->SetWindowText(GetResString(IDS_CD_SIP));
	GetDlgItem(IDC_STATIC36)->SetWindowText(GetResString(IDS_CD_VERSION));
	GetDlgItem(IDC_STATIC37)->SetWindowText(GetResString(IDS_CD_UID));
	GetDlgItem(IDC_STATIC38)->SetWindowText(GetResString(IDS_CD_SNAME));
	GetDlgItem(IDC_STATIC39)->SetWindowText(GetResString(IDS_CD_IDENT));
	GetDlgItem(IDC_STATIC40)->SetWindowText(GetResString(IDS_CD_TRANS));
	GetDlgItem(IDC_STATIC41)->SetWindowText(GetResString(IDS_CD_CDOWN));
	GetDlgItem(IDC_STATIC42)->SetWindowText(GetResString(IDS_CD_DOWN));
	GetDlgItem(IDC_STATIC43)->SetWindowText(GetResString(IDS_CD_ADOWN));
	GetDlgItem(IDC_STATIC44)->SetWindowText(GetResString(IDS_CD_TDOWN));
	GetDlgItem(IDC_STATIC45)->SetWindowText(GetResString(IDS_CD_UP));
	GetDlgItem(IDC_STATIC46)->SetWindowText(GetResString(IDS_CD_AUP));
	GetDlgItem(IDC_STATIC47)->SetWindowText(GetResString(IDS_CD_TUP));

	GetDlgItem(IDC_STATIC50)->SetWindowText(GetResString(IDS_CD_SCORES));
	GetDlgItem(IDC_STATIC51)->SetWindowText(GetResString(IDS_CD_MOD));
	GetDlgItem(IDC_STATIC52)->SetWindowText(GetResString(IDS_CD_RATING));
	GetDlgItem(IDC_STATIC53)->SetWindowText(GetResString(IDS_CD_USCORE));
	GetDlgItem(IDC_STATIC54)->SetWindowText(GetResString(IDS_COMUSER));

	GetDlgItem(IDC_STATIC55)->SetWindowText(GetResString(IDS_CD_SCORES_REMOTE));
	GetDlgItem(IDC_STATIC56)->SetWindowText(GetResString(IDS_CD_MOD));
	GetDlgItem(IDC_STATIC57)->SetWindowText(GetResString(IDS_CD_RATING));
	GetDlgItem(IDC_STATIC58)->SetWindowText(GetResString(IDS_COMUSER));
	GetDlgItem(IDC_STATIC59)->SetWindowText(GetResString(IDS_CD_USCORE));
	GetDlgItem(IDC_QUEUETIMELBL)->SetWindowText(GetResString(IDS_QUEUETIMELBL)); // EC
	GetDlgItem(IDOK)->SetWindowText(GetResString(IDS_FD_CLOSE));

	SetWindowText(GetResString(IDS_CD_TITLE));

	EMULE_CATCH
}
@


1.34
log
@cleanup (friendslot)
@
text
@@


1.33
log
@More name changes, reinstated CMuleCtrlItem class, moved srcsarevisible from CPartFile to CMuleCtrlItem (where it belongs), added "Show Full Status Icons" and "Show Gray Paused" features with corresponding preferences, modified "SmartOpen" code to make it sticky and to make it work with sources with changing states.
@
text
@a241 2
		if (!m_client->GetFriendSlot())
		{
a243 3
		}
		else
			GetDlgItem(IDC_DSCORE)->SetWindowText(GetResString(IDS_FRIENDDETAIL));
@


1.32
log
@Second batch of name changes
@
text
@d126 1
a126 1
		CServer* cserver = theApp.serverlist->GetServerByAddress(s, m_client->GetServerPort()); 
d138 1
a138 1
	CKnownFile* file = theApp.sharedfiles->GetFileByID(m_client->reqfileid);
d167 1
a167 1
		if (theApp.clientcredits->CryptoAvailable())
d256 1
a256 1
		if (theApp.glob_prefs->CommunityEnabled())
@


1.31
log
@First batch of the threatened name changes. Shouldn't be any logic changes here.
@
text
@d142 1
d144 1
@


1.30
log
@Fixed problem with exchanged sources names.
@
text
@d148 1
a148 1
	GetDlgItem(IDC_DDUP)->SetWindowText(CastItoXBytes(m_client->GetTransferedDown()));
d150 1
a150 1
	GetDlgItem(IDC_DDOWN)->SetWindowText(CastItoXBytes(m_client->GetTransferedUp()));
d152 1
a152 1
	buffer.Format(_T("%.1f %s"),(float)m_client->GetDownloadDatarate()/1024,GetResString(IDS_KBYTESEC));
d155 1
a155 1
	buffer.Format(_T("%.1f %s"),max((float)m_client->GetDatarate()/1024,.0),GetResString(IDS_KBYTESEC));
@


1.29
log
@Implemented ConfigDir
@
text
@d66 3
a68 2
	if (m_client->GetUserName())
		GetDlgItem(IDC_DNAME)->SetWindowText(m_client->GetUserName());
@


1.28
log
@SecureIdent Support Mainly
Too many changes to mention here
@
text
@d60 2
a61 1
	if (m_client->GetUserName()) {
d65 1
a65 1
		CString buffer;
d71 2
a72 1
	if (m_client->HasValidHash() && !loadedSourceName){
d75 2
a76 1
		for (uint16 i = 0;i != 16;i++){
d95 13
a107 13
	case SO_EMULE:
	case SO_LMULE:
	case SO_OLDEMULE:
	case SO_CDONKEY:
	case SO_SHAREAZA:
		buffer.Format(_T("v%s"),GetClientVersionString(m_client->GetClientSoft(),m_client->GetMuleVersion()));
		break;
	case SO_UNKNOWN:
		buffer.Format(_T("???"));
		break;
	default:
		buffer.Format(_T("v%s"),GetClientVersionString(m_client->GetClientSoft(),m_client->GetVersion()));
		break;
d118 2
a119 1
	if (m_client->GetServerIP()){
d131 2
a132 1
	else{
d140 1
a140 2
		if ( m_client->GetUploadState() != US_UPLOADING ) 
		{
a141 1
		}
a150 1

d157 2
a158 1
	if (m_client->Credits()){
d164 16
a179 14
	if (theApp.clientcredits->CryptoAvailable()){
			switch(m_client->Credits()->GetCurrentIdentState(m_client->GetIP())){
				case IS_NOTAVAILABLE:
					GetDlgItem(IDC_CDIDENT)->SetWindowText(GetResString(IDS_IDENTNOSUPPORT));
					break;
				case IS_IDFAILED:
				case IS_IDNEEDED:
				case IS_IDBADGUY:
					GetDlgItem(IDC_CDIDENT)->SetWindowText(GetResString(IDS_IDENTFAILED));
					break;
				case IS_IDENTIFIED:
					GetDlgItem(IDC_CDIDENT)->SetWindowText(GetResString(IDS_IDENTOK));
					break;
			}
d184 2
a185 1
	else{
d189 1
d208 2
a209 1
	else {
d229 2
a230 1
	if (m_client->GetUserName() && !loadedSourceName){
d237 4
a240 2
	if (m_client->GetUploadState() != US_NONE){
		if (!m_client->GetFriendSlot()){
d253 2
a254 1
		if (theApp.glob_prefs->CommunityEnabled()){
a255 1
			{
d257 1
a257 1
			} else {
d259 2
a260 2
			}
		} else {
a261 2
		}
	
a322 2


@


1.27
log
@unicode cleanup
@
text
@d158 1
a158 1
		buffer.Format(_T("%.1f"),(float)m_client->Credits()->GetScoreRatio());
d160 18
d286 1
a286 1

@


1.26
log
@use helper method for community check
@
text
@d61 2
a62 2
		loadedSourceName = (strstr(m_client->GetUserName(), GetResString(IDS_LOADEDSOURCE)) != (char*)NULL)
							|| (strstr(m_client->GetUserName(), GetResString(IDS_EXCHANGEDSOURCE)) != (char*)NULL) ;
d118 2
a119 1
		GetDlgItem(IDC_DSIP)->SetWindowText(inet_ntoa(server));
d121 1
a121 1
		CServer* cserver = theApp.serverlist->GetServerByAddress(inet_ntoa(server), m_client->GetServerPort()); 
d240 1
a240 1
		GetDlgItem(IDC_QUEUETIME)->SetWindowText("-");
@


1.25
log
@CHANGE: code cleanup (m_modVerString & m_modExtendedString coverting to CString) [DoubleT]
@
text
@d68 1
a68 1
		GetDlgItem(IDC_DNAME)->SetWindowText("?");
d74 1
a74 1
			buffer2.Format("%02X",m_client->GetUserHash()[i]);
d80 1
a80 1
		GetDlgItem(IDC_DHASH)->SetWindowText("?");
d86 1
a86 1
		GetDlgItem(IDC_DSOFT)->SetWindowText(GetClientNameString(m_client->GetClientSoft())+" ["+GetClientNameAndVersionString(m_client)+"]");
d97 1
a97 1
		buffer.Format("v%s",GetClientVersionString(m_client->GetClientSoft(),m_client->GetMuleVersion()));
d100 1
a100 1
		buffer.Format("???");
d103 1
a103 1
		buffer.Format("v%s",GetClientVersionString(m_client->GetClientSoft(),m_client->GetVersion()));
d106 1
a106 1
	GetDlgItem(IDC_DVERSION)->SetWindowText((CString) buffer+((m_client->GetModVersion().IsEmpty())? "" : " ["+(CString) m_client->GetModVersion()+"]"));
d109 1
a109 1
	buffer.Format("%u (%s)",m_client->GetUserID(),(m_client->HasLowID() ? GetResString(IDS_PRIOLOW):GetResString(IDS_PRIOHIGH)));
d112 1
a112 1
	buffer.Format("%s:%i",m_client->GetFullIP(),m_client->GetUserPort());
d124 1
a124 1
			GetDlgItem(IDC_DSNAME)->SetWindowText("?");
d127 2
a128 2
		GetDlgItem(IDC_DSIP)->SetWindowText("?");
		GetDlgItem(IDC_DSNAME)->SetWindowText("?");
d141 1
a141 1
		GetDlgItem(IDC_DDOWNLOADING)->SetWindowText("-");
d148 1
a148 1
	buffer.Format("%.1f %s",(float)m_client->GetDownloadDatarate()/1024,GetResString(IDS_KBYTESEC));
d151 1
a151 1
	buffer.Format("%.1f %s",max((float)m_client->GetDatarate()/1024,.0),GetResString(IDS_KBYTESEC));
d157 1
a157 1
		buffer.Format("%.1f",(float)m_client->Credits()->GetScoreRatio());
d161 3
a163 3
		GetDlgItem(IDC_DDOWNTOTAL)->SetWindowText("?");
		GetDlgItem(IDC_DUPTOTAL)->SetWindowText("?");
		GetDlgItem(IDC_DRATIO)->SetWindowText("?");
d169 1
a169 1
		buffer.Format("%0.1f",m_client->GetRemoteBaseModifier());
d171 1
a171 1
		buffer.Format("%ld",m_client->GetRemoteRatio());
d173 1
a173 1
		buffer.Format("%ld",m_client->GetRemoteScore());
d185 1
a185 1
			buffer.Format("%0.1f",m_client->GetRemoteBaseModifier());
d187 1
a187 1
			buffer.Format("%ld",m_client->GetRemoteRatio());
d189 1
a189 1
			buffer.Format("%ld",m_client->GetRemoteScore());
d194 3
a196 3
			GetDlgItem(IDC_DSCORE_REMOTE)->SetWindowText("?");
			GetDlgItem(IDC_DRATING_REMOTE)->SetWindowText("?");
			GetDlgItem(IDC_DRATIO_REMOTE)->SetWindowText("?");
d203 1
a203 1
		buffer.Format("%.1f",(float)m_client->GetScore(false,m_client->IsDownloading(),true));
d207 1
a207 1
		GetDlgItem(IDC_DRATING)->SetWindowText("?");;
d211 1
a211 1
			buffer.Format("%u",m_client->GetScore(false,m_client->IsDownloading(),false));
d218 1
a218 1
		GetDlgItem(IDC_DSCORE)->SetWindowText("-");
d221 1
a221 8
	char *copy1, *copy2;
	copy1 = _strupr( _strdup( m_client->GetUserName() ) );
	copy2 = _strupr( _strdup( theApp.glob_prefs->CommunityString() ) );
	if(copy1 && copy2)					// quick crash-fix [FoRcHa]
	{
		bool iscommunity = (strstr(copy1 ,copy2) != NULL );
		free(copy1);
		free(copy2);
d224 1
a224 1
			if (iscommunity)
d233 1
a233 1
	}
@


1.24
log
@minor fixes and improvements
@
text
@d106 1
a106 1
	GetDlgItem(IDC_DVERSION)->SetWindowText((CString) buffer+((m_client->GetModVersion())?" ["+(CString) m_client->GetModVersion()+"]":""));
@


1.23
log
@Added lmule detection, better mldonkey detection and fixed bug 208
@
text
@d70 1
a70 1
	if (m_client->GetUserName() && !loadedSourceName){
@


1.22
log
@shareaza identification.
@
text
@d93 1
d96 1
a96 1
	case SO_SHAREAZA://MTSHAZ
@


1.21
log
@last bugfixes!
@
text
@d95 1
@


1.21.2.1
log
@27a partial merge
@
text
@a94 1
	case SO_LMULE:
d129 1
a129 1
	CKnownFile* file = theApp.sharedfiles->GetFileByID(m_client->GetUploadFileID());
@


1.21.2.2
log
@27c
@
text
@d70 1
a70 1
	if (m_client->HasValidHash() && !loadedSourceName){
@


1.20
log
@BUGFIX: 0000117
@
text
@d84 3
a86 2
	if(m_client->PlusVersion()>0 && m_client->PlusVersion()<0x2600)	//Cax2 - second check - don't display the 38e (pre v1?) mods
		GetDlgItem(IDC_DSOFT)->SetWindowText(GetClientNameString(m_client->GetClientSoft())+" ("+GetClientNameAndVersionString(m_client)+")");
d89 1
a89 1

d104 1
a104 1
	GetDlgItem(IDC_DVERSION)->SetWindowText(buffer);
@


1.19
log
@bugfix: plus v38e & hybrid not showing in details panel
@
text
@d292 1
a292 1

@


1.18
log
@bugfixed bug 5.
@
text
@d84 1
a84 1
	if(m_client->PlusVersion()>0)
@


1.17
log
@all my stable changes and some minor fixes (refer to changelog)
@
text
@d83 6
a88 2
	// Display client and client version 
	GetDlgItem(IDC_DSOFT)->SetWindowText(GetClientNameString(m_client->GetClientSoft()));
@


1.16
log
@minor graphic details bugfixed, now preview player selection same as official
@
text
@d234 8
@


1.15
log
@Localization of IDC_CURRENTLY
@
text
@d144 1
a144 1
	buffer.Format("%.1f %s",(float)m_client->GetDatarate()/1024,GetResString(IDS_KBYTESEC));
@


1.14
log
@Added instrumentation for debugging memory leaks :
#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

To all .cpp files (I hope I didn't miss any one)
@
text
@d129 1
a129 1
			GetDlgItem(IDC_CURRENTLY)->SetWindowText(_T("Waiting to download :"));
@


1.14.2.1
log
@v1a upgrade
@
text
@d129 1
a129 1
			GetDlgItem(IDC_CURRENTLY)->SetWindowText(GetResString(IDS_CURRENTLY));
d144 1
a144 1
	buffer.Format("%.1f %s",max((float)m_client->GetDatarate()/1024,.0),GetResString(IDS_KBYTESEC));
@


1.13
log
@*** empty log message ***
@
text
@d26 6
@


1.12
log
@*** empty log message ***
@
text
@d120 5
d126 1
d280 3
a282 1
}@


1.11
log
@*** empty log message ***
@
text
@d79 1
a79 12
	if ( m_client->GetClientSoft() != SO_UNKNOWN )
	{
		if ( !m_client->GetVersion() )
		{
			buffer.Format("v%s",GetClientVersionString(m_client->GetClientSoft(),m_client->GetVersion()));
		}
		else
		{
			buffer.Format("v%s",GetClientVersionString(m_client->GetClientSoft(),m_client->GetMuleVersion()));
		}
	}
	else
d81 6
d88 4
@


1.10
log
@Statistics related changes
@
text
@d75 14
a88 43
	
	switch(m_client->GetClientSoft()){
		case SO_UNKNOWN:
			GetDlgItem(IDC_DSOFT)->SetWindowText("?");
			GetDlgItem(IDC_DVERSION)->SetWindowText("?");
			break;
		case SO_EMULE:
		case SO_OLDEMULE:
			GetDlgItem(IDC_DSOFT)->SetWindowText("eMule");
			if (m_client->GetMuleVersion()){
				buffer.Format("v%s",GetClientVersionString(m_client->GetClientSoft(),m_client->GetMuleVersion()));
				GetDlgItem(IDC_DVERSION)->SetWindowText(buffer);
			}
			else
				GetDlgItem(IDC_DVERSION)->SetWindowText("?");
			break;
		case SO_CDONKEY:
			GetDlgItem(IDC_DSOFT)->SetWindowText("cDonkey");
			if (m_client->GetMuleVersion()){
				buffer.Format("v%s",GetClientVersionString(SO_CDONKEY,m_client->GetMuleVersion()));
				GetDlgItem(IDC_DVERSION)->SetWindowText(buffer);
			}
			else
				GetDlgItem(IDC_DVERSION)->SetWindowText("?");
			break;
		case SO_EDONKEY:
			GetDlgItem(IDC_DSOFT)->SetWindowText("eDonkey");
			buffer.Format("v%s",GetClientVersionString(SO_EDONKEY,m_client->GetVersion()));
			GetDlgItem(IDC_DVERSION)->SetWindowText(buffer);
			break;
	case SO_EDONKEYHYBRID:
			GetDlgItem(IDC_DSOFT)->SetWindowText("eDonkeyHybrid");
			buffer.Format("v%s",GetClientVersionString(SO_EDONKEYHYBRID,m_client->GetVersion()));
			GetDlgItem(IDC_DVERSION)->SetWindowText(buffer);
			break;
		// By Maverick
		// Identify MlDonkey
		case SO_MLDONKEY:
			GetDlgItem(IDC_DSOFT)->SetWindowText("mlDonkey");
			buffer.Format("v%s",GetClientVersionString(SO_MLDONKEY,m_client->GetVersion()));
			GetDlgItem(IDC_DVERSION)->SetWindowText(buffer);
			break;
		// END Maverick
d90 6
@


1.9
log
@more 26b merges
@
text
@d85 1
a85 1
				buffer.Format("v0.%02X",m_client->GetMuleVersion());
d94 1
a94 1
				buffer.Format("v0.%02X",m_client->GetMuleVersion());
d102 1
a102 1
			buffer.Format("v%i",m_client->GetVersion());
d107 1
a107 1
			buffer.Format("v%i",m_client->GetVersion()-1000);
d114 1
a114 1
			buffer.Format("v%i",m_client->GetVersion());
@


1.8
log
@look changes+
@
text
@d91 9
a107 5
			GetDlgItem(IDC_DVERSION)->SetWindowText(buffer);
			break;
	case SO_CDONKEY:
			GetDlgItem(IDC_DSOFT)->SetWindowText("CDonkey");
			buffer.Format("v%i",m_client->GetVersion());
@


1.7
log
@.26b port
@
text
@d98 1
a98 1
			buffer.Format("v%i",m_client->GetVersion());
@


1.6
log
@CDonkey string added
@
text
@d58 1
a58 1
	char buffer[100];
d65 6
a70 3
		buffer[0] = 0;
		for (uint16 i = 0;i != 16;i++)
			sprintf(buffer,"%s%02X",buffer,m_client->GetUserHash()[i]);
d85 1
a85 1
				sprintf(buffer,"v0.%02X",m_client->GetMuleVersion());
d93 1
a93 1
			sprintf(buffer,"v%i",m_client->GetVersion());
d98 1
a98 1
			sprintf(buffer,"v%i",m_client->GetVersion());
d103 1
a103 1
			sprintf(buffer,"v%i",m_client->GetVersion());
d110 1
a110 1
			sprintf(buffer,"v%i",m_client->GetVersion());
d116 1
a116 1
	sprintf(buffer,"%u (%s)",m_client->GetUserID(),(m_client->HasLowID() ? GetResString(IDS_PRIOLOW):GetResString(IDS_PRIOHIGH)));
d119 1
a119 1
	sprintf(buffer,"%s:%i",m_client->GetFullIP(),m_client->GetUserPort());
d144 1
d146 1
a146 2
	CastItoXBytes(m_client->GetTransferedDown(),buffer);
	GetDlgItem(IDC_DDUP)->SetWindowText(buffer);
a147 2
	CastItoXBytes(m_client->GetTransferedUp(),buffer);
	GetDlgItem(IDC_DDOWN)->SetWindowText(buffer);
d149 1
a149 1
	sprintf(buffer,"%.1f %s",(float)m_client->GetDownloadDatarate()/1024,GetResString(IDS_KBYTESEC));
d152 1
a152 1
	sprintf(buffer,"%.1f %s",(float)m_client->GetDatarate()/1024,GetResString(IDS_KBYTESEC));
d156 3
a158 5
		CastItoXBytes(m_client->Credits()->GetDownloadedTotal(),buffer);
		GetDlgItem(IDC_DUPTOTAL)->SetWindowText(buffer);
		CastItoXBytes(m_client->Credits()->GetUploadedTotal(),buffer);
		GetDlgItem(IDC_DDOWNTOTAL)->SetWindowText(buffer);
		sprintf(buffer,"%.1f",(float)m_client->Credits()->GetScoreRatio());
d170 1
a170 1
		sprintf(buffer,"%0.1f",m_client->GetRemoteBaseModifier());
d172 1
a172 1
		sprintf(buffer,"%ld",m_client->GetRemoteRatio());
d174 1
a174 1
		sprintf(buffer,"%ld",m_client->GetRemoteScore());
d186 1
a186 1
			sprintf(buffer,"%0.1f",m_client->GetRemoteBaseModifier());
d188 1
a188 1
			sprintf(buffer,"%ld",m_client->GetRemoteRatio());
d190 1
a190 1
			sprintf(buffer,"%ld",m_client->GetRemoteScore());
d204 1
a204 1
		sprintf(buffer,"%.1f",(float)m_client->GetScore(false,m_client->IsDownloading(),true));
d212 1
a212 1
			sprintf(buffer,"%u",m_client->GetScore(false,m_client->IsDownloading(),false));
@


1.5
log
@Hybrid client and CDonkey detection
@
text
@d98 5
@


1.4
log
@updated to .25b codebase
@
text
@d93 5
@


1.4.4.1
log
@initial upgrade to .26
@
text
@d93 2
a94 5
		case SO_EDONKEYHYBRID:
			GetDlgItem(IDC_DSOFT)->SetWindowText("eDonkeyHybrid");
			sprintf(buffer,"v%i",m_client->GetVersion());
			GetDlgItem(IDC_DVERSION)->SetWindowText(buffer);
			break;
d96 1
a96 1
			GetDlgItem(IDC_DSOFT)->SetWindowText("MlDonkey");
d100 1
@


1.4.2.1
log
@updating this branch...
@
text
@@


1.3
log
@*** empty log message ***
@
text
@d203 2
a204 2
		sprintf(buffer,"%u",m_client->GetScore(false,m_client->IsDownloading(),false));
		GetDlgItem(IDC_DSCORE)->SetWindowText(buffer);
@


1.2
log
@*** empty log message ***
@
text
@d158 36
d273 6
@


1.1
log
@*** empty log message ***
@
text
@d127 1
a127 1
		GetDlgItem(IDC_DDOWNLOADING)->SetWindowText(file->GetFileName());
@

