head	1.10;
access;
symbols
	PublicRelease_1_2e:1.10
	Interim_Release_1-2e_RC1:1.10
	PublicRelease_1_2d:1.9
	Interim_Release_1-2d_RC1:1.9
	Interim_Release_1-2d_beta1:1.9
	PublicRelease_1_2c:1.8
	Interim_Release_1-2c_RC1:1.8
	Interim_Release_1-2c_beta1:1.8
	PublicRelease_1_2b:1.8
	Interim_Release_1-2b_RC1:1.8
	PublicRelease_1_2a:1.8
	Interim_Release_1-2a_RC1:1.8
	Interim_Release_1-2a_beta2:1.7
	Interim_Release_1-2a_beta1:1.7
	PublicRelease_1_2:1.7
	Interim_Release_1-2_RC1:1.7
	Interim_Release_1-2_beta1:1.3
	PublicRelease_1_1g:1.3
	Interim_Release_1-1g_RC3:1.3
	Interim_Release_1-1g_RC2:1.3
	Interim_Release_1-1g_RC1:1.3
	Interim_Release_1-1g_beta2:1.3
	Interim_Release_1-1g_beta1:1.3
	PublicRelease_1_1f:1.3
	Interim_Release_1-1f_RC1:1.3
	PublicRelease_1_1e:1.3
	Interim_Release_1-1e_RC2:1.3
	Interim_Release_1-1e_RC1:1.3
	Interim_Release_1-1e_beta1:1.3
	PublicRelease_1_1d:1.3
	Interim_Release_1-1d_RC1:1.3
	PublicRelease_1_1c:1.3
	Interim_Release_1-1c_RC1:1.3
	Interim_Release_1-1c_beta2:1.3
	Interim_Release_1-1c_beta1:1.3
	PublicRelease_1_1b:1.3
	Interim_Release_1-1b_RC1:1.3
	PublicRelease_1_1a:1.3
	Interim_Release_1-1a_RC2:1.3
	Interim_Release_1-1a_RC1:1.3
	Interim_Release_1-1a_beta2:1.3
	Interim_Release_1-1a_beta1:1.3
	PublicRelease_1_1:1.3
	Interim_Release_1-1_beta1:1.3
	PublicRelease_1o:1.3
	Interim_Release_1o_RC1:1.3
	Interim_Release_1o_beta1:1.3
	PublicRelease_1n:1.3
	Interim_Release_1n_RC2:1.3
	Interim_Release_1n_RC1:1.3
	Interim_Release_1n_beta2:1.3
	Interim_Release_1n_beta1:1.3
	PublicRelease_1m:1.3
	Interim_Release_1m_beta1:1.3
	PublicRelease_1l:1.3
	Interim_Release_1l_RC3:1.3
	Interim_Release_1l_RC2:1.3
	Interim_Release_1l_RC1:1.3
	Interim_Release_1l_beta2:1.3
	Interim_Release_1l_beta1:1.3
	PublicRelease_1k:1.3
	Interim_Release_1k_RC4:1.3
	Interim_1k_RC3:1.3
	Interim_1k_RC2:1.3
	Interim_Release_1k_RC1:1.3
	Interim_Release_1k_beta5:1.3
	Intrerim_Release_1k_beta4:1.3
	Interim_Release_1k_beta1:1.3
	PublicRelease_1j:1.3
	Interim_Release_1J_RC3:1.3
	Interim_Release_1j_RC3:1.3
	Interim_Release_1j_RC2:1.3
	Interim_Release_1j_RC1:1.3
	Interim_Release_1j_beta2:1.3
	Interim_Release_1j_beta1:1.3
	PublicRelease_1i:1.3
	Interim_Release_1i_RC6:1.3
	Interim_Release_1i_RC3:1.3
	Interim_Release_1i_RC2:1.3
	Interim_Release_1i_RC1:1.3
	Interim_Release_1i_beta3:1.3
	Interim_Release_1i_beta2:1.3
	Interim_Release_1i_beta1:1.3
	PublicRelease_1h:1.3
	Interim_Release_1h_rc2:1.3
	Interim_Release_1h_RC1:1.3
	Interim_Release_1h_beta2:1.3
	Interim_Release_1h_beta1_now:1.3
	Interim_Release_1h_beta1:1.3
	PublicRelease_1g:1.3
	Interim_Release_1g_RC6_Final:1.3
	Interim_Release_1g_RC6:1.3
	Interim_Release_1g_RC5:1.3
	Interim_Release_1g_RC4:1.3
	Interim_Release_1g_RC3:1.3
	Interim_Release_1g_beta2:1.1
	Interim_Release_1g_beta1:1.1
	Interim_Release_1f_RC4:1.1
	Interim_Release_1f_RC3:1.1
	Interim_Release_1f_RC2:1.1
	Interim_Release_1f_RC:1.1
	Interim_Release_1f_beta2:1.1
	Interim_Release_1f_beta1:1.1
	PublicRelease_1e:1.1
	Interim_Release_1e_RC2:1.1
	Interim_Release_1e_RC:1.1
	Interim_Release_1e_beta3:1.1
	Interim_Release_1e_beta2:1.1
	Interim_Release_1e_beta2_before_kuchin:1.1
	Interim_Release_1e_beta1:1.1
	PublicRelease_1c:1.1
	featurestest:1.1.0.16
	Interim_Release_1c_RC:1.1
	Interim_Release_1c_beta2:1.1
	Interim_Release_1c_beta1:1.1
	threaded_downloadqueue:1.1.0.14
	PublicRelease_1b:1.1
	Interim_Release_1b_beta2:1.1
	Interim_Release_1b_beta1:1.1
	proxydeadlake:1.1.0.12
	PublicRelease_1a:1.1
	Interim_Release_1a_beta2:1.1
	BerkeleyDb:1.1.0.10
	Interim_Release_1a_beta1:1.1
	PublicRelease_1:1.1
	goldfish:1.1
	eMulePlus_1_RC2:1.1
	eMulePlus_26b_1RC1:1.1
	PreRelease_26b_i0e:1.1
	before_26d_merge:1.1
	Interim_Release_26b_i0d:1.1
	Interim_Release_26b_i0c:1.1
	Interim_Release_26b_i0b:1.1
	Interim_Release_26b_i0a:1.1
	systraydlg:1.1.0.8
	plus26based:1.1.0.6
	Interim_Release_25b_i0b:1.1
	Proxy_Dev:1.1
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.10
date	2008.07.14.00.26.56;	author aw3;	state Exp;
branches;
next	1.9;

1.9
date	2007.12.27.21.02.07;	author aw3;	state Exp;
branches;
next	1.8;

1.8
date	2006.07.27.01.58.52;	author aw3;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.05.17.53.35;	author aw3;	state Exp;
branches;
next	1.6;

1.6
date	2006.02.04.14.50.50;	author aw3;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.04.08.49.05;	author morphisthebrave;	state Exp;
branches;
next	1.4;

1.4
date	2006.02.03.02.55.29;	author aw3;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.15.09.10.05;	author partyckip;	state Exp;
branches;
next	1.2;

1.2
date	2003.06.09.21.59.35;	author partyckip;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.18.21.24;	author cax2;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.01.28.16.54.38;	author cax2;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Removed unused code.
@
text
@//	This file is part of eMule Plus
//
//	This program is free software; you can redistribute it and/or
//	modify it under the terms of the GNU General Public License
//	as published by the Free Software Foundation; either
//	version 2 of the License, or (at your option) any later version.
//
//	This program is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU General Public License for more details.
//
//	You should have received a copy of the GNU General Public License
//	along with this program; if not, write to the Free Software
//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#pragma once

class CWebServer;

void StartSockets(CWebServer *pThis);
void StopSockets();

#define EP_MAX_HTTPGMTSTR		32
void Gmt2HttpStr(char *pcOut, const struct tm *pTm);

class CWebSocket
{
public:
	void SetParent(CWebServer *pParent);
	CWebServer* m_pParent;

	class CChunk
	{
	public:
		char* m_pData;
		char* m_pToSend;
		DWORD m_dwSize;
		CChunk* m_pNext;

		~CChunk() { delete[] m_pData; }
	};

	CChunk	*m_pHead; // tails of what has to be sent
	CChunk	*m_pTail;

	char	*m_pBuf;
	DWORD	m_dwRecv;
	DWORD	m_dwBufSize;
	DWORD	m_dwHttpHeaderLen;
	DWORD	m_dwHttpContentLen;

	SOCKET	m_hSocket;
	bool	m_bCanRecv;
	bool	m_bCanSend;
	bool	m_bValid;

	void OnReceived(void *pData, DWORD dwDataSize); // must be implemented
	void SendData(const void *pData, DWORD dwDataSize);
	void SendContent(LPCSTR szStdResponse, const void *pContent, DWORD dwContentSize);
	void SendReply(int iHTTPRespCode);
	void Disconnect();

	void OnRequestReceived(char *pHeader, DWORD dwHeaderLen, char *pData, DWORD dwDataLen);
};
@


1.9
log
@WebServer: fixed application date format changed after WebServer usage {glaskrug} (previous solution based on setlocale was causing time format change from time to time).
@
text
@a58 1
	void SendData(LPCSTR szText) { SendData(szText, lstrlenA(szText)); }
@


1.8
log
@Minor corrections and improvements (from original).
@
text
@d1 15
d23 3
@


1.7
log
@Fixed Unicode issues in processing of the socket streams;
Created a routine for sending simple replies.
@
text
@d22 1
a22 1
		~CChunk() { if (m_pData) delete[] m_pData; }
@


1.6
log
@Corrected an error created in previous merging.
@
text
@d8 1
a8 1
class CWebSocket 
d11 1
a11 1
	void SetParent(CWebServer *);
d14 1
a14 1
	class CChunk 
d25 2
a26 2
	CChunk* m_pHead; // tails of what has to be sent
	CChunk* m_pTail;
d28 16
a43 15
	TCHAR* m_pBuf;
	DWORD m_dwRecv;
	DWORD m_dwBufSize;
	DWORD m_dwHttpHeaderLen;
	DWORD m_dwHttpContentLen;

	bool m_bCanRecv;
	bool m_bCanSend;
	bool m_bValid;
	SOCKET m_hSocket;

	void OnReceived(void* pData, DWORD dwDataSize); // must be implemented
	void SendData(const void* pData, DWORD dwDataSize);
	void SendData(LPCTSTR szText) { SendData(szText, lstrlen(szText)); }
	void SendContent(int iHTTPResponseCode, LPCSTR szStdResponse, const void *pContent, DWORD dwContentSize);
d46 1
a46 1
	void OnRequestReceived(TCHAR* pHeader, DWORD dwHeaderLen, TCHAR* pData, DWORD dwDataLen);
@


1.5
log
@WebSocket: Added the ablity for SendContent() to send HTTP headers other than "200 OK"
@
text
@d42 1
a42 1
	void SendContent(int iHTTPResponseCode, LPCTSTR szStdResponse, const void* pContent, DWORD dwContentSize);
@


1.4
log
@Unicode correction; Removed unused service.
@
text
@d42 1
a42 1
	void SendContent(LPCSTR szStdResponse, const void *pContent, DWORD dwContentSize);
@


1.3
log
@unicode cleanup
@
text
@d42 1
a42 2
	void SendContent(LPCTSTR szStdResponse, const void* pContent, DWORD dwContentSize);
	void SendTextContent(LPCTSTR szText) { SendContent(_T(""), szText, lstrlen(szText)); }
@


1.2
log
@unicode cleanup
@
text
@d28 1
a28 1
	char* m_pBuf;
d41 1
a41 1
	void SendData(LPCSTR szText) { SendData(szText, lstrlenA(szText)); }
d46 1
a46 1
	void OnRequestReceived(char* pHeader, DWORD dwHeaderLen, char* pData, DWORD dwDataLen);
@


1.1
log
@*** empty log message ***
@
text
@d42 2
a43 2
	void SendContent(LPCSTR szStdResponse, const void* pContent, DWORD dwContentSize);
	void SendTextContent(LPCSTR szText) { SendContent("", szText, lstrlenA(szText)); }
@


1.1.4.1
log
@updating this branch...
@
text
@@

