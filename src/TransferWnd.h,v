head	1.38;
access;
symbols
	PublicRelease_1_2e:1.38
	Interim_Release_1-2e_RC1:1.38
	PublicRelease_1_2d:1.37
	Interim_Release_1-2d_RC1:1.37
	Interim_Release_1-2d_beta1:1.37
	PublicRelease_1_2c:1.36
	Interim_Release_1-2c_RC1:1.36
	Interim_Release_1-2c_beta1:1.36
	PublicRelease_1_2b:1.36
	Interim_Release_1-2b_RC1:1.36
	PublicRelease_1_2a:1.33
	Interim_Release_1-2a_RC1:1.33
	Interim_Release_1-2a_beta2:1.33
	Interim_Release_1-2a_beta1:1.33
	PublicRelease_1_2:1.33
	Interim_Release_1-2_RC1:1.33
	Interim_Release_1-2_beta1:1.33
	PublicRelease_1_1g:1.33
	Interim_Release_1-1g_RC3:1.33
	Interim_Release_1-1g_RC2:1.33
	Interim_Release_1-1g_RC1:1.33
	Interim_Release_1-1g_beta2:1.33
	Interim_Release_1-1g_beta1:1.30
	PublicRelease_1_1f:1.30
	Interim_Release_1-1f_RC1:1.30
	PublicRelease_1_1e:1.30
	Interim_Release_1-1e_RC2:1.30
	Interim_Release_1-1e_RC1:1.30
	Interim_Release_1-1e_beta1:1.30
	PublicRelease_1_1d:1.30
	Interim_Release_1-1d_RC1:1.30
	PublicRelease_1_1c:1.30
	Interim_Release_1-1c_RC1:1.30
	Interim_Release_1-1c_beta2:1.30
	Interim_Release_1-1c_beta1:1.30
	PublicRelease_1_1b:1.29
	Interim_Release_1-1b_RC1:1.29
	PublicRelease_1_1a:1.29
	Interim_Release_1-1a_RC2:1.29
	Interim_Release_1-1a_RC1:1.29
	Interim_Release_1-1a_beta2:1.29
	Interim_Release_1-1a_beta1:1.29
	PublicRelease_1_1:1.29
	Interim_Release_1-1_beta1:1.29
	PublicRelease_1o:1.28
	Interim_Release_1o_RC1:1.28
	Interim_Release_1o_beta1:1.28
	PublicRelease_1n:1.28
	Interim_Release_1n_RC2:1.28
	Interim_Release_1n_RC1:1.28
	Interim_Release_1n_beta2:1.28
	Interim_Release_1n_beta1:1.28
	PublicRelease_1m:1.28
	Interim_Release_1m_beta1:1.28
	PublicRelease_1l:1.28
	Interim_Release_1l_RC3:1.28
	Interim_Release_1l_RC2:1.28
	Interim_Release_1l_RC1:1.28
	Interim_Release_1l_beta2:1.28
	Interim_Release_1l_beta1:1.27
	PublicRelease_1k:1.27
	Interim_Release_1k_RC4:1.27
	Interim_1k_RC3:1.27
	Interim_1k_RC2:1.27
	Interim_Release_1k_RC1:1.27
	Interim_Release_1k_beta5:1.27
	Intrerim_Release_1k_beta4:1.27
	Interim_Release_1k_beta1:1.26
	PublicRelease_1j:1.25
	Interim_Release_1J_RC3:1.25
	Interim_Release_1j_RC3:1.25
	Interim_Release_1j_RC2:1.24
	Interim_Release_1j_RC1:1.23
	Interim_Release_1j_beta2:1.23
	Interim_Release_1j_beta1:1.23
	PublicRelease_1i:1.23
	Interim_Release_1i_RC6:1.23
	Interim_Release_1i_RC3:1.22
	Interim_Release_1i_RC2:1.22
	Interim_Release_1i_RC1:1.22
	Interim_Release_1i_beta3:1.22
	Interim_Release_1i_beta2:1.22
	Interim_Release_1i_beta1:1.20
	PublicRelease_1h:1.14
	Interim_Release_1h_rc2:1.14
	Interim_Release_1h_RC1:1.14
	Interim_Release_1h_beta2:1.11
	Interim_Release_1h_beta1_now:1.8
	Interim_Release_1h_beta1:1.8
	PublicRelease_1g:1.6
	Interim_Release_1g_RC6_Final:1.6
	Interim_Release_1g_RC6:1.6
	Interim_Release_1g_RC5:1.6
	Interim_Release_1g_RC4:1.6
	Interim_Release_1g_RC3:1.6
	Interim_Release_1g_beta2:1.6
	Interim_Release_1g_beta1:1.6
	Interim_Release_1f_RC4:1.5
	Interim_Release_1f_RC3:1.5
	Interim_Release_1f_RC2:1.5
	Interim_Release_1f_RC:1.5
	Interim_Release_1f_beta2:1.4
	Interim_Release_1f_beta1:1.4
	PublicRelease_1e:1.4
	Interim_Release_1e_RC2:1.4
	Interim_Release_1e_RC:1.4
	Interim_Release_1e_beta3:1.4
	Interim_Release_1e_beta2:1.4
	Interim_Release_1e_beta2_before_kuchin:1.4
	Interim_Release_1e_beta1:1.4
	PublicRelease_1c:1.3
	featurestest:1.3.0.8
	Interim_Release_1c_RC:1.3
	Interim_Release_1c_beta2:1.3
	Interim_Release_1c_beta1:1.3
	threaded_downloadqueue:1.3.0.6
	PublicRelease_1b:1.3
	Interim_Release_1b_beta2:1.3
	Interim_Release_1b_beta1:1.3
	proxydeadlake:1.3.0.4
	PublicRelease_1a:1.3
	Interim_Release_1a_beta2:1.3
	BerkeleyDb:1.3.0.2
	Interim_Release_1a_beta1:1.3
	PublicRelease_1:1.3
	goldfish:1.3
	eMulePlus_1_RC2:1.3
	eMulePlus_26b_1RC1:1.3
	PreRelease_26b_i0e:1.3
	before_26d_merge:1.3
	Interim_Release_26b_i0d:1.2
	Interim_Release_26b_i0c:1.1
	Interim_Release_26b_i0b:1.1
	Interim_Release_26b_i0a:1.1
	systraydlg:1.1.0.8
	plus26based:1.1.0.6
	Interim_Release_25b_i0b:1.1
	Proxy_Dev:1.1
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.38
date	2008.05.25.01.12.50;	author aw3;	state Exp;
branches;
next	1.37;

1.37
date	2008.01.23.05.13.52;	author aw3;	state Exp;
branches;
next	1.36;

1.36
date	2006.12.29.04.08.22;	author aw3;	state Exp;
branches;
next	1.35;

1.35
date	2006.12.26.11.04.27;	author eklmn;	state Exp;
branches;
next	1.34;

1.34
date	2006.12.23.08.54.18;	author eklmn;	state Exp;
branches;
next	1.33;

1.33
date	2005.09.26.05.17.19;	author aw3;	state Exp;
branches;
next	1.32;

1.32
date	2005.09.23.10.56.08;	author eklmn;	state Exp;
branches;
next	1.31;

1.31
date	2005.09.19.22.14.59;	author eklmn;	state Exp;
branches;
next	1.30;

1.30
date	2005.01.17.18.34.55;	author katsyonak;	state Exp;
branches;
next	1.29;

1.29
date	2004.10.08.03.28.31;	author dongato;	state Exp;
branches;
next	1.28;

1.28
date	2004.05.17.18.07.44;	author katsyonak;	state Exp;
branches;
next	1.27;

1.27
date	2004.03.22.04.40.45;	author aw3;	state Exp;
branches;
next	1.26;

1.26
date	2004.02.15.11.55.58;	author morevit;	state Exp;
branches;
next	1.25;

1.25
date	2004.01.14.16.17.02;	author netwolf1;	state Exp;
branches;
next	1.24;

1.24
date	2004.01.11.00.04.44;	author netwolf1;	state Exp;
branches;
next	1.23;

1.23
date	2003.11.27.13.57.18;	author eklmn;	state Exp;
branches;
next	1.22;

1.22
date	2003.10.15.03.51.45;	author morevit;	state Exp;
branches;
next	1.21;

1.21
date	2003.10.13.15.19.34;	author morevit;	state Exp;
branches;
next	1.20;

1.20
date	2003.09.28.13.55.07;	author dongato;	state Exp;
branches;
next	1.19;

1.19
date	2003.09.24.20.37.30;	author dongato;	state Exp;
branches;
next	1.18;

1.18
date	2003.09.24.16.52.26;	author morevit;	state Exp;
branches;
next	1.17;

1.17
date	2003.09.23.16.52.50;	author morevit;	state Exp;
branches;
next	1.16;

1.16
date	2003.09.20.15.39.32;	author morevit;	state Exp;
branches;
next	1.15;

1.15
date	2003.09.19.14.42.46;	author morevit;	state Exp;
branches;
next	1.14;

1.14
date	2003.09.09.16.21.59;	author dongato;	state Exp;
branches;
next	1.13;

1.13
date	2003.09.06.18.23.57;	author kuchin;	state Exp;
branches;
next	1.12;

1.12
date	2003.09.05.01.02.52;	author dongato;	state Exp;
branches;
next	1.11;

1.11
date	2003.09.04.19.27.33;	author kuchin;	state Exp;
branches;
next	1.10;

1.10
date	2003.09.04.03.53.30;	author dongato;	state Exp;
branches;
next	1.9;

1.9
date	2003.08.23.00.20.51;	author forcha;	state Exp;
branches;
next	1.8;

1.8
date	2003.08.15.15.11.29;	author forcha;	state Exp;
branches;
next	1.7;

1.7
date	2003.08.03.20.42.05;	author forcha;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.01.08.59.03;	author kuchin;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.12.13.22.10;	author kuchin;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.03.10.12.20;	author kuchin;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.14.18.25.46;	author cax2;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.13.19.08.33;	author cax2;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.18.21.24;	author cax2;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.01.28.16.54.32;	author cax2;	state Exp;
branches;
next	;


desc
@@


1.38
log
@Removed unused defines.
@
text
@//this file is part of eMule
//Copyright (C)2002 Merkur ( merkur-@@users.sourceforge.net / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the GNU General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#pragma once

#include "UploadListCtrl.h"
#include "DownloadListCtrl.h"
#include "QueueListCtrl.h"
#include "ClientListctrl.h"
#include "InfoListCtrl.h"
#include "RollupCtrl.h"
#include "ResizableLib\ResizableDialog.h"
#include "ToolTips\PPToolTip.h"
#include "TabCtrl.hpp"
#include "Tabs.h"
#include "Loggable.h"

enum EnumExpandType
{
	COLLAPSE_ONLY = 0,
	EXPAND_ONLY = 1,
	EXPAND_COLLAPSE = 2
};

#define USRMSG_CLEARCOMPLETED	WM_USER + 5


class CDummyForTabs;

class CCatTabs : public CTabs
{
	void DrawItem(CDC *pDC, int iItem);
};

enum EnumMiddlePanelWindows
{
	MPW_UPLOADLIST = 0,
	MPW_UPLOADQUEUELIST,
	MPW_UPLOADCLIENTLIST
};

// CTransferWnd dialog

class CTransferWnd : public CResizableDialog, public CLoggable
{
	DECLARE_DYNAMIC(CTransferWnd)

public:
					CTransferWnd(CWnd* pParent = NULL);   // standard constructor
	virtual			~CTransferWnd();
	void			Localize();
// Dialog Data
	enum
	{
		IDD = IDD_TRANSFER
	};

	virtual BOOL PreTranslateMessage(MSG* pMsg);

	void UpdateDownloadHeader();
	void UpdateUploadHeader();
	void UpdateInfoHeader();
	void InitRollupItemHeights();
	void SaveRollupItemHeights();
	void SwitchUploadList();
	afx_msg void OnDestroy();	// eklmn: bugfix(00): resource cleanup due to CResizableDialog

	void EditCatTabLabel(int index,CString newlabel);
	void UpdateCatTabTitles();
	void UpdateKnown();
	void UpdateQueueFilter();

	afx_msg void	OnTcnSelchangeDltab(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void	OnNMRClickDltab(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void	OnLvnBeginDrag(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void	OnTabMovement(NMHDR *pNMHDR, LRESULT *pResult);
	
	void OnMouseMove(UINT nFlags, CPoint point);
	void OnLButtonUp(UINT nFlags, CPoint point);

	int				AddCategory(CString newtitle, CString newincoming, CString newtemp, CString newcomment, CString newautocat, bool bAddTab=true);
	int				AddPredefinedCategory(EnumCategories ePredefinedCatID, bool bAddTab=true);

protected:
	virtual void	DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
	virtual BOOL	OnInitDialog();
	virtual BOOL	OnCommand(WPARAM wParam, LPARAM lParam);
	virtual BOOL	OnNotify(WPARAM wParam, LPARAM lParam, LRESULT* pResult);

	DECLARE_MESSAGE_MAP()

private:
	int				m_nTabDropIndex;
	bool			m_bIsDragging;
	CImageList	   *m_pDragImage;
	int				m_iTabRightClickIndex;

private:
	void		OnDblClickDltab();
	int			GetTabUnderMouse(CPoint* point);
	CString		GetTabStatistic(byte tab); 
	void		GetInfo4ToolTip(NM_PPTOOLTIP_DISPLAY *pNotify);

public:
	CCatTabs				m_ctlDLTabs;
	
	CDummyForTabs			*m_pwndDummyForDownloadList;

	CDownloadListCtrl		m_ctlDownloadList;
	CQueueListCtrl			m_ctlQueueList;
	CClientListCtrl			m_ctlClientList;
	EnumMiddlePanelWindows	m_nActiveWnd;
	
	CUploadListCtrl			m_ctlUploadList;
	CInfoListCtrl			m_ctlInfoList;
	CRollupCtrl				m_ctlRollup;
	CPPToolTip				m_ttip;
};
@


1.37
log
@Fixed loading of InfoView column splitter (default value was used on every start).
@
text
@a16 1

a37 5
#define IDC_DOWNLOADLIST	124
#define IDC_UPLOADLIST		125
#define IDC_QUEUELIST		126
#define IDC_CLIENTLIST		127

@


1.36
log
@Removed double #include; Removed unrequired class member.
@
text
@a76 5
	long			GetDetailColumnWidth()
	{
		return m_ctlInfoList.GetColumn();
	}

a111 2
	bool			m_bFirstShow;

@


1.35
log
@removed unused variables (thanks Aw3)
@
text
@a29 1
#include "afxcmn.h"
a118 1
	int				m_nDragIndex;
@


1.34
log
@removed UpdateToolTips()-function since RelayEvent() is enough to upade the tooltip on moving
@
text
@a117 5
	int				m_iOldToolTipItemDownload;
	int				m_iOldToolTipItemUpload;
	int				m_iOldToolTipItemQueue;
	int				m_iOldToolTipItemClients;
	int				m_nLastCatTT;
a119 2
	POINT			m_pLastMousePoint;

@


1.33
log
@GetInfo4ToolTip moved to private; Formatting;
Reduced number of the similar class sections.
@
text
@a113 1
	void			UpdateToolTips(void);
@


1.32
log
@correction for string processing by tooltip notify. thanks Aw3
@
text
@d37 1
a37 1
	EXPAND_COLLAPSE = 2,
d40 4
a43 4
#define IDC_DOWNLOADLIST 124
#define IDC_UPLOADLIST	 125
#define IDC_QUEUELIST	 126
#define IDC_CLIENTLIST	 127
d59 1
a59 1
	MPW_UPLOADCLIENTLIST,
d61 1
d82 20
d103 6
d112 2
a113 1
	void 		GetInfo4ToolTip(NM_PPTOOLTIP_DISPLAY	*pNotify);
a133 4
public:
	int				AddCategory(CString newtitle, CString newincoming, CString newtemp, CString newcomment, CString newautocat, bool bAddTab=true);
	int				AddPredefinedCategory(EnumCategories ePredefinedCatID, bool bAddTab=true);
 
d138 1
a153 27

	virtual BOOL PreTranslateMessage(MSG* pMsg);

	void UpdateDownloadHeader();
	void UpdateUploadHeader();
	void UpdateInfoHeader();
	void InitRollupItemHeights();
	void SaveRollupItemHeights();
	void SwitchUploadList();
	afx_msg void OnDestroy();	// eklmn: bugfix(00): resource cleanup due to CResizableDialog

	void EditCatTabLabel(int index,CString newlabel);
	void UpdateCatTabTitles();
	void UpdateKnown();
	void UpdateQueueFilter();

	afx_msg void	OnTcnSelchangeDltab(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void	OnNMRClickDltab(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void	OnLvnBeginDrag(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void	OnTabMovement(NMHDR *pNMHDR, LRESULT *pResult);
	
	void OnMouseMove(UINT nFlags, CPoint point);
	void OnLButtonUp(UINT nFlags, CPoint point);

protected:
	virtual BOOL OnCommand(WPARAM wParam, LPARAM lParam);
	virtual BOOL OnNotify(WPARAM wParam, LPARAM lParam, LRESULT* pResult);
@


1.31
log
@fixed hanging tooltip by focus switch; the "OnToolTipNotify" replaced over OnNotify because it works faster as using ON_NOTIFY_EX_RANGE(...)
@
text
@d85 1
a85 1
	CString 		GetInfo4ToolTip(NM_PPTOOLTIP_DISPLAY	*pNotify);
@


1.30
log
@Moved GetItemUnderMouse to otherfunctions.
@
text
@d31 1
d63 1
a63 1
class CTransferWnd : public CResizableDialog
d85 1
a85 1
	afx_msg BOOL	OnToolTipNotify(UINT id, NMHDR *pNMH, LRESULT *pResult);
@


1.29
log
@Customizable temporary directory for categories
@
text
@a85 1
	int				GetItemUnderMouse(CListCtrl* ctrl);
@


1.28
log
@Improved category tabs tooltips; Reduced tooltips visiblity time; some tooltips related fixes
@
text
@d107 1
a107 1
	int				AddCategory(CString newtitle,CString newincoming,CString newcomment,CString newautocat,bool bAddTab=true);
@


1.27
log
@unused files are removed from the project
@
text
@d76 1
a76 1
	long			GetDetailColumnWidth()		//Cax2
d91 2
a92 3
//	CString			m_strToolTip;
	int				m_iOldToolTipItemDown;
	int				m_iOldToolTipItemUp;
d94 2
a101 1
	int				m_nLastCatTT;
a116 1
	CToolTipCtrl			*m_pttDlTabToolTips;
a141 2
	void UpdateTabToolTips() {UpdateTabToolTips(-1);}
	void UpdateTabToolTips(int tab);
@


1.26
log
@Changed uint32 to unsigned long from unsigned int and made necessary code changes. Got rid of _unsigned_ types int8,int16,int32,int64. Eliminated uint8 to avoid confusion. Use "byte".
@
text
@a29 1
#include "Tabs2.h"
@


1.25
log
@possible fix for 'mysterious sound' when expanding/collapsing using +/-
@
text
@d114 1
a114 1
	CString		GetTabStatistic(uint8 tab); 
@


1.24
log
@expand/collpase sources using +/- or right/left keys
@
text
@a152 1
	afx_msg void	OnLvnKeydownDownloadlist(NMHDR *pNMHDR, LRESULT *pResult);
@


1.23
log
@proper InfoList handling
@
text
@d153 1
@


1.22
log
@DownloadListCtrl rewrite.
Changed Category ID types to an enumeration.
More async update work.
The usual formatting, comments, and name changes.
@
text
@d110 1
a110 2
	void			ClearInfoHeader();

@


1.21
log
@Formatting, comments, and name changes.
@
text
@d109 2
a110 1
	int				AddPredefinedCategory(uint8 iPredefinedCatID, bool bAddTab=true);
d118 1
a118 1
	CCatTabs	m_wndDLTabs;
d123 3
a125 3
	CDownloadListCtrl		m_wndDownloadList;
	CQueueListCtrl			m_wndQueueList;
	CWndClientList			m_wndClientList;
d128 1
a128 1
	CWndUploadList			m_wndUploadList;
d130 1
a130 1
	CRollupCtrl				m_wndRollup;
@


1.20
log
@Fix for forced sharing (root dirs)
Added filtering to GUI queue
@
text
@d18 1
a19 1
#pragma once
@


1.19
log
@Added Known List to transfer window. Hope no major bug was introduced. Should be tested!
@
text
@d147 1
@


1.18
log
@Subclassed CTabs to make CCatTabs.
@
text
@d23 1
d43 1
d59 1
a117 1
//	CTabs2		m_wndDLTabs;
d124 1
a129 1
	//CToolTipCtrl			m_ttip;
d146 1
@


1.17
log
@Category rewrite with predefined status/media type categories.
@
text
@d48 5
d114 1
a114 1
	CTabs		m_wndDLTabs;
d145 4
a148 4
	afx_msg void OnTcnSelchangeDltab(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void		OnNMRClickDltab(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void		OnLvnBeginDrag(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void OnTabMovement(NMHDR *pNMHDR, LRESULT *pResult);
@


1.16
log
@More name changes, reinstated CMuleCtrlItem class, moved srcsarevisible from CPartFile to CMuleCtrlItem (where it belongs), added "Show Full Status Icons" and "Show Gray Paused" features with corresponding preferences, modified "SmartOpen" code to make it sticky and to make it work with sources with changing states.
@
text
@d60 3
a62 3
	CTransferWnd(CWnd* pParent = NULL);   // standard constructor
	virtual ~CTransferWnd();
	void	Localize();
d64 6
a69 2
	enum { IDD = IDD_TRANSFER };
	long 	GetDetailColumnWidth()		//Cax2
d75 6
a80 5
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
	virtual BOOL OnInitDialog();
	afx_msg BOOL OnToolTipNotify(UINT id, NMHDR *pNMH, LRESULT *pResult);
	void UpdateToolTips(void);
	int GetItemUnderMouse(CListCtrl* ctrl);
d84 14
a97 14
//	CString m_strToolTip;
	int m_iOldToolTipItemDown;
	int m_iOldToolTipItemUp;
	int m_iOldToolTipItemQueue;
	bool m_bFirstShow;

	POINT	m_pLastMousePoint;

	int m_nDragIndex;
	int m_nDropIndex;
	int m_nLastCatTT;
	bool m_bIsDragging;
	CImageList* m_pDragImage;
	int	m_iRightClickIndex;
d100 2
a101 1
	int AddCategory(CString newtitle,CString newincoming,CString newcomment,CString newautocat,bool addTab=true);
d104 3
a106 3
	void OnDblclickDltab();
	int GetTabUnderMouse(CPoint* point);
	CString GetTabStatistic(uint8 tab); 
d109 2
a110 2
	CTabs m_wndDlTabs;
//	CTabs2 m_wndDlTabs;
d141 2
a142 2
	afx_msg void OnNMRclickDltab(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void OnLvnBegindrag(NMHDR *pNMHDR, LRESULT *pResult);
@


1.15
log
@Second batch of name changes
@
text
@d32 6
a37 3
#define COLLAPSE_ONLY	0
#define EXPAND_ONLY		1
#define EXPAND_COLLAPSE	2
d67 1
a67 1
		return m_wndInfoList.GetColumn();
d113 5
a117 5
	CWndUploadList m_wndUploadList;
	CInfoListCtrl m_wndInfoList;
	CRollupCtrl m_wndRollup;
	//CToolTipCtrl m_ttip;
	CPPToolTip m_ttip;
@


1.14
log
@Fixed start paused files by category (when option set or by menu)
Removed Reset All Statistics (agreed with Eklmn that has no use and it brings problems)
Removed Mobile Mule profile
Localized 'All' tab when language changed
@
text
@d27 1
a27 1
#include "tabctrl.hpp"
d45 5
a59 1
	
d102 1
a102 1
	CToolTipCtrl* m_pttDlTabToolTips;
d104 1
a104 1
	CDummyForTabs* m_pwndDummyForDownloadList;
d106 3
a108 3
	CDownloadListCtrl m_wndDownloadList;
	CQueueListCtrl m_wndQueueList;
	UINT m_nActiveWnd;
d110 1
a110 1
	Cm_wndUploadList m_wndUploadList;
d115 1
d122 1
a122 1
	void SafeRollupItemHeights();
@


1.13
log
@Second try to fix glitches in transfer download list
@
text
@a92 1
	void EditCatTabLabel(int index,CString newlabel);
d121 1
a121 1

@


1.12
log
@Reverted TnasferWnd changes until we fix them to have a testable beta 2 refresh
@
text
@d42 3
d101 2
@


1.11
log
@Fix for two bugs in transfer download window. If it makes any problems - revert changes
@
text
@a41 3

class CDummyForTabs;

a97 2
	CDummyForTabs* m_pwndDummyForDownloadList;

@


1.10
log
@Fixes and updates (read forum to know)
@
text
@d42 3
d101 2
@


1.9
log
@*** empty log message ***
@
text
@d85 1
a85 1
	int AddCategorie(CString newtitle,CString newincoming,CString newcomment,CString newautocat,bool addTab=true);
@


1.8
log
@*** empty log message ***
@
text
@d20 5
a24 6
#include "uploadlistctrl.h"
#include "downloadlistctrl.h"
#include "queuelistctrl.h"
#include "infolistctrl.h"
#include "queuelistctrl.h"
#include "rollupctrl.h"
a26 2
#ifdef __USE_CATEGORIES__
#include "TablistWnd.h"
d29 2
d32 3
a34 2
#define _PRESENTATION_
#endif
d40 2
d52 1
d57 1
a57 1
		return infolistctrl.GetColumn();
a76 1
#ifdef __USE_CATEGORIES__
d82 4
a85 1
	int	rightclickindex;
a91 1
#endif
d94 2
a95 3
#ifdef __USE_CATEGORIES__
	CTabListWnd m_wndTabList;
	CTabs m_ctrlDlTabs;
a96 1
#endif
d98 2
a99 2
	CDownloadListCtrl downloadlistctrl;
	CQueueListCtrl queuelistctrl;
d102 3
a104 3
	CUploadListCtrl uploadlistctrl;
	CInfoListCtrl infolistctrl;
	CRollupCtrl rollupctrl;
d117 1
a117 1
#ifdef __USE_CATEGORIES__
d121 1
a121 1
#ifndef _PRESENTATION_
d126 1
a126 1
	int AddCategorie(CString newtitle,CString newincoming,CString newcomment,bool addTab=true);
d129 1
a129 2
#endif
#endif
d132 1
@


1.7
log
@*** empty log message ***
@
text
@d72 2
d85 2
d93 1
d117 2
d124 1
@


1.6
log
@Eklmn and BavarianSnail changes. see changelog+
@
text
@d28 7
d72 13
d86 5
d110 11
@


1.5
log
@Enhanced tooltips by JoeyRamone
@
text
@d83 1
@


1.4
log
@Webserver from official 0.27c
@
text
@d27 1
d59 1
a59 1
	CString m_strToolTip;
d73 2
a74 1
	CToolTipCtrl m_ttip;
@


1.3
log
@Vorlost patch for invalid port + 2 bugfixes
@
text
@a81 2
	CString GetDownloadFileInfo(CPartFile *partfile);	// kuchin
	CString GetUploadFileInfo(CUpDownClient *client);	// kuchin
@


1.2
log
@minor preferences update...
@
text
@a52 1
	
a54 1
	
d61 3
a63 2
	int m_iOldToolTipItemQueue;	
	
@


1.1
log
@*** empty log message ***
@
text
@d44 4
@


1.1.4.1
log
@updating this branch...
@
text
@@

