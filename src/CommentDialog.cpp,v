head	1.16;
access;
symbols
	PublicRelease_1_2e:1.16
	Interim_Release_1-2e_RC1:1.16
	PublicRelease_1_2d:1.16
	Interim_Release_1-2d_RC1:1.16
	Interim_Release_1-2d_beta1:1.15
	PublicRelease_1_2c:1.13
	Interim_Release_1-2c_RC1:1.13
	Interim_Release_1-2c_beta1:1.13
	PublicRelease_1_2b:1.13
	Interim_Release_1-2b_RC1:1.13
	PublicRelease_1_2a:1.13
	Interim_Release_1-2a_RC1:1.13
	Interim_Release_1-2a_beta2:1.13
	Interim_Release_1-2a_beta1:1.13
	PublicRelease_1_2:1.13
	Interim_Release_1-2_RC1:1.13
	Interim_Release_1-2_beta1:1.13
	PublicRelease_1_1g:1.13
	Interim_Release_1-1g_RC3:1.13
	Interim_Release_1-1g_RC2:1.13
	Interim_Release_1-1g_RC1:1.13
	Interim_Release_1-1g_beta2:1.12
	Interim_Release_1-1g_beta1:1.12
	PublicRelease_1_1f:1.12
	Interim_Release_1-1f_RC1:1.12
	PublicRelease_1_1e:1.12
	Interim_Release_1-1e_RC2:1.12
	Interim_Release_1-1e_RC1:1.12
	Interim_Release_1-1e_beta1:1.12
	PublicRelease_1_1d:1.12
	Interim_Release_1-1d_RC1:1.12
	PublicRelease_1_1c:1.12
	Interim_Release_1-1c_RC1:1.12
	Interim_Release_1-1c_beta2:1.12
	Interim_Release_1-1c_beta1:1.12
	PublicRelease_1_1b:1.12
	Interim_Release_1-1b_RC1:1.12
	PublicRelease_1_1a:1.12
	Interim_Release_1-1a_RC2:1.12
	Interim_Release_1-1a_RC1:1.12
	Interim_Release_1-1a_beta2:1.12
	Interim_Release_1-1a_beta1:1.12
	PublicRelease_1_1:1.12
	Interim_Release_1-1_beta1:1.12
	PublicRelease_1o:1.11
	Interim_Release_1o_RC1:1.11
	Interim_Release_1o_beta1:1.11
	PublicRelease_1n:1.11
	Interim_Release_1n_RC2:1.11
	Interim_Release_1n_RC1:1.11
	Interim_Release_1n_beta2:1.11
	Interim_Release_1n_beta1:1.11
	PublicRelease_1m:1.11
	Interim_Release_1m_beta1:1.11
	PublicRelease_1l:1.11
	Interim_Release_1l_RC3:1.11
	Interim_Release_1l_RC2:1.11
	Interim_Release_1l_RC1:1.11
	Interim_Release_1l_beta2:1.10
	Interim_Release_1l_beta1:1.10
	PublicRelease_1k:1.10
	Interim_Release_1k_RC4:1.10
	Interim_1k_RC3:1.10
	Interim_1k_RC2:1.10
	Interim_Release_1k_RC1:1.10
	Interim_Release_1k_beta5:1.9
	Intrerim_Release_1k_beta4:1.9
	Interim_Release_1k_beta1:1.9
	PublicRelease_1j:1.8
	Interim_Release_1J_RC3:1.8
	Interim_Release_1j_RC3:1.8
	Interim_Release_1j_RC2:1.8
	Interim_Release_1j_RC1:1.8
	Interim_Release_1j_beta2:1.8
	Interim_Release_1j_beta1:1.8
	PublicRelease_1i:1.8
	Interim_Release_1i_RC6:1.8
	Interim_Release_1i_RC3:1.8
	Interim_Release_1i_RC2:1.8
	Interim_Release_1i_RC1:1.7
	Interim_Release_1i_beta3:1.7
	Interim_Release_1i_beta2:1.7
	Interim_Release_1i_beta1:1.6
	PublicRelease_1h:1.6
	Interim_Release_1h_rc2:1.6
	Interim_Release_1h_RC1:1.6
	Interim_Release_1h_beta2:1.6
	Interim_Release_1h_beta1_now:1.6
	Interim_Release_1h_beta1:1.6
	PublicRelease_1g:1.6
	Interim_Release_1g_RC6_Final:1.6
	Interim_Release_1g_RC6:1.6
	Interim_Release_1g_RC5:1.6
	Interim_Release_1g_RC4:1.6
	Interim_Release_1g_RC3:1.6
	Interim_Release_1g_beta2:1.6
	Interim_Release_1g_beta1:1.6
	Interim_Release_1f_RC4:1.6
	Interim_Release_1f_RC3:1.6
	Interim_Release_1f_RC2:1.6
	Interim_Release_1f_RC:1.6
	Interim_Release_1f_beta2:1.6
	Interim_Release_1f_beta1:1.6
	PublicRelease_1e:1.6
	Interim_Release_1e_RC2:1.6
	Interim_Release_1e_RC:1.6
	Interim_Release_1e_beta3:1.6
	Interim_Release_1e_beta2:1.6
	Interim_Release_1e_beta2_before_kuchin:1.6
	Interim_Release_1e_beta1:1.6
	PublicRelease_1c:1.6
	featurestest:1.6.0.4
	Interim_Release_1c_RC:1.6
	Interim_Release_1c_beta2:1.6
	Interim_Release_1c_beta1:1.6
	threaded_downloadqueue:1.6.0.2
	PublicRelease_1b:1.5
	Interim_Release_1b_beta2:1.5
	Interim_Release_1b_beta1:1.5
	proxydeadlake:1.4.0.2
	PublicRelease_1a:1.4
	Interim_Release_1a_beta2:1.4
	BerkeleyDb:1.3.0.2
	Interim_Release_1a_beta1:1.3
	PublicRelease_1:1.3
	goldfish:1.3
	eMulePlus_1_RC2:1.3
	eMulePlus_26b_1RC1:1.2
	PreRelease_26b_i0e:1.2
	before_26d_merge:1.2
	Interim_Release_26b_i0d:1.1
	Interim_Release_26b_i0c:1.1
	Interim_Release_26b_i0b:1.1
	Interim_Release_26b_i0a:1.1
	systraydlg:1.1.0.8
	plus26based:1.1.0.6
	Interim_Release_25b_i0b:1.1
	Proxy_Dev:1.1
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@// @;


1.16
date	2008.03.03.05.20.13;	author aw3;	state Exp;
branches;
next	1.15;

1.15
date	2008.01.02.05.30.52;	author aw3;	state Exp;
branches;
next	1.14;

1.14
date	2008.01.01.11.12.05;	author eklmn;	state Exp;
branches;
next	1.13;

1.13
date	2005.11.30.03.16.36;	author aw3;	state Exp;
branches;
next	1.12;

1.12
date	2004.10.06.22.16.58;	author aw3;	state Exp;
branches;
next	1.11;

1.11
date	2004.05.22.19.39.41;	author dongato;	state Exp;
branches;
next	1.10;

1.10
date	2004.03.26.22.10.26;	author aw3;	state Exp;
branches;
next	1.9;

1.9
date	2004.02.15.11.55.57;	author morevit;	state Exp;
branches;
next	1.8;

1.8
date	2003.11.09.09.41.51;	author kuchin;	state Exp;
branches;
next	1.7;

1.7
date	2003.10.10.17.59.02;	author morevit;	state Exp;
branches;
next	1.6;

1.6
date	2003.03.11.20.07.14;	author dongato;	state Exp;
branches;
next	1.5;

1.5
date	2003.03.02.14.07.39;	author dongato;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.26.15.07.43;	author dongato;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.20.00.34.17;	author dongato;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2003.02.16.22.01.46;	author lord_kiron;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.18.07.05;	author cax2;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.01.28.16.53.59;	author cax2;	state Exp;
branches;
next	;

1.3.2.1
date	2003.02.28.22.44.54;	author obaldin;	state Exp;
branches;
next	;


desc
@@


1.16
log
@ELEMENT_COUNT -> ARRSIZE; Minor rating processing optimization.
@
text
@//this file is part of eMule
//Copyright (C)2002-2007 Merkur ( strEmail.Format("%s@@%s", "devteam", "emule-project.net") / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the GNU General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

#include "stdafx.h" 
#include "emule.h" 
#include "CommentDialog.h" 

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

// CommentDialog dialog 

IMPLEMENT_DYNAMIC(CCommentDialog, CDialog) 
CCommentDialog::CCommentDialog(CKnownFile* file) 
   : CDialog(CCommentDialog::IDD, 0) 
{ 
   m_file = file; 
} 

CCommentDialog::~CCommentDialog() 
{ 
} 

void CCommentDialog::DoDataExchange(CDataExchange* pDX) 
{ 
   CDialog::DoDataExchange(pDX); 
   DDX_Control(pDX, IDC_RATELIST, ratebox);//for rate 
} 

BEGIN_MESSAGE_MAP(CCommentDialog, CDialog) 
   ON_BN_CLICKED(IDC_CMT_OK, OnBnClickedApply) 
   ON_BN_CLICKED(IDC_CMT_ERASE, OnBnClickedErase)
   ON_BN_CLICKED(IDC_CMT_CANCEL, OnBnClickedCancel) 
END_MESSAGE_MAP() 

void CCommentDialog::OnBnClickedApply() 
{ 
	EMULE_TRY

	CString strValue;

	GetDlgItemText(IDC_CMT_TEXT, strValue);
// No empty comments
	if(!strValue.IsEmpty() || ((byte)ratebox.GetCurSel() != 0))
	{ 
		int ratio = ratebox.GetCurSel();
		if (ratio == 4)
			ratio = PF_RATING_GOOD;
		else if (ratio == 3)
			ratio = PF_RATING_FAIR;

		m_file->SetFileComment(strValue);
		m_file->SetFileRating(static_cast<_EnumPartFileRating>(ratio));//for Rate
		CDialog::OnOK();
	}
	else
	{
		AfxMessageBox(GetResString(IDS_CMT_NOCOMMENT));
	}

	EMULE_CATCH
} 

void CCommentDialog::OnBnClickedErase() 
{
	EMULE_TRY

	if(AfxMessageBox(GetResString(IDS_ERASE_SURE), MB_YESNO) == IDYES)
	{
		m_file->RemoveFileCommentAndRating();
		CDialog::OnOK();
	}

	EMULE_CATCH
}

void CCommentDialog::OnBnClickedCancel() 
{ 
   CDialog::OnCancel(); 
} 

BOOL CCommentDialog::OnInitDialog()
{ 
   CDialog::OnInitDialog(); 
   Localize(); 

   SetDlgItemText(IDC_CMT_TEXT, m_file->GetFileComment()); 
   ((CEdit*)GetDlgItem(IDC_CMT_TEXT))->SetLimitText(MAXFILECOMMENTLEN);

   return TRUE; 
} 

void CCommentDialog::Localize(void)
{ 
	static const uint16 s_auResTbl[][2] =
	{
		{ IDC_CMT_OK, IDS_PW_APPLY },
		{ IDC_CMT_CANCEL, IDS_CANCEL },
		{ IDC_CMT_ERASE, IDS_ERASE },
		{ IDC_CMT_LQUEST, IDS_CMT_QUEST },
		{ IDC_CMT_LAIDE, IDS_CMT_AIDE },
		{ IDC_RATEQUEST, IDS_CMT_RATEQUEST },
		{ IDC_RATEHELP, IDS_CMT_RATEHELP }
	};
	static const uint16 s_auResCombo[] = {
		IDS_CMT_NOTRATED, IDS_CMT_FAKE, IDS_CMT_POOR,
		IDS_CMT_FAIR, IDS_CMT_GOOD, IDS_CMT_EXCELLENT
	};

	EMULE_TRY

	for (uint32 i = 0; i < ARRSIZE(s_auResTbl); i++)
		SetDlgItemText(s_auResTbl[i][0], GetResString(static_cast<UINT>(s_auResTbl[i][1])));

	while (ratebox.GetCount()>0)
		ratebox.DeleteString(0); 
	
	for (uint32 i = 0; i < ARRSIZE(s_auResCombo); i++)
		ratebox.AddString(GetResString(s_auResCombo[i]));

	int ratio;
	if(m_file->GetFileRating() == PF_RATING_FAIR)
		ratio = 3;
	else if (m_file->GetFileRating() == PF_RATING_GOOD)
		ratio = 4;
	else
		ratio = static_cast<int>(m_file->GetFileRating());

	if(ratebox.SetCurSel(ratio)==CB_ERR)
		ratebox.SetCurSel(0); 
	 
	CString strTitle; 
	
	strTitle.Format(GetResString(IDS_CMT_TITLE), m_file->GetFileName());
	SetWindowText(strTitle); 

	EMULE_CATCH
} 
@


1.15
log
@Fixed 'improved comment processing' which screwed comment processing big time.
@
text
@d1 16
a16 2
// CommentDialog.cpp : implementation file 
// 
d63 5
a67 7
		int ratio;
		if((byte)ratebox.GetCurSel() == 4)
			ratio = 3;
		else if ((byte)ratebox.GetCurSel() == 3)
			ratio = 4;
		else
			ratio = (byte)ratebox.GetCurSel();
d70 1
a70 1
		m_file->SetFileRating(static_cast<_EnumPartFileRating>(ratio));//for Rate//
d99 2
a100 1
BOOL CCommentDialog::OnInitDialog(){ 
d112 1
a112 1
	static const int s_aiResTbl[][2] =
d122 1
a122 1
	static const UINT s_dwResCombo[] = {
d129 2
a130 2
	for (uint32 i = 0; i < ELEMENT_COUNT(s_aiResTbl); i++)
		SetDlgItemText(s_aiResTbl[i][0], GetResString(static_cast<UINT>(s_aiResTbl[i][1])));
d135 2
a136 2
	for (uint32 i = 0; i < ELEMENT_COUNT(s_dwResCombo); i++)
		ratebox.AddString(GetResString(s_dwResCombo[i]));
@


1.14
log
@improved comment processing
@
text
@d58 1
a58 1
		m_file->SetFileRating(static_cast<EnumPartFileRating>(ratio));//for Rate//
@


1.13
log
@Define max comment length.
@
text
@d58 1
a58 1
		m_file->SetFileRating(static_cast<_EnumPartFileRating>(ratio));//for Rate//
@


1.12
log
@Removed commented code.
@
text
@d92 1
a92 1
   ((CEdit*)GetDlgItem(IDC_CMT_TEXT))->SetLimitText(50);
@


1.11
log
@Cleaned up resources
@
text
@d138 1
a138 3
	strTitle.Format(GetResString(IDS_CMT_TITLE),m_file->GetFileName());
	//AfxFormatString1(title,IDS_CMT_TITLE,m_file->GetFileName()); 
	
@


1.10
log
@Unified localization; minor improvements.
@
text
@d34 3
a36 3
   ON_BN_CLICKED(IDCOK, OnBnClickedApply) 
   ON_BN_CLICKED(IDCERASE, OnBnClickedErase)
   ON_BN_CLICKED(IDCCANCEL, OnBnClickedCancel) 
d101 3
a103 3
		{ IDCOK, IDS_PW_APPLY },
		{ IDCCANCEL, IDS_CANCEL },
		{ IDCERASE, IDS_ERASE },
@


1.9
log
@Changed uint32 to unsigned long from unsigned int and made necessary code changes. Got rid of _unsigned_ types int8,int16,int32,int64. Eliminated uint8 to avoid confusion. Use "byte".
@
text
@d43 5
a47 4
	CString SValue; 
	GetDlgItem(IDC_CMT_TEXT)->GetWindowText(SValue);
	// DonGato + Cax2 (no empty comments)
	if(SValue != "" || ((byte)ratebox.GetCurSel() != 0))
d57 1
a57 1
		m_file->SetFileComment(SValue);
d91 1
a91 1
   GetDlgItem(IDC_CMT_TEXT)->SetWindowText(m_file->GetFileComment()); 
d99 15
d116 3
a118 10
	GetDlgItem(IDCOK)->SetWindowText(GetResString(IDS_PW_APPLY)); 
	GetDlgItem(IDCCANCEL)->SetWindowText(GetResString(IDS_CANCEL)); 
	GetDlgItem(IDCERASE)->SetWindowText(GetResString(IDS_ERASE)); 
	
	GetDlgItem(IDC_CMT_LQUEST)->SetWindowText(GetResString(IDS_CMT_QUEST)); 
	GetDlgItem(IDC_CMT_LAIDE)->SetWindowText(GetResString(IDS_CMT_AIDE)); 
	
	GetDlgItem(IDC_RATEQUEST)->SetWindowText(GetResString(IDS_CMT_RATEQUEST)); 
	GetDlgItem(IDC_RATEHELP)->SetWindowText(GetResString(IDS_CMT_RATEHELP)); 
	
d122 2
a123 6
	ratebox.AddString(GetResString(IDS_CMT_NOTRATED));
	ratebox.AddString(GetResString(IDS_CMT_FAKE));
	ratebox.AddString(GetResString(IDS_CMT_POOR));
	ratebox.AddString(GetResString(IDS_CMT_FAIR));
	ratebox.AddString(GetResString(IDS_CMT_GOOD));
	ratebox.AddString(GetResString(IDS_CMT_EXCELLENT));
@


1.8
log
@BUGFIX: inability to remove shared file comment (#278)
@
text
@d46 1
a46 1
	if(SValue != "" || ((int8)ratebox.GetCurSel() != 0))
d49 1
a49 1
		if((int8)ratebox.GetCurSel() == 4)
d51 1
a51 1
		else if ((int8)ratebox.GetCurSel() == 3)
d54 1
a54 1
			ratio = (int8)ratebox.GetCurSel();
@


1.7
log
@Formatting, comments, and name changes.
@
text
@d35 1
d41 2
d64 2
d68 13
d98 2
d102 1
d137 2
@


1.6
log
@Comment Dialog ratio not retrieved properly (BUG #0000054)
@
text
@d54 1
a54 1
		m_file->SetFileRate(ratio);//for Rate//
d100 1
a100 1
	if(m_file->GetFileRate() == 4)
d102 1
a102 1
	else if (m_file->GetFileRate() == 3)
d105 1
a105 1
		ratio = m_file->GetFileRate();
@


1.5
log
@Fixed the order of the ratings on the comments window
@
text
@d78 20
a97 3
void CCommentDialog::Localize(void){ 
   GetDlgItem(IDCOK)->SetWindowText(GetResString(IDS_PW_APPLY)); 
   GetDlgItem(IDCCANCEL)->SetWindowText(GetResString(IDS_CANCEL)); 
d99 7
a105 2
   GetDlgItem(IDC_CMT_LQUEST)->SetWindowText(GetResString(IDS_CMT_QUEST)); 
   GetDlgItem(IDC_CMT_LAIDE)->SetWindowText(GetResString(IDS_CMT_AIDE)); 
d107 9
a115 21
   //for rate// 
   GetDlgItem(IDC_RATEQUEST)->SetWindowText(GetResString(IDS_CMT_RATEQUEST)); 
   GetDlgItem(IDC_RATEHELP)->SetWindowText(GetResString(IDS_CMT_RATEHELP)); 

   while (ratebox.GetCount()>0) ratebox.DeleteString(0); 
   
   ratebox.AddString(GetResString(IDS_CMT_NOTRATED));
   ratebox.AddString(GetResString(IDS_CMT_FAKE));
   ratebox.AddString(GetResString(IDS_CMT_POOR));
   ratebox.AddString(GetResString(IDS_CMT_FAIR));
   ratebox.AddString(GetResString(IDS_CMT_GOOD));
   ratebox.AddString(GetResString(IDS_CMT_EXCELLENT));
   if (ratebox.SetCurSel(m_file->GetFileRate())==CB_ERR)ratebox.SetCurSel(0) ; 
   //--end rate--//
   CString strTitle; 

   strTitle.Format(GetResString(IDS_CMT_TITLE),m_file->GetFileName());
   //AfxFormatString1(title,IDS_CMT_TITLE,m_file->GetFileName()); 

   SetWindowText(strTitle); 
    
@


1.4
log
@now ratings are shown with more descriptive icons (THX->DrSiRiUs)
@
text
@d43 1
a43 1
	if( SValue != "" || ((int8)ratebox.GetCurSel() != 0))
d45 8
d54 1
a54 1
		m_file->SetFileRate((int8)ratebox.GetCurSel());//for Rate//
d94 1
a95 1
   ratebox.AddString(GetResString(IDS_CMT_FAIR));
@


1.3
log
@Last BUGFIXES (FileComments/SharedFiles Columns)
@
text
@d83 6
a88 6
   ratebox.AddString(GetResString(IDS_CMT_NOTRATED)); 
   ratebox.AddString(GetResString(IDS_CMT_FAKE)); 
   ratebox.AddString(GetResString(IDS_CMT_POOR)); 
   ratebox.AddString(GetResString(IDS_CMT_FAIR)); 
   ratebox.AddString(GetResString(IDS_CMT_GOOD)); 
   ratebox.AddString(GetResString(IDS_CMT_EXCELLENT)); 
@


1.3.2.1
log
@v1a upgrade
@
text
@d83 6
a88 6
   ratebox.AddString(GetResString(IDS_CMT_NOTRATED));
   ratebox.AddString(GetResString(IDS_CMT_FAKE));
   ratebox.AddString(GetResString(IDS_CMT_POOR));
   ratebox.AddString(GetResString(IDS_CMT_GOOD));
   ratebox.AddString(GetResString(IDS_CMT_FAIR));
   ratebox.AddString(GetResString(IDS_CMT_EXCELLENT));
@


1.2
log
@Added instrumentation for debugging memory leaks :
#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

To all .cpp files (I hope I didn't miss any one)
@
text
@a37 2


d40 13
a52 5
   CString SValue; 
   GetDlgItem(IDC_CMT_TEXT)->GetWindowText(SValue); 
   m_file->SetFileComment(SValue); 
   m_file->SetFileRate((int8)ratebox.GetCurSel());//for Rate// 
   CDialog::OnOK(); 
@


1.1
log
@*** empty log message ***
@
text
@d8 5
@


1.1.4.1
log
@updating this branch...
@
text
@@

