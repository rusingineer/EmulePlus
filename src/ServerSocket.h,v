head	1.19;
access;
symbols
	PublicRelease_1_2e:1.17
	Interim_Release_1-2e_RC1:1.17
	PublicRelease_1_2d:1.17
	Interim_Release_1-2d_RC1:1.17
	Interim_Release_1-2d_beta1:1.17
	PublicRelease_1_2c:1.16
	Interim_Release_1-2c_RC1:1.16
	Interim_Release_1-2c_beta1:1.15
	PublicRelease_1_2b:1.15
	Interim_Release_1-2b_RC1:1.15
	PublicRelease_1_2a:1.15
	Interim_Release_1-2a_RC1:1.15
	Interim_Release_1-2a_beta2:1.14
	Interim_Release_1-2a_beta1:1.14
	PublicRelease_1_2:1.14
	Interim_Release_1-2_RC1:1.14
	Interim_Release_1-2_beta1:1.14
	PublicRelease_1_1g:1.14
	Interim_Release_1-1g_RC3:1.14
	Interim_Release_1-1g_RC2:1.14
	Interim_Release_1-1g_RC1:1.14
	Interim_Release_1-1g_beta2:1.14
	Interim_Release_1-1g_beta1:1.14
	PublicRelease_1_1f:1.13
	Interim_Release_1-1f_RC1:1.13
	PublicRelease_1_1e:1.13
	Interim_Release_1-1e_RC2:1.13
	Interim_Release_1-1e_RC1:1.13
	Interim_Release_1-1e_beta1:1.13
	PublicRelease_1_1d:1.13
	Interim_Release_1-1d_RC1:1.13
	PublicRelease_1_1c:1.13
	Interim_Release_1-1c_RC1:1.13
	Interim_Release_1-1c_beta2:1.13
	Interim_Release_1-1c_beta1:1.13
	PublicRelease_1_1b:1.13
	Interim_Release_1-1b_RC1:1.13
	PublicRelease_1_1a:1.13
	Interim_Release_1-1a_RC2:1.13
	Interim_Release_1-1a_RC1:1.13
	Interim_Release_1-1a_beta2:1.13
	Interim_Release_1-1a_beta1:1.13
	PublicRelease_1_1:1.13
	Interim_Release_1-1_beta1:1.13
	PublicRelease_1o:1.13
	Interim_Release_1o_RC1:1.13
	Interim_Release_1o_beta1:1.13
	PublicRelease_1n:1.13
	Interim_Release_1n_RC2:1.13
	Interim_Release_1n_RC1:1.13
	Interim_Release_1n_beta2:1.13
	Interim_Release_1n_beta1:1.13
	PublicRelease_1m:1.13
	Interim_Release_1m_beta1:1.13
	PublicRelease_1l:1.13
	Interim_Release_1l_RC3:1.13
	Interim_Release_1l_RC2:1.13
	Interim_Release_1l_RC1:1.13
	Interim_Release_1l_beta2:1.13
	Interim_Release_1l_beta1:1.13
	PublicRelease_1k:1.13
	Interim_Release_1k_RC4:1.13
	Interim_1k_RC3:1.13
	Interim_1k_RC2:1.13
	Interim_Release_1k_RC1:1.13
	Interim_Release_1k_beta5:1.13
	Intrerim_Release_1k_beta4:1.13
	Interim_Release_1k_beta1:1.13
	PublicRelease_1j:1.12
	Interim_Release_1J_RC3:1.12
	Interim_Release_1j_RC3:1.12
	Interim_Release_1j_RC2:1.12
	Interim_Release_1j_RC1:1.12
	Interim_Release_1j_beta2:1.12
	Interim_Release_1j_beta1:1.12
	PublicRelease_1i:1.11
	Interim_Release_1i_RC6:1.11
	Interim_Release_1i_RC3:1.11
	Interim_Release_1i_RC2:1.11
	Interim_Release_1i_RC1:1.11
	Interim_Release_1i_beta3:1.11
	Interim_Release_1i_beta2:1.11
	Interim_Release_1i_beta1:1.9
	PublicRelease_1h:1.8
	Interim_Release_1h_rc2:1.8
	Interim_Release_1h_RC1:1.8
	Interim_Release_1h_beta2:1.8
	Interim_Release_1h_beta1_now:1.8
	Interim_Release_1h_beta1:1.8
	PublicRelease_1g:1.6
	Interim_Release_1g_RC6_Final:1.6
	Interim_Release_1g_RC6:1.6
	Interim_Release_1g_RC5:1.6
	Interim_Release_1g_RC4:1.6
	Interim_Release_1g_RC3:1.6
	Interim_Release_1g_beta2:1.6
	Interim_Release_1g_beta1:1.6
	Interim_Release_1f_RC4:1.5
	Interim_Release_1f_RC3:1.5
	Interim_Release_1f_RC2:1.5
	Interim_Release_1f_RC:1.5
	Interim_Release_1f_beta2:1.5
	Interim_Release_1f_beta1:1.4
	PublicRelease_1e:1.4
	Interim_Release_1e_RC2:1.4
	Interim_Release_1e_RC:1.4
	Interim_Release_1e_beta3:1.4
	Interim_Release_1e_beta2:1.4
	Interim_Release_1e_beta2_before_kuchin:1.3
	Interim_Release_1e_beta1:1.3
	PublicRelease_1c:1.3
	featurestest:1.3.0.12
	Interim_Release_1c_RC:1.3
	Interim_Release_1c_beta2:1.3
	Interim_Release_1c_beta1:1.3
	threaded_downloadqueue:1.3.0.10
	PublicRelease_1b:1.3
	Interim_Release_1b_beta2:1.3
	Interim_Release_1b_beta1:1.3
	proxydeadlake:1.3.0.8
	PublicRelease_1a:1.3
	Interim_Release_1a_beta2:1.3
	BerkeleyDb:1.3.0.6
	Interim_Release_1a_beta1:1.3
	PublicRelease_1:1.3
	goldfish:1.3
	eMulePlus_1_RC2:1.3
	eMulePlus_26b_1RC1:1.3
	PreRelease_26b_i0e:1.3
	before_26d_merge:1.3
	Interim_Release_26b_i0d:1.3
	Interim_Release_26b_i0c:1.3
	Interim_Release_26b_i0b:1.3
	Interim_Release_26b_i0a:1.3
	systraydlg:1.3.0.4
	plus26based:1.3.0.2
	Interim_Release_25b_i0b:1.3
	Proxy_Dev:1.2
	Interim_Release_25b_i0a:1.2.2.3
	proxytest:1.2.2.2.0.2
	official_sockets:1.2.0.2
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.19
date	2011.09.29.03.21.49;	author aw3;	state Exp;
branches;
next	1.18;

1.18
date	2009.05.26.03.53.21;	author aw3;	state Exp;
branches;
next	1.17;

1.17
date	2007.11.02.14.44.57;	author kush_eplus;	state Exp;
branches;
next	1.16;

1.16
date	2007.07.01.05.30.34;	author aw3;	state Exp;
branches;
next	1.15;

1.15
date	2006.09.07.03.19.35;	author aw3;	state Exp;
branches;
next	1.14;

1.14
date	2005.08.04.03.30.10;	author aw3;	state Exp;
branches;
next	1.13;

1.13
date	2004.02.15.11.55.57;	author morevit;	state Exp;
branches;
next	1.12;

1.12
date	2003.12.18.21.52.47;	author dongato;	state Exp;
branches;
next	1.11;

1.11
date	2003.10.08.01.53.33;	author morevit;	state Exp;
branches;
next	1.10;

1.10
date	2003.10.05.17.53.56;	author morevit;	state Exp;
branches;
next	1.9;

1.9
date	2003.09.20.15.39.31;	author morevit;	state Exp;
branches;
next	1.8;

1.8
date	2003.07.30.22.56.00;	author zegzav;	state Exp;
branches;
next	1.7;

1.7
date	2003.07.30.12.29.31;	author kuchin;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.30.20.35.19;	author partyckip;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.08.23.20.03;	author partyckip;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.22.12.41.52;	author kuchin;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.02.10.47.20;	author cax2;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.22.17.35.43;	author kuchin;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2003.01.21.18.21.22;	author cax2;	state Exp;
branches;
next	;

1.2.2.1
date	2003.01.28.14.55.46;	author obaldin;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2003.01.28.22.27.11;	author maverick65;	state Exp;
branches
	1.2.2.2.2.1;
next	1.2.2.3;

1.2.2.3
date	2003.01.29.10.36.29;	author cax2;	state Exp;
branches;
next	;

1.2.2.2.2.1
date	2003.01.28.23.51.14;	author maverick65;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Asynchronous host name resolution for dynIP servers.
@
text
@//this file is part of eMule
//Copyright (C)2002-2008 Merkur ( strEmail.Format("%s@@%s", "devteam", "emule-project.net") / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the GNU General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#pragma once

#include "EMSocket.h"

enum EnumServerConnectionStates
{
	CS_FATALERROR		= -5,
	CS_DISCONNECTED		= -4,
	CS_SERVERDEAD		= -3,
	CS_ERROR			= -2,
	CS_SERVERFULL		= -1,
	CS_NOTCONNECTED		= 0,
	CS_CONNECTING		= 1,
	CS_CONNECTED		= 2,
	CS_WAITFORLOGIN		= 3,
	CS_WAITFORPROXYLISTENING = 4 // PROXYSUPPORT
};

class CServer;

class CServerSocket : public CEMSocket
{
	friend class CServerConnect;

public:
					CServerSocket(CServerConnect *in_serverconnect);
				   ~CServerSocket();

	void			ConnectTo(CServer *pSrv, bool bNoCrypt);
	int				GetConnectionState() const	{return m_iConnectionState;}

	uint32			m_dwOldID;
	DWORD			m_dwLastTransmission;

protected:
	virtual void	OnClose(int nErrorCode);
	virtual void	OnConnect(int nErrorCode);
	virtual void	OnReceive(int nErrorCode);
	virtual void	OnError(int nErrorCode);
	virtual BOOL	OnHostNameResolved(const SOCKADDR_IN *pSockAddr);
	void			PacketReceived(Packet* packet);

private:
	bool			ProcessPacket(char* packet, uint32 size,EnumOpcodes eOpcode);
	void			SetConnectionState(int iNewState);

	CServerConnect	*m_pServerConnect;
	CServer			*m_pServer;
	int				m_iConnectionState;
};
@


1.18
log
@Encryption preparations.
@
text
@d56 1
@


1.17
log
@Suppressed level 4 warnings.
@
text
@d2 1
a2 1
//Copyright (C)2002 Merkur ( merkur-@@users.sourceforge.net / http://www.emule-project.net )
a16 2

// Client to Server communication
a18 1
#include "types.h"
a19 1
#include "AsyncProxySocketLayer.h"
d52 4
a55 4
	void			OnClose(int nErrorCode);
	void			OnConnect(int nErrorCode);
	void			OnReceive(int nErrorCode);
	void			OnError(int nErrorCode);
@


1.16
log
@Encryption preparations; Code clean-up and simplification.
@
text
@d52 1
a52 1
	int				m_iOldID;
@


1.15
log
@Removed unused variables.
@
text
@a21 2
#include "server.h"
#include "packets.h"
a23 2
#include "ServerWnd.h"
#include "StatisticsDlg.h"
d39 2
d46 1
a46 1
					CServerSocket(CServerConnect* in_serverconnect);
d49 2
a50 2
	void			ConnectToServer(CServer& server);
	EnumServerConnectionStates	GetConnectionState()	{return m_eConnectionState;} 
d64 1
a64 1
	void			SetConnectionState(EnumServerConnectionStates eNewState);
d66 1
a66 1
	CServerConnect	*m_pServerConnect; 
d68 1
a68 1
	EnumServerConnectionStates	m_eConnectionState;
@


1.14
log
@Slightly cleaned a mess of including one H-file into another.
@
text
@a18 1

d25 1
a25 1
#include "AsyncProxySocketLayer.h" // deadlake PROXYSUPPORT
d40 1
a40 1
	CS_WAITFORPROXYLISTENING = 4, // deadlake PROXYSUPPORT
a53 1
	CString			m_strInfo;
d69 1
a70 5
	CServer			*m_pServer;
	bool			headercomplete;
	uint32			sizetoget;
	uint32			sizereceived;	
	uint32			m_dwMessageCount;
@


1.13
log
@Changed uint32 to unsigned long from unsigned int and made necessary code changes. Got rid of _unsigned_ types int8,int16,int32,int64. Eliminated uint8 to avoid confusion. Use "byte".
@
text
@d25 1
a25 4
#include "Preferences.h"
#include "sockets.h"
#include "preferences.h"
#include "emsocket.h"
@


1.12
log
@Keep-Alive for server connections
@
text
@d70 1
a70 1
	bool			ProcessPacket(char* packet, int32 size,EnumOpcodes eOpcode);
d77 2
a78 2
	int32			sizetoget;
	int32			sizereceived;	
@


1.11
log
@Formatting, comments, and name changes.
Created distinct tag classes and typed enumerations for tags, opcodes, and protocols.
@
text
@d60 1
d80 1
a80 1
};@


1.10
log
@Formatting, comments, and name changes.
@
text
@d69 1
a69 1
	bool			ProcessPacket(char* packet, int32 size,int8 opcode);
d78 1
a78 1
	uint32			messagecount;
@


1.9
log
@More name changes, reinstated CMuleCtrlItem class, moved srcsarevisible from CPartFile to CMuleCtrlItem (where it belongs), added "Show Full Status Icons" and "Show Gray Paused" features with corresponding preferences, modified "SmartOpen" code to make it sticky and to make it work with sources with changing states.
@
text
@d33 14
d50 1
d52 8
a59 2
	CServerSocket(CServerConnect* in_serverconnect);
	~CServerSocket();
a60 4
	void	ConnectToServer(CServer& server);
	sint8	GetConnectionState()	{return connectionstate;} 
	CString info;
	int		oldID;
d62 6
a67 5
	void	OnClose(int nErrorCode);
	void	OnConnect(int nErrorCode);
	void	OnReceive(int nErrorCode);
	void	OnError(int nErrorCode);
	void	PacketReceived(Packet* packet);
d69 10
a78 9
	bool	ProcessPacket(char* packet, int32 size,int8 opcode);
	void	SetConnectionState(sint8 newstate);
	CServerConnect*	m_pServerConnect; 
	sint8	connectionstate;
	CServer*	cur_server;
	bool	headercomplete;
	int32	sizetoget;
	int32	sizereceived;	
	uint32	messagecount;
@


1.8
log
@added columns Soft/Hard Files Limit and Version in server window (merge from official)
@
text
@d53 1
a53 1
	CServerConnect*	serverconnect; 
@


1.7
log
@Purity's changes
@
text
@d59 1
@


1.6
log
@code cleanup
@
text
@d43 1
@


1.5
log
@code cleanup
@
text
@d40 1
a40 1
	void	ConnectToServer(CServer* server);
@


1.4
log
@Upgrade to 0.28a
@
text
@d57 1
a57 4
	int32	sizereceived;
	char*	rbuffer;
	bool	m_bIsDeleting;	// true: socket is already in deletion phase, don't destroy it in ::StopConnectionTry
	
@


1.3
log
@Merge from official sockets
@
text
@d29 3
@


1.2
log
@*** empty log message ***
@
text
@a28 1
#include "AsyncProxySocketLayer.h"
d30 1
a30 5
// By Maverick CServerSocketBaseClass
// for easier change of basesocket
#define CServerSocketBaseClass CEMSocket

class CServerSocket : public CServerSocketBaseClass
a39 1
	void ProxyListenPortEstablished();
@


1.2.2.1
log
@official sockets
@
text
@d29 1
d31 5
a35 1
class CServerSocket : public CEMSocket
d45 1
@


1.2.2.2
log
@Merges from main thread
@
text
@a28 1
#include "AsyncProxySocketLayer.h"
d30 1
a30 5
// By Maverick CServerSocketBaseClass
// for easier change of basesocket
#define CServerSocketBaseClass CEMSocket

class CServerSocket : public CServerSocketBaseClass
@


1.2.2.3
log
@Restored obaldin's version. NO MERGE on these files!!!!!!!
@
text
@d29 1
d31 5
a35 1
class CServerSocket : public CEMSocket
@


1.2.2.2.2.1
log
@Merged Proxy code
@
text
@a44 1
	void    ProxyListenPortEstablished();
@


1.1
log
@*** empty log message ***
@
text
@d29 1
d31 5
a35 1
class CServerSocket : public CEMSocket
d45 1
@

