head	1.31;
access;
symbols
	PublicRelease_1_2e:1.29
	Interim_Release_1-2e_RC1:1.29
	PublicRelease_1_2d:1.28
	Interim_Release_1-2d_RC1:1.28
	Interim_Release_1-2d_beta1:1.28
	PublicRelease_1_2c:1.27
	Interim_Release_1-2c_RC1:1.27
	Interim_Release_1-2c_beta1:1.27
	PublicRelease_1_2b:1.27
	Interim_Release_1-2b_RC1:1.27
	PublicRelease_1_2a:1.27
	Interim_Release_1-2a_RC1:1.27
	Interim_Release_1-2a_beta2:1.25
	Interim_Release_1-2a_beta1:1.25
	PublicRelease_1_2:1.22
	Interim_Release_1-2_RC1:1.22
	Interim_Release_1-2_beta1:1.21
	PublicRelease_1_1g:1.21
	Interim_Release_1-1g_RC3:1.21
	Interim_Release_1-1g_RC2:1.21
	Interim_Release_1-1g_RC1:1.21
	Interim_Release_1-1g_beta2:1.21
	Interim_Release_1-1g_beta1:1.21
	PublicRelease_1_1f:1.21
	Interim_Release_1-1f_RC1:1.21
	PublicRelease_1_1e:1.21
	Interim_Release_1-1e_RC2:1.21
	Interim_Release_1-1e_RC1:1.20
	Interim_Release_1-1e_beta1:1.19
	PublicRelease_1_1d:1.18
	Interim_Release_1-1d_RC1:1.18
	PublicRelease_1_1c:1.18
	Interim_Release_1-1c_RC1:1.18
	Interim_Release_1-1c_beta2:1.18
	Interim_Release_1-1c_beta1:1.18
	PublicRelease_1_1b:1.17
	Interim_Release_1-1b_RC1:1.17
	PublicRelease_1_1a:1.17
	Interim_Release_1-1a_RC2:1.17
	Interim_Release_1-1a_RC1:1.16
	Interim_Release_1-1a_beta2:1.16
	Interim_Release_1-1a_beta1:1.16
	PublicRelease_1_1:1.16
	Interim_Release_1-1_beta1:1.16
	PublicRelease_1o:1.16
	Interim_Release_1o_RC1:1.16
	Interim_Release_1o_beta1:1.16
	PublicRelease_1n:1.16
	Interim_Release_1n_RC2:1.16
	Interim_Release_1n_RC1:1.16
	Interim_Release_1n_beta2:1.16
	Interim_Release_1n_beta1:1.16
	PublicRelease_1m:1.16
	Interim_Release_1m_beta1:1.16
	PublicRelease_1l:1.16
	Interim_Release_1l_RC3:1.16
	Interim_Release_1l_RC2:1.16
	Interim_Release_1l_RC1:1.16
	Interim_Release_1l_beta2:1.15
	Interim_Release_1l_beta1:1.15
	PublicRelease_1k:1.15
	Interim_Release_1k_RC4:1.15
	Interim_1k_RC3:1.15
	Interim_1k_RC2:1.15
	Interim_Release_1k_RC1:1.14
	Interim_Release_1k_beta5:1.14
	Intrerim_Release_1k_beta4:1.14
	Interim_Release_1k_beta1:1.13
	PublicRelease_1j:1.12
	Interim_Release_1J_RC3:1.12
	Interim_Release_1j_RC3:1.12
	Interim_Release_1j_RC2:1.12
	Interim_Release_1j_RC1:1.12
	Interim_Release_1j_beta2:1.12
	Interim_Release_1j_beta1:1.12
	PublicRelease_1i:1.12
	Interim_Release_1i_RC6:1.12
	Interim_Release_1i_RC3:1.12
	Interim_Release_1i_RC2:1.12
	Interim_Release_1i_RC1:1.12
	Interim_Release_1i_beta3:1.12
	Interim_Release_1i_beta2:1.12
	Interim_Release_1i_beta1:1.8
	PublicRelease_1h:1.6
	Interim_Release_1h_rc2:1.6
	Interim_Release_1h_RC1:1.6
	Interim_Release_1h_beta2:1.6
	Interim_Release_1h_beta1_now:1.6
	Interim_Release_1h_beta1:1.6
	PublicRelease_1g:1.6
	Interim_Release_1g_RC6_Final:1.6
	Interim_Release_1g_RC6:1.6
	Interim_Release_1g_RC5:1.6
	Interim_Release_1g_RC4:1.6
	Interim_Release_1g_RC3:1.6
	Interim_Release_1g_beta2:1.6
	Interim_Release_1g_beta1:1.5
	Interim_Release_1f_RC4:1.5
	Interim_Release_1f_RC3:1.5
	Interim_Release_1f_RC2:1.5
	Interim_Release_1f_RC:1.5
	Interim_Release_1f_beta2:1.5
	Interim_Release_1f_beta1:1.5
	PublicRelease_1e:1.5
	Interim_Release_1e_RC2:1.5
	Interim_Release_1e_RC:1.5
	Interim_Release_1e_beta3:1.5
	Interim_Release_1e_beta2:1.5
	Interim_Release_1e_beta2_before_kuchin:1.4
	Interim_Release_1e_beta1:1.4
	PublicRelease_1c:1.4
	featurestest:1.4.0.4
	Interim_Release_1c_RC:1.4
	Interim_Release_1c_beta2:1.4
	Interim_Release_1c_beta1:1.4
	threaded_downloadqueue:1.4.0.2
	PublicRelease_1b:1.4
	Interim_Release_1b_beta2:1.4
	Interim_Release_1b_beta1:1.4
	proxydeadlake:1.3.0.8
	PublicRelease_1a:1.3
	Interim_Release_1a_beta2:1.3
	BerkeleyDb:1.3.0.6
	Interim_Release_1a_beta1:1.3
	PublicRelease_1:1.3
	goldfish:1.3
	eMulePlus_1_RC2:1.3
	eMulePlus_26b_1RC1:1.3
	PreRelease_26b_i0e:1.3
	before_26d_merge:1.3
	Interim_Release_26b_i0d:1.3
	Interim_Release_26b_i0c:1.3
	Interim_Release_26b_i0b:1.3
	Interim_Release_26b_i0a:1.3
	systraydlg:1.3.0.4
	plus26based:1.3.0.2
	Interim_Release_25b_i0b:1.3
	Proxy_Dev:1.2
	Interim_Release_25b_i0a:1.2.2.3
	proxytest:1.2.2.2.0.2
	official_sockets:1.2.0.2
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.31
date	2009.08.01.01.45.19;	author aw3;	state Exp;
branches;
next	1.30;

1.30
date	2009.05.16.23.52.44;	author aw3;	state Exp;
branches;
next	1.29;

1.29
date	2009.01.21.03.36.38;	author aw3;	state Exp;
branches;
next	1.28;

1.28
date	2007.10.31.18.18.52;	author fuxie-dk;	state Exp;
branches;
next	1.27;

1.27
date	2006.09.12.04.09.56;	author aw3;	state Exp;
branches;
next	1.26;

1.26
date	2006.07.23.00.29.50;	author aw3;	state Exp;
branches;
next	1.25;

1.25
date	2006.04.26.20.31.52;	author eklmn;	state Exp;
branches;
next	1.24;

1.24
date	2006.04.25.05.09.56;	author aw3;	state Exp;
branches;
next	1.23;

1.23
date	2006.03.24.14.35.48;	author eklmn;	state Exp;
branches;
next	1.22;

1.22
date	2006.02.06.03.06.28;	author aw3;	state Exp;
branches;
next	1.21;

1.21
date	2005.07.07.03.11.00;	author aw3;	state Exp;
branches;
next	1.20;

1.20
date	2005.06.07.03.35.19;	author aw3;	state Exp;
branches;
next	1.19;

1.19
date	2005.06.04.06.59.54;	author eklmn;	state Exp;
branches;
next	1.18;

1.18
date	2005.01.16.00.34.59;	author netwolf1;	state Exp;
branches;
next	1.17;

1.17
date	2004.12.08.19.29.45;	author aw3;	state Exp;
branches;
next	1.16;

1.16
date	2004.05.25.05.46.42;	author aw3;	state Exp;
branches;
next	1.15;

1.15
date	2004.03.31.17.15.11;	author eklmn;	state Exp;
branches;
next	1.14;

1.14
date	2004.03.14.12.23.38;	author eklmn;	state Exp;
branches;
next	1.13;

1.13
date	2004.02.15.11.55.57;	author morevit;	state Exp;
branches;
next	1.12;

1.12
date	2003.10.24.01.21.19;	author morevit;	state Exp;
branches;
next	1.11;

1.11
date	2003.10.20.13.19.59;	author morevit;	state Exp;
branches;
next	1.10;

1.10
date	2003.10.08.01.53.32;	author morevit;	state Exp;
branches;
next	1.9;

1.9
date	2003.10.05.17.53.56;	author morevit;	state Exp;
branches;
next	1.8;

1.8
date	2003.09.29.14.55.46;	author morevit;	state Exp;
branches;
next	1.7;

1.7
date	2003.09.22.16.34.33;	author morevit;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.09.01.15.46;	author syrus77;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.22.12.41.51;	author kuchin;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.28.18.43.43;	author dongato;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.02.10.47.20;	author cax2;	state Exp;
branches
	1.3.6.1
	1.3.8.1;
next	1.2;

1.2
date	2003.01.22.17.43.48;	author kuchin;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2003.01.21.18.21.20;	author cax2;	state Exp;
branches;
next	;

1.2.2.1
date	2003.01.28.14.55.44;	author obaldin;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2003.01.28.22.27.10;	author maverick65;	state Exp;
branches
	1.2.2.2.2.1;
next	1.2.2.3;

1.2.2.3
date	2003.01.29.10.36.29;	author cax2;	state Exp;
branches;
next	;

1.2.2.2.2.1
date	2003.01.28.23.51.14;	author maverick65;	state Exp;
branches;
next	;

1.3.6.1
date	2003.03.01.20.59.36;	author obaldin;	state Exp;
branches;
next	;

1.3.8.1
date	2003.02.28.10.48.30;	author dongato;	state Exp;
branches;
next	;


desc
@@


1.31
log
@Reduced H-file dependency.
@
text
@//this file is part of eMule
//Copyright (C)2002-2008 Merkur ( strEmail.Format("%s@@%s", "devteam", "emule-project.net") / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the GNU General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#pragma once

#include "EMSocket.h"
#include "opcodes.h"

class CUpDownClient;
class CPacket;
class CTimerWnd;

class CClientReqSocket : public CEMSocket
{
	friend class CListenSocket;

public:
	CUpDownClient	*m_pClient;

private:
	uint32			m_dwTimeoutTimer;
	uint32			m_dwDeleteTimer;
	bool			m_bDeleteThis;

public:
						CClientReqSocket(CUpDownClient *in_pClient = NULL);
	void				Disconnect();

	void				ResetTimeOutTimer();
	bool				CheckTimeOut();
	void				Safe_Delete();
	bool				IsDeleted() { return m_bDeleteThis; }
	
	bool				Create();
	virtual void		SendPacket(Packet *pPacket, bool bDeletePacket = true, bool bControlPacket = true);// controlpackets have a higher priority

protected:
	virtual void		Close();
	virtual void		OnConnect(int iErrorCode);
	void				OnClose(int nErrorCode);
	void				OnSend(int nErrorCode);
	void				OnReceive(int nErrorCode);
	void				OnError(int nErrorCode);
	void				PacketReceived(Packet* packet);

private:
	void				TimedDelete();
					   ~CClientReqSocket();

	bool				ProcessPacket(byte *pbytePacket, uint32 dwSize, EnumOpcodes eOpcode);
	bool				ProcessExtPacket(byte *pbytePacket, uint32 dwSize, EnumOpcodes eOpcode, uint32 dwRawSize);
	bool				CheckUploadStateForRequestParts();
	void				NoFileReply(const byte *pbyteFileHash);
};

// CListenSocket command target
class CListenSocket : public CAsyncSocketEx // deadlake PROXYSUPPORT - changed to AsyncSocketEx
{
private:
	bool			m_bListening;

	CTypedPtrList<CPtrList, CClientReqSocket*>		m_openSocketList;
	deque<uint32>	m_dwSocketOpenTime;

	uint32			m_iMaxConnectionsReachedCount;
	LONG			m_lNumPendingConnections;

public:
					CListenSocket();
				   ~CListenSocket();
	bool			StartListening();
	void			StopListening();
	virtual void	OnAccept(int iErrorCode);
	void			Process();
	void			RemoveSocket(CClientReqSocket *pSocket);
	void			AddSocket(CClientReqSocket *pSocket);
	bool			DeleteSocket(CClientReqSocket *pSocket);
	uint16			GetNumOpenSockets()		{return static_cast<uint16>(m_openSocketList.GetCount());}
	void			KillAllSockets();
	bool			TooManySockets(bool bIgnoreInterval = false);
	uint32			GetMaxConnectionsReachedCount()	{return m_iMaxConnectionsReachedCount;}
	bool			IsValidSocket(CClientReqSocket *pSocket);
	void			AddConnection();
	void			RestartListening();
	void			Debug_ClientDeleted(CUpDownClient *pClient);
};
@


1.30
log
@Unified no requested file reply preparation.
@
text
@d20 1
@


1.29
log
@More accurate download bandwidth calculation for compressed packets (reported overhead was slightly higher than real).
@
text
@d65 1
@


1.28
log
@Suppressed compiler warnings [Aw3].
@
text
@d2 1
a2 1
//Copyright (C)2002 Merkur ( merkur-@@users.sourceforge.net / http://www.emule-project.net )
a16 2

// handling incoming connections (up or downloadrequests)
a18 1
#include "packets.h"
d63 1
a63 1
	bool				ProcessExtPacket(byte *pbytePacket, uint32 dwSize, EnumOpcodes eOpcode);
@


1.27
log
@Some checking code for file block requests was moved to a separate function.
@
text
@d92 1
a92 1
	uint16			GetNumOpenSockets()		{return m_openSocketList.GetCount();}
@


1.26
log
@Unified packet buffer type; Removed unrequired #include.
@
text
@d53 2
a54 2
	virtual void			Close();
	virtual void			OnConnect(int iErrorCode);
d67 1
@


1.25
log
@change the detection of local LowID; added OnConnect()
@
text
@d19 1
a20 2
#pragma once
#include "Preferences.h"
d65 2
a66 2
	bool				ProcessPacket(char* pcPacketBuf, uint32 dwSize,EnumOpcodes eOpcode);
	bool				ProcessExtPacket(char* pcPacketBuf, uint32 dwSize,EnumOpcodes eOpcode);
@


1.24
log
@Removed unused code.
@
text
@d54 2
a55 1
	virtual void		Close();
@


1.23
log
@prevent data exchange before hello-handshake will be finished (forgotten part)
@
text
@d54 1
a54 1
	virtual void			Close();
d76 1
a76 1
	deque<uint32>		m_dwSocketOpenTime;
a78 1
	uint16			m_ConnectionStates[3];
a96 1
	void			RecalculateStats();
@


1.22
log
@Fixed timeout processing for chat session (timeout only in case when both sides don't send anything).
@
text
@d54 1
a54 1
	virtual void		Close()	{CAsyncSocketEx::Close();} // deadlake PROXYSUPPORT - changed to AsyncSocketEx
@


1.21
log
@Removed unused method.
@
text
@a24 1

d34 1
a34 1
	CUpDownClient	   *m_pClient;
a37 1
	bool				m_bDeleteThis;
d39 1
d51 1
@


1.20
log
@Removed unused code.
@
text
@a54 1
	virtual	void		OnInit();
@


1.19
log
@reimplemented "connection in 5 sec" condition, now it does not use average
@
text
@d23 1
a23 1
#include "emsocket.h"
a37 1
	CPreferences		*m_pPrefs;
d43 1
a43 1
						CClientReqSocket(CPreferences *in_pPrefs, CUpDownClient *in_pClient = NULL);
d84 1
a84 1
					CListenSocket(CPreferences *in_pPrefs);
@


1.18
log
@Add sources possibly received from global search (official).
Added missing translations in case countryflag.dll / ip-to-country.cvs is not found.
Notifier informs if a new version is available (not annoying, but still more likely
 to be noticed than just a log line).
Added 'Folder' column to Shared files window.
Prevent adding install/working dirs (\Webserver, \Db...) to Shared files.
+ some other minor changes/fixes.
@
text
@a75 1
	CPreferences   *m_pPrefs;
d78 1
a79 1
	uint16			m_iOpenSocketsInterval;
@


1.17
log
@Removed unused code.
@
text
@a68 1
//	void				PacketToDebugLogLine(const char* protocol, const char* packet, uint32 size, byte opcode) const;
@


1.16
log
@Local variables are removed from the class to reduce memory usage.
@
text
@d21 1
a21 1
#include "preferences.h"
a80 1
	uint16			m_iNumOpenSockets;
@


1.15
log
@atomic pending socket counter
@
text
@a41 3
	Requested_Block_Struct		m_sReqBlock1;
	Requested_Block_Struct		m_sReqBlock2;
	Requested_Block_Struct		m_sReqBlock3;
@


1.14
log
@possible memleak & loss of block request by OP_REQUESTPARTS
@
text
@d88 1
a88 1
	uint16			m_iNumPendingConnections;
@


1.13
log
@Changed uint32 to unsigned long from unsigned int and made necessary code changes. Got rid of _unsigned_ types int8,int16,int32,int64. Eliminated uint8 to avoid confusion. Use "byte".
@
text
@d38 2
a39 2
	CPreferences	   *m_pPrefs;
	uint32				m_dwTimeoutTimer;
d41 4
a44 1
	uint32				m_dwDeleteTimer;
@


1.12
log
@Formatting, comments, and name changes.
@
text
@d69 1
a69 1
//	void				PacketToDebugLogLine(const char* protocol, const char* packet, uint32 size, uint8 opcode) const;
@


1.11
log
@Formatting, comments, and name changes.
... and a few bug fixes.
@
text
@d30 2
a31 1
class CClientReqSocket : public CEMSocket{
d33 1
d35 1
a35 2
	CClientReqSocket(CPreferences* in_prefs, CUpDownClient* in_client = 0);	
	void	Disconnect();
d37 14
a50 3
	void	ResetTimeOutTimer();
	bool	CheckTimeOut();
	void	Safe_Delete();
d52 2
a53 2
	bool	Create();
	CUpDownClient	*m_pClient;
d55 8
a62 7
	virtual void Close()	{CAsyncSocketEx::Close();} // deadlake PROXYSUPPORT - changed to AsyncSocketEx
	virtual	void OnInit();
	void		 OnClose(int nErrorCode);
	void		 OnSend(int nErrorCode);
	void		 OnReceive(int nErrorCode);
	void		 OnError(int nErrorCode);
	void		 PacketReceived(Packet* packet);
d64 2
a65 2
	void	TimedDelete();
	~CClientReqSocket();
d67 3
a69 7
	bool	ProcessPacket(char* packet, uint32 size,EnumOpcodes eOpcode);
	bool	ProcessExtPacket(char* packet, uint32 size,EnumOpcodes eOpcode);
	//DbT:Logging void    PacketToDebugLogLine(const char* protocol, const char* packet, uint32 size, uint8 opcode) const;
	CPreferences* m_pPrefs;
	uint32	m_dwTimeoutTimer;
	bool	m_bDeleteThis;
	uint32	m_dwDeleteTimer;
a71 1

d75 12
d88 1
a88 1
					CListenSocket(CPreferences *in_prefs);
d92 1
a92 1
	virtual void	OnAccept(int nErrorCode);
d94 2
a95 2
	void			RemoveSocket(CClientReqSocket* todel);
	void			AddSocket(CClientReqSocket* toadd);
d101 1
a101 1
	bool			IsValidSocket(CClientReqSocket* totest);
d105 1
a105 12
	void			Debug_ClientDeleted(CUpDownClient* deleted);
private:
	bool			m_bListening;
	CPreferences   *m_pPrefs;

	CTypedPtrList<CPtrList, CClientReqSocket*>		m_openSocketList;

	uint16			m_iNumOpenSockets;
	uint16			m_iOpenSocketsInterval;
	uint32			m_iMaxConnectionsReachedCount;
	uint16			m_ConnectionStates[3];
	uint16			m_iNumPendingConnections;
a106 1

@


1.10
log
@Formatting, comments, and name changes.
Created distinct tag classes and typed enumerations for tags, opcodes, and protocols.
@
text
@d76 1
@


1.9
log
@Formatting, comments, and name changes.
@
text
@d54 2
a55 2
	bool	ProcessPacket(char* packet, uint32 size,uint8 opcode);
	bool	ProcessExtPacket(char* packet, uint32 size,uint8 opcode);
@


1.8
log
@Formatting, comments, and name changes.
@
text
@d41 1
a41 1
	CUpDownClient*	client;
d51 1
a51 1
	void	Delete_Timed();
d58 3
a60 3
	uint32	timeout_timer;
	bool	deletethis;
	uint32	deltimer;
d76 1
a76 1
	uint16			GetOpenSockets()		{return socket_list.GetCount();}
d86 1
a86 1
	bool			bListening;
d89 1
a89 1
	CTypedPtrList<CPtrList, CClientReqSocket*>		socket_list;
d92 1
a92 1
	uint16			m_OpenSocketsInterval;
@


1.7
log
@Formatting, comments, and name changes.
@
text
@d65 2
a66 1
class CListenSocket : public CAsyncSocketEx{ // deadlake PROXYSUPPORT - changed to AsyncSocketEx
d68 17
a84 17
	CListenSocket(CPreferences* in_prefs);
	~CListenSocket();
	bool	StartListening();
	void	StopListening();
	virtual void OnAccept(int nErrorCode);
	void	Process();
	void	RemoveSocket(CClientReqSocket* todel);
	void	AddSocket(CClientReqSocket* toadd);
	uint16	GetOpenSockets()		{return socket_list.GetCount();}
	void	KillAllSockets();
	bool	TooManySockets(bool bIgnoreInterval = false);
	uint32	GetMaxConnectionReached()	{return maxconnectionreached;}
	bool    IsValidSocket(CClientReqSocket* totest);
	void	AddConnection();
	void	RecalculateStats();
	void	ReStartListening();
	void	Debug_ClientDeleted(CUpDownClient* deleted);
d86 10
a95 8
	bool bListening;
	CPreferences* m_pPrefs;
	CTypedPtrList<CPtrList, CClientReqSocket*> socket_list;
	uint16	opensockets;
	uint16	m_OpenSocketsInterval;
	uint32	maxconnectionreached;
	uint16	m_ConnectionStates[3];
	uint16	m_nPeningConnections;
@


1.6
log
@FEATURE: data logging of unknown tags and packets [DoubleT]
@
text
@d57 1
a57 1
	CPreferences* app_prefs;
d86 1
a86 1
	CPreferences* app_prefs;
@


1.5
log
@Upgrade to 0.28a
@
text
@d56 1
a56 1
	void    PacketToDebugLogLine(const char* protocol, const char* packet, uint32 size, uint8 opcode) const;
@


1.4
log
@Proxy Support (deadlake)
@
text
@d43 1
a43 1
	virtual void Close()	{CAsyncSocketEx::Close();}
d56 1
d65 1
a65 1
class CListenSocket : public CAsyncSocketEx{
@


1.3
log
@Merge from official sockets
@
text
@d43 1
a43 1
	virtual void Close()	{CAsyncSocket::Close();}
d64 1
a64 1
class CListenSocket : public CAsyncSocket{
@


1.3.6.1
log
@keeping in sync with the main cvs line
@
text
@d43 1
a43 1
	virtual void Close()	{CAsyncSocketEx::Close();}
d64 1
a64 1
class CListenSocket : public CAsyncSocketEx{
@


1.3.8.1
log
@Proxy support fixes from deadlake.
@
text
@d43 1
a43 1
	virtual void Close()	{CAsyncSocketEx::Close();}
d64 1
a64 1
class CListenSocket : public CAsyncSocketEx{
@


1.2
log
@*** empty log message ***
@
text
@d43 1
a43 1
	virtual void Close()	{CEMSocketBaseClass::Close();}
a49 1
	virtual int	OnLayerCallback(const CAsyncSocketExLayer *pLayer, int nType, int nParam1, int nParam2);	
a61 1
#define CListenSocketBaseClass CAsyncSocketEx
d64 1
a64 1
class CListenSocket : public CListenSocketBaseClass{
a82 2
	void	OpenProxyListenSocket(ULONG ip, UINT port);
	virtual int		OnLayerCallback(const CAsyncSocketExLayer *pLayer, int nType, int nParam1, int nParam2);	
a83 1
	CAsyncProxySocketLayer* m_pProxyLayer;
a84 1
	bool bProxyListening;
d87 3
a89 3
	uint16 opensockets;
	uint16 m_OpenSocketsInterval;
	uint32 maxconnectionreached;
@


1.2.2.1
log
@official sockets
@
text
@d43 1
a43 1
	virtual void Close()	{CAsyncSocket::Close();}
d50 1
d63 1
d66 1
a66 1
class CListenSocket : public CAsyncSocket{
d85 2
d88 1
d90 1
d93 3
a95 3
	uint16	opensockets;
	uint16	m_OpenSocketsInterval;
	uint32	maxconnectionreached;
@


1.2.2.2
log
@Merges from main thread
@
text
@a61 1
#define CListenSocketBaseClass CAsyncSocket
d64 1
a64 1
class CListenSocket : public CListenSocketBaseClass{
@


1.2.2.3
log
@Restored obaldin's version. NO MERGE on these files!!!!!!!
@
text
@d62 1
d65 1
a65 1
class CListenSocket : public CAsyncSocket{
@


1.2.2.2.2.1
log
@Merged Proxy code
@
text
@d43 1
a43 1
	virtual void Close()	{CEMSocketBaseClass::Close();}
a49 1
	virtual int	OnLayerCallback(const CAsyncSocketExLayer *pLayer, int nType, int nParam1, int nParam2);	
d62 1
a62 1
#define CListenSocketBaseClass CAsyncSocketEx
a83 2
	void	OpenProxyListenSocket(ULONG ip, UINT port);
	virtual int		OnLayerCallback(const CAsyncSocketExLayer *pLayer, int nType, int nParam1, int nParam2);	
a84 1
	CAsyncProxySocketLayer* m_pProxyLayer;
a85 1
	bool bProxyListening;
@


1.1
log
@*** empty log message ***
@
text
@d43 1
a43 1
	virtual void Close()	{CAsyncSocket::Close();}
d50 1
d63 1
d66 1
a66 1
class CListenSocket : public CAsyncSocket{
d85 2
d88 1
d90 1
@

