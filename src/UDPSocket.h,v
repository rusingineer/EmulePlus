head	1.21;
access;
symbols
	PublicRelease_1_2e:1.16
	Interim_Release_1-2e_RC1:1.16
	PublicRelease_1_2d:1.15
	Interim_Release_1-2d_RC1:1.15
	Interim_Release_1-2d_beta1:1.15
	PublicRelease_1_2c:1.15
	Interim_Release_1-2c_RC1:1.15
	Interim_Release_1-2c_beta1:1.15
	PublicRelease_1_2b:1.15
	Interim_Release_1-2b_RC1:1.15
	PublicRelease_1_2a:1.15
	Interim_Release_1-2a_RC1:1.15
	Interim_Release_1-2a_beta2:1.14
	Interim_Release_1-2a_beta1:1.14
	PublicRelease_1_2:1.14
	Interim_Release_1-2_RC1:1.14
	Interim_Release_1-2_beta1:1.14
	PublicRelease_1_1g:1.14
	Interim_Release_1-1g_RC3:1.14
	Interim_Release_1-1g_RC2:1.14
	Interim_Release_1-1g_RC1:1.14
	Interim_Release_1-1g_beta2:1.14
	Interim_Release_1-1g_beta1:1.13
	PublicRelease_1_1f:1.13
	Interim_Release_1-1f_RC1:1.13
	PublicRelease_1_1e:1.13
	Interim_Release_1-1e_RC2:1.13
	Interim_Release_1-1e_RC1:1.13
	Interim_Release_1-1e_beta1:1.13
	PublicRelease_1_1d:1.13
	Interim_Release_1-1d_RC1:1.13
	PublicRelease_1_1c:1.12
	Interim_Release_1-1c_RC1:1.12
	Interim_Release_1-1c_beta2:1.12
	Interim_Release_1-1c_beta1:1.12
	PublicRelease_1_1b:1.12
	Interim_Release_1-1b_RC1:1.12
	PublicRelease_1_1a:1.12
	Interim_Release_1-1a_RC2:1.12
	Interim_Release_1-1a_RC1:1.12
	Interim_Release_1-1a_beta2:1.12
	Interim_Release_1-1a_beta1:1.12
	PublicRelease_1_1:1.12
	Interim_Release_1-1_beta1:1.12
	PublicRelease_1o:1.12
	Interim_Release_1o_RC1:1.12
	Interim_Release_1o_beta1:1.12
	PublicRelease_1n:1.12
	Interim_Release_1n_RC2:1.12
	Interim_Release_1n_RC1:1.12
	Interim_Release_1n_beta2:1.12
	Interim_Release_1n_beta1:1.12
	PublicRelease_1m:1.12
	Interim_Release_1m_beta1:1.12
	PublicRelease_1l:1.12
	Interim_Release_1l_RC3:1.12
	Interim_Release_1l_RC2:1.12
	Interim_Release_1l_RC1:1.12
	Interim_Release_1l_beta2:1.12
	Interim_Release_1l_beta1:1.11
	PublicRelease_1k:1.11
	Interim_Release_1k_RC4:1.11
	Interim_1k_RC3:1.11
	Interim_1k_RC2:1.11
	Interim_Release_1k_RC1:1.11
	Interim_Release_1k_beta5:1.11
	Intrerim_Release_1k_beta4:1.11
	Interim_Release_1k_beta1:1.11
	PublicRelease_1j:1.10
	Interim_Release_1J_RC3:1.10
	Interim_Release_1j_RC3:1.10
	Interim_Release_1j_RC2:1.10
	Interim_Release_1j_RC1:1.10
	Interim_Release_1j_beta2:1.10
	Interim_Release_1j_beta1:1.10
	PublicRelease_1i:1.10
	Interim_Release_1i_RC6:1.10
	Interim_Release_1i_RC3:1.10
	Interim_Release_1i_RC2:1.10
	Interim_Release_1i_RC1:1.10
	Interim_Release_1i_beta3:1.10
	Interim_Release_1i_beta2:1.9
	Interim_Release_1i_beta1:1.6
	PublicRelease_1h:1.5
	Interim_Release_1h_rc2:1.5
	Interim_Release_1h_RC1:1.5
	Interim_Release_1h_beta2:1.5
	Interim_Release_1h_beta1_now:1.5
	Interim_Release_1h_beta1:1.5
	PublicRelease_1g:1.5
	Interim_Release_1g_RC6_Final:1.5
	Interim_Release_1g_RC6:1.5
	Interim_Release_1g_RC5:1.5
	Interim_Release_1g_RC4:1.5
	Interim_Release_1g_RC3:1.5
	Interim_Release_1g_beta2:1.3
	Interim_Release_1g_beta1:1.3
	Interim_Release_1f_RC4:1.3
	Interim_Release_1f_RC3:1.3
	Interim_Release_1f_RC2:1.3
	Interim_Release_1f_RC:1.3
	Interim_Release_1f_beta2:1.3
	Interim_Release_1f_beta1:1.3
	PublicRelease_1e:1.3
	Interim_Release_1e_RC2:1.3
	Interim_Release_1e_RC:1.3
	Interim_Release_1e_beta3:1.3
	Interim_Release_1e_beta2:1.3
	Interim_Release_1e_beta2_before_kuchin:1.2
	Interim_Release_1e_beta1:1.2
	PublicRelease_1c:1.2
	featurestest:1.2.0.14
	Interim_Release_1c_RC:1.2
	Interim_Release_1c_beta2:1.2
	Interim_Release_1c_beta1:1.2
	threaded_downloadqueue:1.2.0.12
	PublicRelease_1b:1.2
	Interim_Release_1b_beta2:1.2
	Interim_Release_1b_beta1:1.2
	proxydeadlake:1.2.0.10
	PublicRelease_1a:1.2
	Interim_Release_1a_beta2:1.2
	BerkeleyDb:1.2.0.8
	Interim_Release_1a_beta1:1.2
	PublicRelease_1:1.2
	goldfish:1.2
	eMulePlus_1_RC2:1.2
	eMulePlus_26b_1RC1:1.2
	PreRelease_26b_i0e:1.2
	before_26d_merge:1.2
	Interim_Release_26b_i0d:1.2
	Interim_Release_26b_i0c:1.2
	Interim_Release_26b_i0b:1.2
	Interim_Release_26b_i0a:1.2
	systraydlg:1.2.0.6
	plus26based:1.2.0.4
	Interim_Release_25b_i0b:1.2
	Proxy_Dev:1.2
	Interim_Release_25b_i0a:1.2.2.1
	proxytest:1.2.2.1.0.2
	official_sockets:1.2.0.2
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.21
date	2011.08.07.03.35.00;	author aw3;	state Exp;
branches;
next	1.20;

1.20
date	2009.06.20.21.37.56;	author aw3;	state Exp;
branches;
next	1.19;

1.19
date	2009.06.14.19.15.52;	author aw3;	state Exp;
branches;
next	1.18;

1.18
date	2009.06.12.02.03.19;	author aw3;	state Exp;
branches;
next	1.17;

1.17
date	2009.06.10.02.49.36;	author aw3;	state Exp;
branches;
next	1.16;

1.16
date	2008.09.29.22.47.53;	author aw3;	state Exp;
branches;
next	1.15;

1.15
date	2006.07.22.22.49.21;	author aw3;	state Exp;
branches;
next	1.14;

1.14
date	2005.11.05.05.08.21;	author aw3;	state Exp;
branches;
next	1.13;

1.13
date	2005.03.15.03.29.34;	author aw3;	state Exp;
branches;
next	1.12;

1.12
date	2004.05.19.10.14.34;	author netwolf1;	state Exp;
branches;
next	1.11;

1.11
date	2004.02.15.11.55.58;	author morevit;	state Exp;
branches;
next	1.10;

1.10
date	2003.10.31.06.47.00;	author eklmn;	state Exp;
branches;
next	1.9;

1.9
date	2003.10.09.11.54.23;	author morevit;	state Exp;
branches;
next	1.8;

1.8
date	2003.10.09.09.25.17;	author morevit;	state Exp;
branches;
next	1.7;

1.7
date	2003.10.08.01.53.33;	author morevit;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.20.15.39.32;	author morevit;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.15.09.10.05;	author partyckip;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.10.09.36.47;	author kuchin;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.22.12.41.52;	author kuchin;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.22.17.31.58;	author kuchin;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2003.01.21.18.21.24;	author cax2;	state Exp;
branches;
next	;

1.2.2.1
date	2003.01.28.16.54.32;	author cax2;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Encryption preparations; Ported improvement for dynIP server support from original.
@
text
@//this file is part of eMule
//Copyright (C)2002-2008 Merkur ( strEmail.Format("%s@@%s", "devteam", "emule-project.net") / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the GNU General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#pragma once

#include "EncryptedDatagramSocket.h"

#ifdef OLD_SOCKETS_ENABLED

class CServerConnect;
struct SServerDNSRequest;
class CUDPSocket;
class Packet;
class CServer;

///////////////////////////////////////////////////////////////////////////////
// CUDPSocketWnd

class CUDPSocketWnd : public CWnd
{
public:
	CUDPSocketWnd() {};
	CUDPSocket* m_pOwner;

protected:
	DECLARE_MESSAGE_MAP()
	afx_msg LRESULT OnDNSLookupDone(WPARAM wParam, LPARAM lParam);
};

///////////////////////////////////////////////////////////////////////////////
// CUDPSocket

class CUDPSocket : public CAsyncSocket, public CEncryptedDatagramSocket, CLoggable
{
	friend class CServerConnect;
public:
	CUDPSocket();
	~CUDPSocket();
	bool	Create();
	void	SendPacket(Packet *pPacket, CServer *pServer, uint16 uSpecPort, byte *pInRawPkt, uint32 dwRawLen);
	void	DnsLookupDone(WPARAM wp, LPARAM lp);

protected:
	virtual void OnReceive(int iErrorCode);

private:
	HWND m_hWndResolveMessage;
	CUDPSocketWnd m_udpwnd;
	CTypedPtrList<CPtrList, SServerDNSRequest*> m_aDNSReqs;

	void	SendBuffer(uint32 dwIP, uint16 uPort, byte *pPacket, unsigned uiSize);
	bool	ProcessPacket(byte *pbytePacket, uint32 dwSize, CServer *pServer, byte uOpcode, uint32 dwIP, uint16 uPort);
};
#endif //OLD_SOCKETS_ENABLED
@


1.20
log
@Encryption preparations.
@
text
@a20 2
#define WM_DNSLOOKUPDONE WM_USER+280

d24 3
d28 3
a30 1
class Packet;
d37 1
d43 2
d55 1
a56 3
	void	AsyncResolveDNS(LPCTSTR lpszHostAddress, UINT nHostPort);
	HANDLE	m_hDNSTask;					// dns lookup handle
	
d58 1
d60 1
a60 4
	LPCTSTR m_lpszHostAddress;
	UINT m_nHostPort;
	HWND m_hWndResolveMessage;	// where to send WM_DNSRESOLVED
	SOCKADDR_IN m_SaveAddr;
d62 1
d64 1
a64 1
	void	SendBuffer();
a65 4
	char*	m_pcSendBuffer;
	uint32	m_dwSendBufLength;
	CServer* m_pServer;
	char	DnsHostBuffer[MAXGETHOSTSTRUCT];	// dns lookup structure
@


1.19
log
@Encryption preparations.
@
text
@d62 1
a62 1
	bool	ProcessPacket(byte *pbytePacket, uint32 dwSize, byte uOpcode, uint32 dwIP, uint16 uPort);
@


1.18
log
@Some clean-up.
@
text
@d19 2
d40 1
a40 1
class CUDPSocket : public CAsyncSocket, CLoggable
@


1.17
log
@Encryption preparations.
@
text
@d2 1
a2 1
//Copyright (C)2002 Merkur ( merkur-@@users.sourceforge.net / http://www.emule-project.net )
a22 1
// Client to Server communication
d30 1
a30 1
	CUDPSocketWnd();
d42 1
a42 1
	CUDPSocket(CServerConnect* in_serverconnect);
a60 1
	CServerConnect*	m_pServerConnect;
@


1.16
log
@Renaming.
@
text
@a17 2
#include "server.h"
#include "packets.h"
d25 2
a29 1
// Construction
d35 1
a35 1
	afx_msg LRESULT OnDNSLookupDone(WPARAM wParam,LPARAM lParam);
d46 1
a46 1
	void	SendPacket(Packet* packet,CServer* host);
@


1.15
log
@Removed unused declaration.
@
text
@d51 1
a51 1
	HANDLE	DnsTaskHandle;					// dns lookup handle
@


1.14
log
@Modified passing of IP address to make it easier for Unicode; Formatting.
@
text
@a62 1
	bool	ProcessExtPacket(byte* packet, uint16 size, byte opcode, LPCTSTR host, uint16 port);
a68 1

@


1.13
log
@Make size a 32-bit variable.
@
text
@d28 2
a29 2
class CUDPSocketWnd : public CWnd {

a36 2
private:
	
d53 1
a53 1
	virtual void OnReceive(int nErrorCode);
d61 2
a62 2
	void SendBuffer();
	bool	ProcessPacket(byte *pbytePacket, uint32 dwSize, byte uOpcode, LPCTSTR host, uint16 uPort);
@


1.12
log
@minor changes, fixes and improvements
@
text
@d64 1
a64 1
	bool	ProcessPacket(byte* pbytePacketBuf, uint16 uSize, byte uOpcode, LPCTSTR host, uint16 uPort);
@


1.11
log
@Changed uint32 to unsigned long from unsigned int and made necessary code changes. Got rid of _unsigned_ types int8,int16,int32,int64. Eliminated uint8 to avoid confusion. Use "byte".
@
text
@d64 2
a65 2
	bool	ProcessPacket(byte* pbytePacketBuf, uint16 uSize, byte uOpcode, TCHAR* host, uint16 uPort);
	bool	ProcessExtPacket(byte* packet, uint16 size, byte opcode, TCHAR* host, uint16 port);
@


1.10
log
@1) compession support within communicatio client<->server
2) extended UDP file search support
@
text
@d64 2
a65 2
	bool	ProcessPacket(char* pcPacketBuf, int16 uSize, uint8 uOpcode, TCHAR* host, uint16 uPort);
	bool	ProcessExtPacket(char* packet, int16 size, int8 opcode, TCHAR* host, uint16 port);
@


1.9
log
@Shouldn't try programming sober. Sorry.
@
text
@d64 1
a64 1
	bool	ProcessPacket(char* packet, int16 size, int8 opcode, TCHAR* host, uint16 port);
@


1.8
log
@Formatting, comments, and name changes.
@
text
@d69 1
a69 1
	CServer* cur_server;
@


1.7
log
@Formatting, comments, and name changes.
Created distinct tag classes and typed enumerations for tags, opcodes, and protocols.
@
text
@d68 1
a68 1
	uint32	sendblen;
@


1.6
log
@More name changes, reinstated CMuleCtrlItem class, moved srcsarevisible from CPartFile to CMuleCtrlItem (where it belongs), added "Show Full Status Icons" and "Show Gray Paused" features with corresponding preferences, modified "SmartOpen" code to make it sticky and to make it work with sources with changing states.
@
text
@d67 1
a67 1
	char*	sendbuffer;
@


1.5
log
@unicode cleanup
@
text
@d66 1
a66 1
	CServerConnect*	serverconnect;
@


1.4
log
@Preparing for new sockets
@
text
@d64 2
a65 2
	bool	ProcessPacket(char* packet, int16 size, int8 opcode, char* host, uint16 port);
	bool	ProcessExtPacket(char* packet, int16 size, int8 opcode, char* host, uint16 port);
@


1.3
log
@Upgrade to 0.28a
@
text
@d22 3
d71 3
a73 1
};@


1.2
log
@*** empty log message ***
@
text
@d39 1
a39 5
// By Maverick Added CUDPSocketBaseClass 
// to make it easier to change BaseSocket
#define CUDPSocketBaseClass CAsyncSocket

class CUDPSocket : public CUDPSocketBaseClass
@


1.2.2.1
log
@updating this branch...
@
text
@@


1.1
log
@*** empty log message ***
@
text
@d39 5
a43 1
class CUDPSocket : public CAsyncSocket
@

