head	1.3;
access;
symbols
	PublicRelease_1i:1.2
	Interim_Release_1i_RC6:1.2
	Interim_Release_1i_RC3:1.2
	Interim_Release_1i_RC2:1.2
	Interim_Release_1i_RC1:1.2
	Interim_Release_1i_beta3:1.2
	Interim_Release_1i_beta2:1.2
	Interim_Release_1i_beta1:1.2
	PublicRelease_1h:1.2
	Interim_Release_1h_rc2:1.2
	Interim_Release_1h_RC1:1.2
	Interim_Release_1h_beta2:1.2
	Interim_Release_1h_beta1_now:1.1
	Interim_Release_1h_beta1:1.1
	PublicRelease_1g:1.1
	Interim_Release_1g_RC6_Final:1.1
	Interim_Release_1g_RC6:1.1
	Interim_Release_1g_RC5:1.1
	Interim_Release_1g_RC4:1.1
	Interim_Release_1g_RC3:1.1
	Interim_Release_1g_beta2:1.1
	Interim_Release_1g_beta1:1.1
	Interim_Release_1f_RC4:1.1
	Interim_Release_1f_RC3:1.1
	Interim_Release_1f_RC2:1.1
	Interim_Release_1f_RC:1.1
	Interim_Release_1f_beta2:1.1
	Interim_Release_1f_beta1:1.1
	PublicRelease_1e:1.1
	Interim_Release_1e_RC2:1.1
	Interim_Release_1e_RC:1.1
	Interim_Release_1e_beta3:1.1
	Interim_Release_1e_beta2:1.1
	Interim_Release_1e_beta2_before_kuchin:1.1
	Interim_Release_1e_beta1:1.1;
locks; strict;
comment	@ * @;


1.3
date	2003.12.16.17.48.07;	author kuchin;	state dead;
branches;
next	1.2;

1.2
date	2003.08.26.16.54.24;	author kuchin;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.23.18.06.39;	author kuchin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@New engine
@
text
@// EmWinNt.h: interface for the CArlNt class.
//
//////////////////////////////////////////////////////////////////////
#ifdef NEW_SOCKETS
#if !defined(AFX_ARLNT_H__566F5322_6BCF_4D6D_AB47_21C3FCBBE7F7__INCLUDED_)
#define AFX_ARLNT_H__566F5322_6BCF_4D6D_AB47_21C3FCBBE7F7__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#include "../Loggable.h"

class CEmDynModule : public CLoggable
{
protected:
	HMODULE m_hDll;
	void Uninit();
public:
	CEmDynModule() : m_hDll(NULL) {}
	~CEmDynModule() { Uninit(); }
	inline bool IsInitialized() { return NULL != m_hDll; }
};

class CEmWinNT : public CEmDynModule
{
public:
	CEmWinNT();

	HANDLE (WINAPI	*m_pfnCreateIoCompletionPort)(HANDLE, HANDLE, DWORD, DWORD);
	BOOL (WINAPI	*m_pfnGetQueuedCompletionStatus)(HANDLE, PDWORD, PDWORD, OVERLAPPED**, DWORD);
	BOOL (WINAPI	*m_pfnPostQueuedCompletionStatus)(HANDLE, DWORD, DWORD, OVERLAPPED*);
	BOOL (WINAPI	*m_pfnTryEnterCriticalSection)(CRITICAL_SECTION*);

	static CEmWinNT s_stWinNT;
};

class CEmMswSock : public CEmDynModule
{
public:
	CEmMswSock();

	BOOL (WINAPI *m_pfnAcceptEx)(SOCKET, SOCKET, PVOID, DWORD, DWORD, DWORD, DWORD*, OVERLAPPED*);
	void (WINAPI *m_pfnGetAcceptExSockaddrs)(PVOID, DWORD, DWORD, DWORD, SOCKADDR**, int*, SOCKADDR**, int*);
};

#endif // !defined(AFX_ARLNT_H__566F5322_6BCF_4D6D_AB47_21C3FCBBE7F7__INCLUDED_)
#endif@


1.2
log
@New sockets - finally, can connect to server and even send/receive some opcodes. To be continued...
@
text
@@


1.1
log
@*** empty log message ***
@
text
@d12 1
a12 1
#include "Loggable.h"
@

