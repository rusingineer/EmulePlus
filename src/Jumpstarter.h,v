head	1.12;
access;
symbols
	PublicRelease_1_2e:1.12
	Interim_Release_1-2e_RC1:1.12
	PublicRelease_1_2d:1.12
	Interim_Release_1-2d_RC1:1.12
	Interim_Release_1-2d_beta1:1.12
	PublicRelease_1_2c:1.11
	Interim_Release_1-2c_RC1:1.11
	Interim_Release_1-2c_beta1:1.11
	PublicRelease_1_2b:1.11
	Interim_Release_1-2b_RC1:1.11
	PublicRelease_1_2a:1.11
	Interim_Release_1-2a_RC1:1.11
	Interim_Release_1-2a_beta2:1.10
	Interim_Release_1-2a_beta1:1.10
	PublicRelease_1_2:1.10
	Interim_Release_1-2_RC1:1.10
	Interim_Release_1-2_beta1:1.10
	PublicRelease_1_1g:1.10
	Interim_Release_1-1g_RC3:1.10
	Interim_Release_1-1g_RC2:1.10
	Interim_Release_1-1g_RC1:1.10
	Interim_Release_1-1g_beta2:1.9
	Interim_Release_1-1g_beta1:1.9
	PublicRelease_1_1f:1.9
	Interim_Release_1-1f_RC1:1.9
	PublicRelease_1_1e:1.9
	Interim_Release_1-1e_RC2:1.9
	Interim_Release_1-1e_RC1:1.9
	Interim_Release_1-1e_beta1:1.9
	PublicRelease_1_1d:1.9
	Interim_Release_1-1d_RC1:1.9
	PublicRelease_1_1c:1.9
	Interim_Release_1-1c_RC1:1.9
	Interim_Release_1-1c_beta2:1.9
	Interim_Release_1-1c_beta1:1.9
	PublicRelease_1_1b:1.9
	Interim_Release_1-1b_RC1:1.9
	PublicRelease_1_1a:1.9
	Interim_Release_1-1a_RC2:1.9
	Interim_Release_1-1a_RC1:1.9
	Interim_Release_1-1a_beta2:1.9
	Interim_Release_1-1a_beta1:1.9
	PublicRelease_1_1:1.9
	Interim_Release_1-1_beta1:1.9
	PublicRelease_1o:1.9
	Interim_Release_1o_RC1:1.9
	Interim_Release_1o_beta1:1.9
	PublicRelease_1n:1.9
	Interim_Release_1n_RC2:1.9
	Interim_Release_1n_RC1:1.9
	Interim_Release_1n_beta2:1.9
	Interim_Release_1n_beta1:1.9
	PublicRelease_1m:1.9
	Interim_Release_1m_beta1:1.9
	PublicRelease_1l:1.9
	Interim_Release_1l_RC3:1.9
	Interim_Release_1l_RC2:1.9
	Interim_Release_1l_RC1:1.9
	Interim_Release_1l_beta2:1.9
	Interim_Release_1l_beta1:1.9
	PublicRelease_1k:1.9
	Interim_Release_1k_RC4:1.9
	Interim_1k_RC3:1.9
	Interim_1k_RC2:1.9
	Interim_Release_1k_RC1:1.9
	Interim_Release_1k_beta5:1.9
	Intrerim_Release_1k_beta4:1.9
	Interim_Release_1k_beta1:1.9
	PublicRelease_1j:1.8
	Interim_Release_1J_RC3:1.8
	Interim_Release_1j_RC3:1.8
	Interim_Release_1j_RC2:1.8
	Interim_Release_1j_RC1:1.8
	Interim_Release_1j_beta2:1.8
	Interim_Release_1j_beta1:1.8
	PublicRelease_1i:1.8
	Interim_Release_1i_RC6:1.8
	Interim_Release_1i_RC3:1.8
	Interim_Release_1i_RC2:1.8
	Interim_Release_1i_RC1:1.8
	Interim_Release_1i_beta3:1.8
	Interim_Release_1i_beta2:1.8
	Interim_Release_1i_beta1:1.8
	PublicRelease_1h:1.8
	Interim_Release_1h_rc2:1.8
	Interim_Release_1h_RC1:1.8
	Interim_Release_1h_beta2:1.8
	Interim_Release_1h_beta1_now:1.8
	Interim_Release_1h_beta1:1.8
	PublicRelease_1g:1.8
	Interim_Release_1g_RC6_Final:1.8
	Interim_Release_1g_RC6:1.8
	Interim_Release_1g_RC5:1.8
	Interim_Release_1g_RC4:1.8
	Interim_Release_1g_RC3:1.8
	Interim_Release_1g_beta2:1.8
	Interim_Release_1g_beta1:1.8
	Interim_Release_1f_RC4:1.6
	Interim_Release_1f_RC3:1.6
	Interim_Release_1f_RC2:1.5
	Interim_Release_1f_RC:1.5
	Interim_Release_1f_beta2:1.5
	Interim_Release_1f_beta1:1.5
	PublicRelease_1e:1.5
	Interim_Release_1e_RC2:1.5
	Interim_Release_1e_RC:1.5
	Interim_Release_1e_beta3:1.5
	Interim_Release_1e_beta2:1.5
	Interim_Release_1e_beta2_before_kuchin:1.5
	Interim_Release_1e_beta1:1.5
	PublicRelease_1c:1.4
	featurestest:1.4.0.4
	Interim_Release_1c_RC:1.4
	Interim_Release_1c_beta2:1.4
	Interim_Release_1c_beta1:1.4
	threaded_downloadqueue:1.4.0.2
	PublicRelease_1b:1.3;
locks; strict;
comment	@ * @;


1.12
date	2007.12.26.04.32.19;	author aw3;	state Exp;
branches;
next	1.11;

1.11
date	2006.07.17.01.28.57;	author aw3;	state Exp;
branches;
next	1.10;

1.10
date	2005.12.01.04.05.33;	author aw3;	state Exp;
branches;
next	1.9;

1.9
date	2004.02.13.16.13.34;	author netwolf1;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.30.21.26.58;	author partyckip;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.26.17.24.47;	author partyckip;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.22.13.12.23;	author obaldin;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.11.21.58.03;	author obaldin;	state Exp;
branches;
next	1.4;

1.4
date	2003.03.11.01.50.34;	author obaldin;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.09.16.21.45;	author obaldin;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.09.12.36.05;	author obaldin;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.09.09.55.53;	author obaldin;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Reduced H-file dependency; Formatting.
@
text
@//	This file is part of eMule Plus
//
//	This program is free software; you can redistribute it and/or
//	modify it under the terms of the GNU General Public License
//	as published by the Free Software Foundation; either
//	version 2 of the License, or (at your option) any later version.
//
//	This program is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU General Public License for more details.
//
//	You should have received a copy of the GNU General Public License
//	along with this program; if not, write to the Free Software
//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
// Written by obaldin
#pragma once

class CUpDownClient;
class CKnownFile;
class DbEnv;
class Db;

class CJumpstarter
{
public:
	CJumpstarter(CKnownFile *file);
	~CJumpstarter(void);

	static void OpenDatabases(DbEnv *pDbEnvironment);
	static void CloseDatabases(void);

	static bool ShouldBeEnabledForFile(CKnownFile *file);
	static bool IsJsCompleteForFile(CKnownFile *file);
	static void EnableForFile(CKnownFile *file);
	void Disable();

	void AddSentBlock(CUpDownClient *client, const uint64 &qwStartOffset, uint32 togo);
	void WriteJumpstartPartStatus(CUpDownClient *client, CMemFile *file);
	bool AllowChunkForClient(uint32 partNo, CUpDownClient *client);

private:
	bool IsChunkComplete(uint32 partNo);
	uint32 NumVisibleInChunksMap(uchar *chunks_map);
	static bool ReadJsEnabled(CKnownFile *file);
	static void WriteJsEnabled(CKnownFile *file, bool enabled);

private:
	CKnownFile		*m_KFile;
	uint32			m_dwParts;

	static DbEnv	*pDbEnv;
	static Db		*pDbJumpstart;
	static Db		*pDbUserBlocks;
	static Db		*pDbUserChunks;
	static Db		*pDbJSOptions;
};
@


1.11
log
@Large file size support preparations.
@
text
@d20 4
a23 1
#include "emule.h"
d50 2
a51 2
	CKnownFile		*kfile;
	uint32			nParts;
@


1.10
log
@Reduced resources used by JumpStart database (don't keep file and user names);
Formatting.
@
text
@d1 16
d18 1
a19 1
#pragma once
a20 1
#include "KnownFile.h"
d31 3
a33 3
	static bool ShouldBeEnabledForFile(CKnownFile* file);
	static bool IsJsCompleteForFile(CKnownFile* file);
	static void EnableForFile(CKnownFile* file);
d36 1
a36 1
	void AddSentBlock(CUpDownClient *client, uint32 start_offset, uint32 togo);
@


1.9
log
@removed MOBILE_MULE and JUMPSTART defines + minor improvements (thx aw3)
@
text
@a2 1

d10 1
a10 1
	CJumpstarter(CKnownFile* file);
d13 2
a14 2
    static void OpenDatabases(DbEnv*	pDbEnvironment);
    static void CloseDatabases(void);
d16 8
a23 8
    static bool ShouldBeEnabledForFile(CKnownFile* file);
    static bool IsJsCompleteForFile(CKnownFile* file);
    static void EnableForFile(CKnownFile* file);
    void Disable();

    void AddSentBlock(CUpDownClient* client,uint32 start_offset, uint32 togo);
    void WriteJumpstartPartStatus(CUpDownClient* client, CMemFile* file);
    bool AllowChunkForClient(uint32 partNo, CUpDownClient* client);
d26 4
a29 5
    bool IsChunkComplete(uint32 partNo);
    uint32 NumVisibleInChunksMap(uchar* chunks_map);
    static void AddHashName(DbTxn* tid, const uchar* hash, LPCTSTR name);
    static bool ReadJsEnabled(CKnownFile* file);
    static void WriteJsEnabled(CKnownFile* file, bool enabled);
d32 2
a33 2
    CKnownFile* kfile;
    uint32      nParts;
d35 6
a40 7
    static DbEnv*	pDbEnv;
	static Db*		pDbJumpstart;
	static Db*		pDbUserBlocks;
	static Db*		pDbUserChunks;
	static Db*		pDbHashNames;
	static Db*		pDbJSOptions;
};@


1.8
log
@code cleanup
@
text
@a7 2
#if JUMPSTART

d43 1
a43 3
};

#endif // JUMPSTART
@


1.7
log
@const correctness
@
text
@d31 1
a31 1
    static void AddHashName(DbTxn* tid, uchar* hash, LPCTSTR name);
@


1.6
log
@fix for Jumpstart insisting on turning itself on
@
text
@d31 1
a31 1
    static void AddHashName(DbTxn* tid, uchar* hash, char* name);
@


1.5
log
@Jumpstart debug runtime check
@
text
@d20 1
d22 1
d26 1
a26 1
    bool IsChunkComplete(uint32 partNo);
d29 1
d32 2
d44 1
@


1.4
log
@*** empty log message ***
@
text
@d24 1
@


1.3
log
@more Jumpstarter
@
text
@d27 1
d37 1
@


1.2
log
@compilation fix
@
text
@d23 5
@


1.1
log
@Changes protected by a #define, should have no effect
@
text
@d3 1
d8 2
d32 2
@

