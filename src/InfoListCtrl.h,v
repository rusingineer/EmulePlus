head	1.23;
access;
symbols
	PublicRelease_1_2e:1.23
	Interim_Release_1-2e_RC1:1.23
	PublicRelease_1_2d:1.21
	Interim_Release_1-2d_RC1:1.21
	Interim_Release_1-2d_beta1:1.21
	PublicRelease_1_2c:1.20
	Interim_Release_1-2c_RC1:1.20
	Interim_Release_1-2c_beta1:1.20
	PublicRelease_1_2b:1.20
	Interim_Release_1-2b_RC1:1.20
	PublicRelease_1_2a:1.20
	Interim_Release_1-2a_RC1:1.20
	Interim_Release_1-2a_beta2:1.20
	Interim_Release_1-2a_beta1:1.19
	PublicRelease_1_2:1.19
	Interim_Release_1-2_RC1:1.19
	Interim_Release_1-2_beta1:1.19
	PublicRelease_1_1g:1.19
	Interim_Release_1-1g_RC3:1.19
	Interim_Release_1-1g_RC2:1.19
	Interim_Release_1-1g_RC1:1.19
	Interim_Release_1-1g_beta2:1.19
	Interim_Release_1-1g_beta1:1.19
	PublicRelease_1_1f:1.19
	Interim_Release_1-1f_RC1:1.19
	PublicRelease_1_1e:1.19
	Interim_Release_1-1e_RC2:1.19
	Interim_Release_1-1e_RC1:1.19
	Interim_Release_1-1e_beta1:1.19
	PublicRelease_1_1d:1.19
	Interim_Release_1-1d_RC1:1.19
	PublicRelease_1_1c:1.19
	Interim_Release_1-1c_RC1:1.19
	Interim_Release_1-1c_beta2:1.19
	Interim_Release_1-1c_beta1:1.19
	PublicRelease_1_1b:1.19
	Interim_Release_1-1b_RC1:1.19
	PublicRelease_1_1a:1.19
	Interim_Release_1-1a_RC2:1.19
	Interim_Release_1-1a_RC1:1.19
	Interim_Release_1-1a_beta2:1.19
	Interim_Release_1-1a_beta1:1.18
	PublicRelease_1_1:1.18
	Interim_Release_1-1_beta1:1.18
	PublicRelease_1o:1.18
	Interim_Release_1o_RC1:1.18
	Interim_Release_1o_beta1:1.18
	PublicRelease_1n:1.18
	Interim_Release_1n_RC2:1.18
	Interim_Release_1n_RC1:1.18
	Interim_Release_1n_beta2:1.18
	Interim_Release_1n_beta1:1.17
	PublicRelease_1m:1.17
	Interim_Release_1m_beta1:1.17
	PublicRelease_1l:1.17
	Interim_Release_1l_RC3:1.17
	Interim_Release_1l_RC2:1.17
	Interim_Release_1l_RC1:1.17
	Interim_Release_1l_beta2:1.17
	Interim_Release_1l_beta1:1.17
	PublicRelease_1k:1.15
	Interim_Release_1k_RC4:1.15
	Interim_1k_RC3:1.15
	Interim_1k_RC2:1.15
	Interim_Release_1k_RC1:1.15
	Interim_Release_1k_beta5:1.13
	Intrerim_Release_1k_beta4:1.13
	Interim_Release_1k_beta1:1.13
	PublicRelease_1j:1.12
	Interim_Release_1J_RC3:1.12
	Interim_Release_1j_RC3:1.12
	Interim_Release_1j_RC2:1.10
	Interim_Release_1j_RC1:1.10
	Interim_Release_1j_beta2:1.10
	Interim_Release_1j_beta1:1.10
	PublicRelease_1i:1.10
	Interim_Release_1i_RC6:1.10
	Interim_Release_1i_RC3:1.8
	Interim_Release_1i_RC2:1.8
	Interim_Release_1i_RC1:1.6
	Interim_Release_1i_beta3:1.6
	Interim_Release_1i_beta2:1.6
	Interim_Release_1i_beta1:1.6
	PublicRelease_1h:1.4
	Interim_Release_1h_rc2:1.4
	Interim_Release_1h_RC1:1.4
	Interim_Release_1h_beta2:1.4
	Interim_Release_1h_beta1_now:1.4
	Interim_Release_1h_beta1:1.4
	PublicRelease_1g:1.4
	Interim_Release_1g_RC6_Final:1.4
	Interim_Release_1g_RC6:1.4
	Interim_Release_1g_RC5:1.4
	Interim_Release_1g_RC4:1.4
	Interim_Release_1g_RC3:1.4
	Interim_Release_1g_beta2:1.3
	Interim_Release_1g_beta1:1.3
	Interim_Release_1f_RC4:1.2
	Interim_Release_1f_RC3:1.2
	Interim_Release_1f_RC2:1.2
	Interim_Release_1f_RC:1.2
	Interim_Release_1f_beta2:1.2
	Interim_Release_1f_beta1:1.2
	PublicRelease_1e:1.2
	Interim_Release_1e_RC2:1.2
	Interim_Release_1e_RC:1.2
	Interim_Release_1e_beta3:1.2
	Interim_Release_1e_beta2:1.2
	Interim_Release_1e_beta2_before_kuchin:1.2
	Interim_Release_1e_beta1:1.2
	PublicRelease_1c:1.2
	featurestest:1.2.0.14
	Interim_Release_1c_RC:1.2
	Interim_Release_1c_beta2:1.2
	Interim_Release_1c_beta1:1.2
	threaded_downloadqueue:1.2.0.12
	PublicRelease_1b:1.2
	Interim_Release_1b_beta2:1.2
	Interim_Release_1b_beta1:1.2
	proxydeadlake:1.2.0.10
	PublicRelease_1a:1.2
	Interim_Release_1a_beta2:1.2
	BerkeleyDb:1.2.0.8
	Interim_Release_1a_beta1:1.2
	PublicRelease_1:1.2
	goldfish:1.2
	eMulePlus_1_RC2:1.2
	eMulePlus_26b_1RC1:1.2
	PreRelease_26b_i0e:1.2
	before_26d_merge:1.2
	Interim_Release_26b_i0d:1.2
	Interim_Release_26b_i0c:1.2
	Interim_Release_26b_i0b:1.2
	Interim_Release_26b_i0a:1.2
	systraydlg:1.2.0.6
	plus26based:1.2.0.4
	Interim_Release_25b_i0b:1.2
	Proxy_Dev:1.2
	Interim_Release_25b_i0a:1.2.2.1
	proxytest:1.2.2.1.0.2
	official_sockets:1.2.0.2
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.23
date	2008.07.17.04.19.08;	author aw3;	state Exp;
branches;
next	1.22;

1.22
date	2008.07.14.04.43.59;	author aw3;	state Exp;
branches;
next	1.21;

1.21
date	2008.02.20.04.35.53;	author aw3;	state Exp;
branches;
next	1.20;

1.20
date	2006.05.19.04.07.51;	author aw3;	state Exp;
branches;
next	1.19;

1.19
date	2004.11.08.21.04.29;	author aw3;	state Exp;
branches;
next	1.18;

1.18
date	2004.08.05.21.34.57;	author aw3;	state Exp;
branches;
next	1.17;

1.17
date	2004.05.05.02.22.51;	author netwolf1;	state Exp;
branches;
next	1.16;

1.16
date	2004.05.04.17.51.07;	author netwolf1;	state Exp;
branches;
next	1.15;

1.15
date	2004.03.23.18.37.13;	author dongato;	state Exp;
branches;
next	1.14;

1.14
date	2004.03.23.14.24.14;	author dongato;	state Exp;
branches;
next	1.13;

1.13
date	2004.01.31.12.17.08;	author morevit;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.20.13.20.57;	author dongato;	state Exp;
branches;
next	1.11;

1.11
date	2004.01.16.19.51.23;	author dongato;	state Exp;
branches;
next	1.10;

1.10
date	2003.11.27.13.57.18;	author eklmn;	state Exp;
branches;
next	1.9;

1.9
date	2003.11.22.13.13.08;	author eklmn;	state Exp;
branches;
next	1.8;

1.8
date	2003.11.08.14.18.28;	author eklmn;	state Exp;
branches;
next	1.7;

1.7
date	2003.11.07.22.14.25;	author eklmn;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.20.15.39.30;	author morevit;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.19.00.13.37;	author morevit;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.09.20.17.37;	author partyckip;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.30.17.11.46;	author syrus77;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.22.17.51.44;	author kuchin;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2003.01.21.18.21.18;	author cax2;	state Exp;
branches;
next	;

1.2.2.1
date	2003.01.28.16.54.11;	author cax2;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Reduced H-file dependency.
@
text
@//	This file is part of eMule Plus
//
//	This program is free software; you can redistribute it and/or
//	modify it under the terms of the GNU General Public License
//	as published by the Free Software Foundation; either
//	version 2 of the License, or (at your option) any later version.
//
//	This program is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU General Public License for more details.
//
//	You should have received a copy of the GNU General Public License
//	along with this program; if not, write to the Free Software
//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
// (p) 2002 by FoRcHa (a.k.a. NO)  [seppforcher38@@hotmail.com]
#pragma once

#include "COPTIONTREE\OptionTree.h"

class CUpDownClient;

enum EnumInfoListType
{
	INFOLISTTYPE_NONE = 0,
	INFOLISTTYPE_SOURCE = 1,
	INFOLISTTYPE_FILE = 2
};

class COptionTreeItemComboBox;
class COptionTreeItemStatic;

class CInfoListCtrl : public COptionTree
{
public:
	CInfoListCtrl();
	virtual ~CInfoListCtrl();
	void Localize();

protected:
	void ClearList();
	void CreateList();

	void FillSourcenameList();
	void UpdateData(bool bExpand = false);
	void SaveState(EnumInfoListType eListType)
	{
		if (eListType == INFOLISTTYPE_SOURCE && m_pClient != NULL)
		{
			if (UserData.General)
				m_bExpandedUser[0] = UserData.General->IsExpanded();
			if (UserData.Transfer)
				m_bExpandedUser[1] = UserData.Transfer->IsExpanded();
			if (UserData.Scores)
				m_bExpandedUser[2] = UserData.Scores->IsExpanded();
			if (UserData.RemoteScores)
				m_bExpandedUser[3] = UserData.RemoteScores->IsExpanded();
		}
		else if (eListType == INFOLISTTYPE_FILE && m_pPartFile != NULL)
		{
			if (FileData.General)
				m_bExpandedFile[0] = FileData.General->IsExpanded();
			if (FileData.Transfer)
				m_bExpandedFile[1] = FileData.Transfer->IsExpanded();
		}
	}

protected:
	CPartFile* 	m_pPartFile;
	CUpDownClient* m_pClient;
	EnumInfoListType m_eListType;
	
	UINT m_nUpdateTimer;
	COLORREF m_crEntryTextColor;

	bool m_bShown;
	BOOL m_bExpandedUser[4];
	BOOL m_bExpandedFile[2];
	
	struct _TAG_USERDATA_
	{
		COptionTreeItem			*General;
		COptionTreeItemStatic	*UserName;
		COptionTreeItemStatic	*UserHash;
		COptionTreeItemStatic	*ClientSoftware;
		COptionTreeItemStatic	*IPAddress;
		COptionTreeItemStatic	*ID;
		COptionTreeItemStatic	*ServerIP;
		COptionTreeItemStatic	*ServerName;

		COptionTreeItem			*Transfer;
		COptionTreeItemStatic	*CurDownloading;
		COptionTreeItemStatic	*DownloadedSession;
		COptionTreeItemStatic	*UploadedSession;
		COptionTreeItemStatic	*AverageDownloadrate;
		COptionTreeItemStatic	*AverageUploadrate;
		COptionTreeItemStatic	*DownloadedTotal;
		COptionTreeItemStatic	*UploadedTotal;

		COptionTreeItem			*Scores;
		COptionTreeItemStatic	*DlUpModifier;
		COptionTreeItemStatic	*CommunityUser;
		COptionTreeItemStatic	*Rating;
		COptionTreeItemStatic	*UploadQueueScore;

		COptionTreeItemStatic	*SFRatio;
		COptionTreeItemStatic	*RFRatio;

		COptionTreeItem			*RemoteScores;
		COptionTreeItemStatic	*RemoteDlUpModifier;
		COptionTreeItemStatic	*RemoteRating;
		COptionTreeItemStatic	*RemoteQueueRank;
	} UserData;
	
	struct _TAG_FILEDATA_
	{
		COptionTreeItem			*General;
		COptionTreeItemStatic	*FullName;
		COptionTreeItemStatic	*MetFile;
		COptionTreeItemStatic	*Hash;
		COptionTreeItemStatic	*FileSize;
		COptionTreeItemStatic	*RealSize;
		COptionTreeItemStatic	*PartFileStatus;
		COptionTreeItemComboBox	*SourceNames;
		bool					bSourceNameCombo;
		int						iSourceNameUpdateDelay;
		
		COptionTreeItem			*Transfer;
		COptionTreeItemStatic	*FoundSources;
		COptionTreeItemStatic	*CompleteSources;
		COptionTreeItemStatic	*FilepartCount;
		COptionTreeItemStatic	*PartAvailable;
		COptionTreeItemStatic	*Transferred;
		COptionTreeItemStatic	*DataRate;
		COptionTreeItemStatic	*Transferring;
		COptionTreeItemStatic	*CompletedSize;
		COptionTreeItemStatic	*LastSeenComplete;
		COptionTreeItemStatic	*LastProgress;
	} FileData;

public:
	BOOL Create(DWORD dwStyle, RECT rcRect, CWnd* pParentWnd, UINT nID);

	void SetList(EnumInfoListType enumItemType, void * pObject = NULL);

	EnumInfoListType GetType() { return m_eListType; }
	void SetType(EnumInfoListType in_ListType) { m_eListType = in_ListType; }

	CString GetName() const;
	CPartFile* GetFile() { return m_pPartFile; }
	CUpDownClient* GetClient() { return m_pClient; }

protected:
	DECLARE_MESSAGE_MAP()
public:
	afx_msg void OnTimer(UINT nIDEvent);
	afx_msg void OnShowWindow(BOOL bShow, UINT nStatus);
};
@


1.22
log
@Reduced H-file dependency.
@
text
@d21 2
a22 1
#include "updownclient.h"
d150 1
a150 8
	CString GetName()
	{
		if (m_eListType == INFOLISTTYPE_SOURCE)
			return m_pClient == NULL ? _T("") : m_pClient->GetUserName();
		else
			return m_pPartFile == NULL ? _T("") : m_pPartFile->GetFileName();
	}

@


1.21
log
@Suppressed compiler warnings.
@
text
@d1 16
a16 1
// InfoListCtrl.h: interface for the CInfoListCtrl class.
a17 2
//////////////////////////////////////////////////////////////////////////////////

a20 1
#include "types.h"
d30 3
a160 2
	//{{AFX_MSG(CInfoListCtrl)
	//}}AFX_MSG
@


1.20
log
@Added Complete Sources information to the file details.
@
text
@d62 2
a63 2
	bool m_bExpandedUser[4];
	bool m_bExpandedFile[2];
@


1.19
log
@Removed non-working code.
@
text
@d115 1
@


1.18
log
@Preparations for new client version report code;
Removed separate version string.
@
text
@a4 4
#if !defined(AFX_INFOLISTCTRL_H__3BAB23B2_6ED7_47E7_A3E6_8ECE3FA6D42C__INCLUDED_)
#define AFX_INFOLISTCTRL_H__3BAB23B2_6ED7_47E7_A3E6_8ECE3FA6D42C__INCLUDED_

#if _MSC_VER > 1000
a5 1
#endif // _MSC_VER > 1000
a96 1
		COptionTreeItemStatic	*RemoteUploadQueueScore;
a97 2
		COptionTreeItemStatic	*RemoteClientSpeed;
	
a122 1

a151 3

#endif // !defined(AFX_INFOLISTCTRL_H__3BAB23B2_6ED7_47E7_A3E6_8ECE3FA6D42C__INCLUDED_)
// (p) 2002 by FoRcHa (a.k.a. NO)  [seppforcher38@@hotmail.com]
@


1.17
log
@Added 'filesize on disk' info to details pane, file details, category tooltips and statistics
@
text
@d20 1
a20 1
	INFOLISTTYPE_FILE = 2,
d23 1
a23 1
class CInfoListCtrl : public COptionTree  
a75 1
		COptionTreeItemStatic	*ClientVersion;
a95 1
        // Maverick
d106 1
a106 1
	}UserData;
d132 1
a132 1
	}FileData;
@


1.16
log
@better estimation of own score on remote client + no more friend/community guess + minor Infolist fix + removed unused functions
@
text
@d117 1
@


1.15
log
@Hope now it's fixed the problem with InfoListCtrl and empty data when minimize+maximize
@
text
@d47 1
a47 1
				m_bExpandedUser[3] = UserData.Scores->IsExpanded();
a102 1
		COptionTreeItemStatic	*RemoteCommunityUser;
d131 1
a131 1
		COptionTreeItemStatic	*LastProgress;	//SyruS last progress info
@


1.14
log
@Minor change... had to find where the bug is. :-(
@
text
@d36 1
a36 1
	void SaveState()
d38 1
a38 1
		if (m_eListType == INFOLISTTYPE_SOURCE)
d40 8
a47 11
			if (m_pClient != NULL)
			{
				if(UserData.General)
					m_bExpandedUser[0] = UserData.General->IsExpanded();
				if(UserData.Transfer)
					m_bExpandedUser[1] = UserData.Transfer->IsExpanded();
				if(UserData.Scores)
					m_bExpandedUser[2] = UserData.Scores->IsExpanded();
				if(UserData.RemoteScores)
					m_bExpandedUser[3] = UserData.Scores->IsExpanded();
			}
d49 1
a49 1
		else if (m_eListType == INFOLISTTYPE_FILE)
d51 4
a54 7
			if(m_pPartFile != NULL)
			{
				if(FileData.General)
					m_bExpandedFile[0] = FileData.General->IsExpanded();
				if(FileData.Transfer)
					m_bExpandedFile[1] = FileData.Transfer->IsExpanded();
			}
@


1.13
log
@Formatting, comments, and name changes.
@
text
@d36 1
a36 1
	void SaveState(bool bUser)
d38 1
a38 1
		if(bUser)
d40 1
a40 1
			if(m_pClient != NULL && m_eListType != INFOLISTTYPE_NONE)
d52 1
a52 1
		else
d54 1
a54 1
			if(m_pPartFile != NULL && m_eListType != INFOLISTTYPE_NONE)
@


1.12
log
@eklmn changes for InfoListCtrl (hope no more GUI/Update bugs appear)
@
text
@d152 1
a152 1
		if(m_eListType == INFOLISTTYPE_SOURCE)
@


1.11
log
@Changed InfoListCtrl code to use the existing EnumInfoListType
@
text
@d68 1
a68 1

d72 1
@


1.10
log
@proper InfoList handling
@
text
@d40 1
a40 1
			if(m_pClient != NULL && !m_bClear)
d54 1
a54 1
			if(m_pPartFile != NULL && !m_bClear)
d67 1
a67 2
	bool m_bUser;
	bool m_bClear;
d146 3
a148 4
	EnumInfoListType GetType()
	{
		return m_bUser ? (m_pClient == NULL ? INFOLISTTYPE_NONE : INFOLISTTYPE_SOURCE) : (m_pPartFile == NULL ? INFOLISTTYPE_NONE : INFOLISTTYPE_FILE);
	}
d151 1
a151 1
		if(m_bUser)
d156 3
a158 8
	CPartFile* GetFile()
	{
		return m_pPartFile;
	}
	CUpDownClient* GetClient()
	{
		return m_pClient;
	}
@


1.9
log
@futher optimization to prevent resource possible leak
@
text
@d31 3
d35 1
a35 2
	void ReCreateList(BOOL bUserData);
	void UpdateData(bool bRedraw = true, bool bExpand = false);
d145 1
a145 2
	void SwitchToUser(CUpDownClient* client);
	void SwitchToFile(CPartFile* file);
@


1.8
log
@rollback my chages
@
text
@d52 1
a52 1
			if(m_pPartFile != NULL)
@


1.7
log
@memleak. Interim BUG:0000419
@
text
@a32 1
	void ClearList(BOOL bUserData);
a66 1
	bool	m_bLastUserData;
@


1.6
log
@More name changes, reinstated CMuleCtrlItem class, moved srcsarevisible from CPartFile to CMuleCtrlItem (where it belongs), added "Show Full Status Icons" and "Show Gray Paused" features with corresponding preferences, modified "SmartOpen" code to make it sticky and to make it work with sources with changing states.
@
text
@d33 1
d39 1
a39 1
			if(m_client != NULL && !m_bClear)
d53 1
a53 1
			if(m_file != NULL)
d64 2
a65 2
	CPartFile* m_file;
	CUpDownClient* m_client;
d68 1
d150 1
a150 1
		return m_bUser ? (m_client == NULL ? INFOLISTTYPE_NONE : INFOLISTTYPE_SOURCE) : (m_file == NULL ? INFOLISTTYPE_NONE : INFOLISTTYPE_FILE);
d155 1
a155 1
			return m_client == NULL ? _T("") : m_client->GetUserName();
d157 1
a157 1
			return m_file == NULL ? _T("") : m_file->GetFileName();
d161 1
a161 1
		return m_file;
d165 1
a165 1
		return m_client;
@


1.5
log
@First batch of the threatened name changes. Shouldn't be any logic changes here.
@
text
@d16 7
d146 1
a146 1
	int GetType()
d148 1
a148 1
		return m_bUser ? (m_client == NULL ? 0 : 1) : (m_file == NULL ? 0 : 2);
@


1.4
log
@unicode cleanup
@
text
@d124 1
a124 1
		COptionTreeItemStatic	*Transfered;
d126 1
a126 1
		COptionTreeItemStatic	*Transfering;
@


1.3
log
@added "last reception" to filedetail-dialog and infolist [SyruS]
@
text
@d146 1
a146 1
			return m_client == NULL ? "" : m_client->GetUserName();
d148 1
a148 1
			return m_file == NULL ? "" : m_file->GetFileName();
@


1.2
log
@*** empty log message ***
@
text
@d129 1
@


1.2.2.1
log
@updating this branch...
@
text
@@


1.1
log
@*** empty log message ***
@
text
@d39 2
d64 1
a64 1
	bool m_bExpandedUser[3];
d93 12
@

