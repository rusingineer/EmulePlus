head	1.29;
access;
symbols
	PublicRelease_1_2e:1.27
	Interim_Release_1-2e_RC1:1.27
	PublicRelease_1_2d:1.27
	Interim_Release_1-2d_RC1:1.27
	Interim_Release_1-2d_beta1:1.27
	PublicRelease_1_2c:1.26
	Interim_Release_1-2c_RC1:1.26
	Interim_Release_1-2c_beta1:1.25
	PublicRelease_1_2b:1.25
	Interim_Release_1-2b_RC1:1.25
	PublicRelease_1_2a:1.25
	Interim_Release_1-2a_RC1:1.25
	Interim_Release_1-2a_beta2:1.25
	Interim_Release_1-2a_beta1:1.25
	PublicRelease_1_2:1.24
	Interim_Release_1-2_RC1:1.24
	Interim_Release_1-2_beta1:1.24
	PublicRelease_1_1g:1.24
	Interim_Release_1-1g_RC3:1.24
	Interim_Release_1-1g_RC2:1.24
	Interim_Release_1-1g_RC1:1.24
	Interim_Release_1-1g_beta2:1.24
	Interim_Release_1-1g_beta1:1.24
	PublicRelease_1_1f:1.24
	Interim_Release_1-1f_RC1:1.24
	PublicRelease_1_1e:1.24
	Interim_Release_1-1e_RC2:1.24
	Interim_Release_1-1e_RC1:1.24
	Interim_Release_1-1e_beta1:1.23
	PublicRelease_1_1d:1.23
	Interim_Release_1-1d_RC1:1.23
	PublicRelease_1_1c:1.23
	Interim_Release_1-1c_RC1:1.23
	Interim_Release_1-1c_beta2:1.23
	Interim_Release_1-1c_beta1:1.23
	PublicRelease_1_1b:1.23
	Interim_Release_1-1b_RC1:1.23
	PublicRelease_1_1a:1.23
	Interim_Release_1-1a_RC2:1.23
	Interim_Release_1-1a_RC1:1.23
	Interim_Release_1-1a_beta2:1.23
	Interim_Release_1-1a_beta1:1.23
	PublicRelease_1_1:1.23
	Interim_Release_1-1_beta1:1.23
	PublicRelease_1o:1.22
	Interim_Release_1o_RC1:1.22
	Interim_Release_1o_beta1:1.22
	PublicRelease_1n:1.22
	Interim_Release_1n_RC2:1.22
	Interim_Release_1n_RC1:1.22
	Interim_Release_1n_beta2:1.22
	Interim_Release_1n_beta1:1.21
	PublicRelease_1m:1.21
	Interim_Release_1m_beta1:1.21
	PublicRelease_1l:1.21
	Interim_Release_1l_RC3:1.21
	Interim_Release_1l_RC2:1.21
	Interim_Release_1l_RC1:1.21
	Interim_Release_1l_beta2:1.21
	Interim_Release_1l_beta1:1.21
	PublicRelease_1k:1.17
	Interim_Release_1k_RC4:1.17
	Interim_1k_RC3:1.17
	Interim_1k_RC2:1.17
	Interim_Release_1k_RC1:1.14
	Interim_Release_1k_beta5:1.14
	Intrerim_Release_1k_beta4:1.14
	Interim_Release_1k_beta1:1.14
	PublicRelease_1j:1.14
	Interim_Release_1J_RC3:1.14
	Interim_Release_1j_RC3:1.14
	Interim_Release_1j_RC2:1.14
	Interim_Release_1j_RC1:1.14
	Interim_Release_1j_beta2:1.14
	Interim_Release_1j_beta1:1.14
	PublicRelease_1i:1.14
	Interim_Release_1i_RC6:1.14
	Interim_Release_1i_RC3:1.14
	Interim_Release_1i_RC2:1.14
	Interim_Release_1i_RC1:1.14
	Interim_Release_1i_beta3:1.14
	Interim_Release_1i_beta2:1.14
	Interim_Release_1i_beta1:1.12
	PublicRelease_1h:1.9
	Interim_Release_1h_rc2:1.9
	Interim_Release_1h_RC1:1.9
	Interim_Release_1h_beta2:1.9
	Interim_Release_1h_beta1_now:1.9
	Interim_Release_1h_beta1:1.9
	PublicRelease_1g:1.8
	Interim_Release_1g_RC6_Final:1.8
	Interim_Release_1g_RC6:1.8
	Interim_Release_1g_RC5:1.8
	Interim_Release_1g_RC4:1.8
	Interim_Release_1g_RC3:1.8
	Interim_Release_1g_beta2:1.8
	Interim_Release_1g_beta1:1.6
	Interim_Release_1f_RC4:1.5
	Interim_Release_1f_RC3:1.5
	Interim_Release_1f_RC2:1.4
	Interim_Release_1f_RC:1.4
	Interim_Release_1f_beta2:1.4
	Interim_Release_1f_beta1:1.4
	PublicRelease_1e:1.4
	Interim_Release_1e_RC2:1.4
	Interim_Release_1e_RC:1.4
	Interim_Release_1e_beta3:1.4
	Interim_Release_1e_beta2:1.4
	Interim_Release_1e_beta2_before_kuchin:1.4
	Interim_Release_1e_beta1:1.4
	PublicRelease_1c:1.4
	featurestest:1.4.0.4
	Interim_Release_1c_RC:1.4
	Interim_Release_1c_beta2:1.4
	Interim_Release_1c_beta1:1.4
	threaded_downloadqueue:1.4.0.2
	PublicRelease_1b:1.3
	Interim_Release_1b_beta2:1.3
	Interim_Release_1b_beta1:1.3
	proxydeadlake:1.3.0.4
	PublicRelease_1a:1.3
	Interim_Release_1a_beta2:1.3
	BerkeleyDb:1.3.0.2
	Interim_Release_1a_beta1:1.3
	PublicRelease_1:1.3
	goldfish:1.3
	eMulePlus_1_RC2:1.3
	eMulePlus_26b_1RC1:1.3
	PreRelease_26b_i0e:1.3
	before_26d_merge:1.2
	Interim_Release_26b_i0d:1.2
	Interim_Release_26b_i0c:1.2
	Interim_Release_26b_i0b:1.2
	Interim_Release_26b_i0a:1.2
	systraydlg:1.1.0.8
	plus26based:1.1.0.6
	Interim_Release_25b_i0b:1.1
	Proxy_Dev:1.1
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.29
date	2009.10.22.05.36.25;	author aw3;	state Exp;
branches;
next	1.28;

1.28
date	2009.05.14.03.14.15;	author aw3;	state Exp;
branches;
next	1.27;

1.27
date	2007.10.24.19.08.12;	author fuxie-dk;	state Exp;
branches;
next	1.26;

1.26
date	2007.04.18.00.23.36;	author aw3;	state Exp;
branches;
next	1.25;

1.25
date	2006.04.23.04.06.57;	author aw3;	state Exp;
branches;
next	1.24;

1.24
date	2005.06.13.04.12.55;	author aw3;	state Exp;
branches;
next	1.23;

1.23
date	2004.09.30.19.09.31;	author aw3;	state Exp;
branches;
next	1.22;

1.22
date	2004.07.24.05.56.08;	author aw3;	state Exp;
branches;
next	1.21;

1.21
date	2004.05.06.01.39.08;	author katsyonak;	state Exp;
branches;
next	1.20;

1.20
date	2004.04.25.08.33.01;	author dongato;	state Exp;
branches;
next	1.19;

1.19
date	2004.04.24.12.26.31;	author katsyonak;	state Exp;
branches;
next	1.18;

1.18
date	2004.04.23.22.13.55;	author katsyonak;	state Exp;
branches;
next	1.17;

1.17
date	2004.03.31.22.26.56;	author dropf;	state Exp;
branches;
next	1.16;

1.16
date	2004.03.30.21.02.15;	author aw3;	state Exp;
branches;
next	1.15;

1.15
date	2004.03.30.16.13.35;	author eklmn;	state Exp;
branches;
next	1.14;

1.14
date	2003.10.24.01.21.20;	author morevit;	state Exp;
branches;
next	1.13;

1.13
date	2003.10.05.17.53.56;	author morevit;	state Exp;
branches;
next	1.12;

1.12
date	2003.10.04.00.48.37;	author morevit;	state Exp;
branches;
next	1.11;

1.11
date	2003.10.03.23.18.49;	author morevit;	state Exp;
branches;
next	1.10;

1.10
date	2003.09.20.15.39.31;	author morevit;	state Exp;
branches;
next	1.9;

1.9
date	2003.07.30.22.56.00;	author zegzav;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.09.11.57.42;	author kuchin;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.04.19.57.48;	author partyckip;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.01.08.59.02;	author kuchin;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.20.20.46.32;	author netwolf1;	state Exp;
branches;
next	1.4;

1.4
date	2003.03.14.15.54.58;	author partyckip;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2003.02.17.19.17.21;	author dongato;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.09.18.39.42;	author kuchin;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.18.21.22;	author cax2;	state Exp;
branches
	1.1.4.1
	1.1.6.1;
next	;

1.1.4.1
date	2003.01.28.16.54.26;	author cax2;	state Exp;
branches;
next	;

1.1.6.1
date	2003.02.05.01.58.42;	author obaldin;	state Exp;
branches;
next	;

1.4.4.1
date	2003.03.24.09.39.44;	author recdvst;	state Exp;
branches;
next	;


desc
@@


1.29
log
@Introduce a function to change server priority (similar to original).
@
text
@#pragma once

#include "MuleListCtrl.h"
#include "Loggable.h"

class CServerList;
class CServer;

class CServerListCtrl : public CMuleListCtrl, public CLoggable
{
	DECLARE_DYNAMIC(CServerListCtrl)

public:
					CServerListCtrl();
	virtual		   ~CServerListCtrl();
	bool			Init();
	bool			AddServer(CServer *pServer, bool bAddToList = true, bool bulkLoad = false, bool bChangeServerInfo = false);
	void			RemoveServer(CServer *pServer);
	void			RefreshServer(CServer& server);
	void			RefreshAllServer();
	void			RemoveDeadServer();
	void			SortFirstInit();
	void			Localize();
	void			ShowFilesCount();
	int				FindIndex(const CServer *pServer) const;

	bool			StaticServerFileAppend(CServer *pServer);
	bool			StaticServerFileRemove(CServer *pServer);

	CServer*		GetServerAt(int iIndex) { return reinterpret_cast<CServer*>(GetItemData(iIndex)); }
	CServer*		GetSelectedServer() { return GetServerAt(GetSelectionMark()); }
	CImageList		m_imageList;

protected:
	afx_msg void OnContextMenu(CWnd* pWnd, CPoint point);
	afx_msg void OnNMLdblclk(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void OnDestroy();
	static int CALLBACK SortProc(LPARAM lParam1, LPARAM lParam2, LPARAM lParamSort);
	virtual BOOL OnCommand(WPARAM wParam,LPARAM lParam);
	virtual BOOL PreTranslateMessage(MSG *pMsg);

	DECLARE_MESSAGE_MAP()

private:
	void			AppendServer(CServer *pServer);
	void			RefreshServerDesc(int iIndex, const CServer& server);
	void			SetSelectedServersPriority(unsigned uiPriority);
};
@


1.28
log
@Save sorting directions for all GUI lists; Unified list sort initialization and click processing;
Simplified list arrow configuration interface; Unified list column definitions.
@
text
@d47 1
@


1.27
log
@Removed old code [Aw3].
@
text
@a12 3
private:
	bool			m_bSortAscending[SL_COLUMN_NUMCOLUMNS + 2];

a22 1
	void			SortInit(int sortCode);
a26 1
//	Purity (moved from private to public because of the web server)
a34 1
	afx_msg void OnLvnColumnclickServlist(NMHDR *pNMHDR, LRESULT *pResult);
@


1.26
log
@Code restructuring, update and formatting.
@
text
@d21 1
a21 1
	void			RemoveServer(CServer *pServer,bool bDelToList = true);
@


1.25
log
@Reduced H-file dependency.
@
text
@d2 1
a2 2
#include "ServerList.h"
#include "server.h"
d7 1
d13 1
a13 1
protected:
a15 3
private:
	CServerList	   *m_pServerList;

d19 1
a19 1
	bool			Init(CServerList *pServerList);
d35 2
a36 2
	CServer		   *GetServerAt(int iIndex) { return reinterpret_cast<CServer*>(GetItemData(iIndex)); }
	CServer		   *GetSelectedServer() { return GetServerAt(GetSelectionMark()); }
@


1.24
log
@ED2K link shortcuts for Server and Search lists.
@
text
@a3 1
#include "TitleMenu.h"
a6 1
// CServerListCtrl
@


1.23
log
@Preferences storage reorganization and minor optimization.
@
text
@d25 1
a25 1
	bool			AddServer(CServer *pServer,bool bAddToList = true, bool bulkLoad = false, bool bChangeServerInfo = false);
d45 7
a51 6
	afx_msg	void	OnLvnColumnclickServlist(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void	OnContextMenu(CWnd* pWnd, CPoint point);
	afx_msg void	OnNMLdblclk (NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void	OnDestroy();
	static	int		CALLBACK SortProc(LPARAM lParam1, LPARAM lParam2, LPARAM lParamSort);
	virtual BOOL	OnCommand(WPARAM wParam,LPARAM lParam );
@


1.22
log
@Unused methods are removed.
@
text
@a7 18
enum ServerListColumns
{
	SL_COLUMN_SERVERNAME = 0,
	SL_COLUMN_SERVERIP,
	SL_COLUMN_DESCRIPTION,
	SL_COLUMN_PING,
	SL_COLUMN_NUMUSERS,
	SL_COLUMN_NUMFILES,
	SL_COLUMN_PREFERENCES,
	SL_COLUMN_FAILEDCOUNT,
	SL_COLUMN_STATIC,
	SL_COLUMN_SOFTFILELIMIT,
	SL_COLUMN_SOFTWAREVER,
	SL_COLUMN_COUNTRY,

	SL_COLUMN_NUMCOLUMNS
};

@


1.21
log
@added tooltips to the Server list
@
text
@a47 2
	void			Hide() {ShowWindow(SW_HIDE);}
	void			Show() {ShowWindow(SW_SHOW);}
@


1.20
log
@Please, DO NOT alter column order. This messes with users column customization and don't bring a standard as people likings are different.
@
text
@a37 1
	CImageList		m_imageList;
d62 1
@


1.19
log
@added Country column in server list
@
text
@a11 1
	SL_COLUMN_COUNTRY,
d21 1
@


1.18
log
@added IP to Country from MorphXT (Please extract ip-to-country.rar in your config dir in order for this to work)
@
text
@d12 1
@


1.17
log
@added auxiliary port support from KuSh (commited with eklmn's authorization)
@
text
@d46 1
@


1.16
log
@Fixed initial sorting of server list by Static criteria;
Faster initial sorting of server list;
Removed list hiding because it isn't required and causes graphical blink.
@
text
@d43 1
a43 1
	bool			AddServer(CServer *pServer,bool bAddToList = true, bool bulkLoad = false);
@


1.15
log
@corrected Server addition in ServerList
@
text
@d4 1
a4 1
#include "titlemenu.h"
d21 2
d28 1
a28 1
class CServerListCtrl : public CMuleListCtrl, public CLoggable 
d33 1
a33 1
	bool			m_bSortAscending[13];
d49 1
d75 1
a75 1
};@


1.14
log
@Formatting, comments, and name changes.
@
text
@a42 1
	bool			AddServerMetToList(CString strFile);
@


1.13
log
@Formatting, comments, and name changes.
@
text
@d8 15
d24 2
a25 1
class CServerList; 
d29 8
d38 21
a58 18
	CServerListCtrl();
//	void	ShowServers();
	virtual ~CServerListCtrl();
	bool	Init(CServerList* in_list);
	bool	AddServer(CServer* toadd,bool bAddToList = true, bool bulkLoad = false);
	void	RemoveServer(CServer* todel,bool bDelToList = true);
	bool	AddServermetToList(CString strFile);
	void	RefreshServer(CServer& server);
	void	RemoveDeadServer();
	void	Hide() {ShowWindow(SW_HIDE);}
	void	Show() {ShowWindow(SW_SHOW);}
	void	SortInit(int sortCode);	//sortdlg Cax2
	void	Localize();
	void	ShowFilesCount();

	//purity (moved from private to public because of the web server)
	bool StaticServerFileAppend(CServer *server);
	bool StaticServerFileRemove(CServer *server);
a59 1
//	afx_msg void OnNMRclickServlist(NMHDR *pNMHDR, LRESULT *pResult);
d63 2
d66 2
a67 2
	bool	m_bSortAscending[13]; //Cax2 double arrow
	virtual BOOL OnCommand(WPARAM wParam,LPARAM lParam );
d69 1
d71 2
a72 9
	CServerList*	server_list;
	CImageList		imagelist;
	afx_msg void OnNMLdblclk (NMHDR *pNMHDR, LRESULT *pResult); //<-- mod bb 27.09.02

	int FindIndex(const CServer* server) const;
	void AppendServer(CServer* server);
	void RefreshServerDesc(int itemnr, const CServer& server);
public:
	afx_msg void OnDestroy();	// eklmn: bugfix(01): resource cleanup due to ImageLists recreation
@


1.12
log
@Formatting, comments, and name changes.
@
text
@d29 1
a29 1
	//purity (moved from private to public because of the m_pWebServer)
@


1.11
log
@Formatting, comments, and name changes.
@
text
@d24 1
a24 1
	void	Visable() {ShowWindow(SW_SHOW);}
@


1.10
log
@More name changes, reinstated CMuleCtrlItem class, moved srcsarevisible from CPartFile to CMuleCtrlItem (where it belongs), added "Show Full Status Icons" and "Show Gray Paused" features with corresponding preferences, modified "SmartOpen" code to make it sticky and to make it work with sources with changing states.
@
text
@d38 1
a38 1
	bool	asc_sort[13]; //Cax2 double arrow
@


1.9
log
@added columns Soft/Hard Files Limit and Version in server window (merge from official)
@
text
@d29 1
a29 1
	//purity (moved from private to public because of the webserver)
@


1.8
log
@Purity's webserver changes. Mostly.
@
text
@d38 1
a38 1
	bool	asc_sort[10]; //Cax2 double arrow
@


1.7
log
@small optimisations in server list handling
@
text
@d29 4
a44 4

	// Barry - New methods
	bool StaticServerFileAppend(CServer *server);
	bool StaticServerFileRemove(CServer *server);
@


1.6
log
@Eklmn and BavarianSnail changes. see changelog+
@
text
@d18 1
a18 1
	bool	AddServer(CServer* toadd,bool bAddToList = true);
d21 1
a21 1
	void	RefreshServer(CServer* server);
d45 4
@


1.5
log
@minor fixes and improvements
@
text
@d45 2
@


1.4
log
@converted to new logging method
@
text
@d29 1
a29 1
	afx_msg void OnNMRclickServlist(NMHDR *pNMHDR, LRESULT *pResult);
d32 1
@


1.4.4.1
log
@27c
@
text
@d28 2
a31 1
	afx_msg void	OnContextMenu(CWnd* pWnd, CPoint point);
@


1.3
log
@Little fixes and Static Servers additions from 26d
@
text
@d6 1
d10 1
a10 1
class CServerListCtrl : public CMuleListCtrl 
@


1.2
log
@Merge from plus26based branch (without new sockets code yet)
@
text
@d39 4
@


1.1
log
@*** empty log message ***
@
text
@d26 1
@


1.1.6.1
log
@initial upgrade to .26
@
text
@a25 1
	void	ShowFilesCount();
@


1.1.4.1
log
@updating this branch...
@
text
@@

