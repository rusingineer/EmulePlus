head	1.3;
access;
symbols
	PublicRelease_1_2e:1.3
	Interim_Release_1-2e_RC1:1.3
	PublicRelease_1_2d:1.3
	Interim_Release_1-2d_RC1:1.2
	Interim_Release_1-2d_beta1:1.2
	PublicRelease_1_2c:1.2
	Interim_Release_1-2c_RC1:1.2
	Interim_Release_1-2c_beta1:1.2
	PublicRelease_1_2b:1.2
	Interim_Release_1-2b_RC1:1.2
	PublicRelease_1_2a:1.2
	Interim_Release_1-2a_RC1:1.2
	Interim_Release_1-2a_beta2:1.2
	Interim_Release_1-2a_beta1:1.2
	PublicRelease_1_2:1.2
	Interim_Release_1-2_RC1:1.2
	Interim_Release_1-2_beta1:1.2
	PublicRelease_1_1g:1.2
	Interim_Release_1-1g_RC3:1.2
	Interim_Release_1-1g_RC2:1.2
	Interim_Release_1-1g_RC1:1.2
	Interim_Release_1-1g_beta2:1.2
	Interim_Release_1-1g_beta1:1.2
	PublicRelease_1_1f:1.2
	Interim_Release_1-1f_RC1:1.2
	PublicRelease_1_1e:1.2
	Interim_Release_1-1e_RC2:1.2
	Interim_Release_1-1e_RC1:1.2
	Interim_Release_1-1e_beta1:1.2
	PublicRelease_1_1d:1.2
	Interim_Release_1-1d_RC1:1.2
	PublicRelease_1_1c:1.2
	Interim_Release_1-1c_RC1:1.2
	Interim_Release_1-1c_beta2:1.2
	Interim_Release_1-1c_beta1:1.2
	PublicRelease_1_1b:1.2
	Interim_Release_1-1b_RC1:1.2
	PublicRelease_1_1a:1.2
	Interim_Release_1-1a_RC2:1.2
	Interim_Release_1-1a_RC1:1.2
	Interim_Release_1-1a_beta2:1.2
	Interim_Release_1-1a_beta1:1.2
	PublicRelease_1_1:1.2
	Interim_Release_1-1_beta1:1.2
	PublicRelease_1o:1.2
	Interim_Release_1o_RC1:1.2
	Interim_Release_1o_beta1:1.2
	PublicRelease_1n:1.2
	Interim_Release_1n_RC2:1.2
	Interim_Release_1n_RC1:1.2
	Interim_Release_1n_beta2:1.2
	Interim_Release_1n_beta1:1.2
	PublicRelease_1m:1.2
	Interim_Release_1m_beta1:1.2
	PublicRelease_1l:1.2
	Interim_Release_1l_RC3:1.2
	Interim_Release_1l_RC2:1.2
	Interim_Release_1l_RC1:1.2
	Interim_Release_1l_beta2:1.2
	Interim_Release_1l_beta1:1.2
	PublicRelease_1k:1.2
	Interim_Release_1k_RC4:1.2
	Interim_1k_RC3:1.2
	Interim_1k_RC2:1.2
	Interim_Release_1k_RC1:1.2
	Interim_Release_1k_beta5:1.2
	Intrerim_Release_1k_beta4:1.2
	Interim_Release_1k_beta1:1.2
	PublicRelease_1j:1.2
	Interim_Release_1J_RC3:1.2
	Interim_Release_1j_RC3:1.2
	Interim_Release_1j_RC2:1.2
	Interim_Release_1j_RC1:1.2
	Interim_Release_1j_beta2:1.2
	Interim_Release_1j_beta1:1.2
	PublicRelease_1i:1.2
	Interim_Release_1i_RC6:1.2
	Interim_Release_1i_RC3:1.2
	Interim_Release_1i_RC2:1.2
	Interim_Release_1i_RC1:1.2
	Interim_Release_1i_beta3:1.2
	Interim_Release_1i_beta2:1.2
	Interim_Release_1i_beta1:1.2
	PublicRelease_1h:1.1
	Interim_Release_1h_rc2:1.1
	Interim_Release_1h_RC1:1.1
	Interim_Release_1h_beta2:1.1
	Interim_Release_1h_beta1_now:1.1
	Interim_Release_1h_beta1:1.1
	PublicRelease_1g:1.1
	Interim_Release_1g_RC6_Final:1.1
	Interim_Release_1g_RC6:1.1
	Interim_Release_1g_RC5:1.1
	Interim_Release_1g_RC4:1.1
	Interim_Release_1g_RC3:1.1
	Interim_Release_1g_beta2:1.1
	Interim_Release_1g_beta1:1.1
	Interim_Release_1f_RC4:1.1
	Interim_Release_1f_RC3:1.1
	Interim_Release_1f_RC2:1.1
	Interim_Release_1f_RC:1.1
	Interim_Release_1f_beta2:1.1
	Interim_Release_1f_beta1:1.1
	PublicRelease_1e:1.1
	Interim_Release_1e_RC2:1.1
	Interim_Release_1e_RC:1.1
	Interim_Release_1e_beta3:1.1
	Interim_Release_1e_beta2:1.1
	Interim_Release_1e_beta2_before_kuchin:1.1
	Interim_Release_1e_beta1:1.1
	PublicRelease_1c:1.1
	featurestest:1.1.0.16
	Interim_Release_1c_RC:1.1
	Interim_Release_1c_beta2:1.1
	Interim_Release_1c_beta1:1.1
	threaded_downloadqueue:1.1.0.14
	PublicRelease_1b:1.1
	Interim_Release_1b_beta2:1.1
	Interim_Release_1b_beta1:1.1
	proxydeadlake:1.1.0.12
	PublicRelease_1a:1.1
	Interim_Release_1a_beta2:1.1
	BerkeleyDb:1.1.0.10
	Interim_Release_1a_beta1:1.1
	PublicRelease_1:1.1
	goldfish:1.1
	eMulePlus_1_RC2:1.1
	eMulePlus_26b_1RC1:1.1
	PreRelease_26b_i0e:1.1
	before_26d_merge:1.1
	Interim_Release_26b_i0d:1.1
	Interim_Release_26b_i0c:1.1
	Interim_Release_26b_i0b:1.1
	Interim_Release_26b_i0a:1.1
	systraydlg:1.1.0.8
	plus26based:1.1.0.6
	Interim_Release_25b_i0b:1.1
	Proxy_Dev:1.1
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.3
date	2008.04.24.05.05.27;	author aw3;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.27.22.08.47;	author eklmn;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.18.07.05;	author cax2;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.01.28.16.54.00;	author cax2;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Fixed stuck credits control and about dialog when focus is lost while holding mouse -- credit control is control with scrolling credits inside about dialog (ways to reproduce: Alt-Tab).
@
text
@#pragma once

class CCreditsCtrl : public CWnd
{
public:
	CCreditsCtrl();
	virtual ~CCreditsCtrl();
	BOOL Create(DWORD dwExStyle, DWORD dwStyle, const RECT& rect, CWnd* pParentWnd, UINT nID = 0, UINT nDefaultCursorID = 0, UINT nLinkCursorID = 0);
	BOOL Create(DWORD dwExStyle, DWORD dwStyle, UINT nPlaceholderID, CWnd* pParentWnd, UINT nID = 0, UINT nDefaultCursorID = 0, UINT nLinkCursorID = 0);

public:
	static LPCTSTR m_lpszClassName;

	// local structures used during parsing
	typedef struct
	{
		TCHAR szName[MAX_PATH];
		int nSize;
		int bBold;
		int bItalic;
		int bUnderline;
		int bStrikeout;
		COLORREF crColor;
		COLORREF crBkColor;
	} font_attribs;
	typedef struct
	{
		int nAlign; // 0: left, 1: center, 2: right
		int nVAlign; // 0: top, 1: middle, 2: bottom
		int nMaxWidth;
		int nMaxHeight;
	} general_attribs;
	typedef struct
	{
		RECT rcRect;
		int nVAlign;
		CString sLink;
	} line_rect;

public:
	////// Stuff that can be customized to fit your neeeds /////////////////

	BOOL m_bCanScroll;		// TRUE (default) if the user is allowed to manually scroll through the control using drag & drop
	int m_nCurBitmapOffset;	// normally you shouldn't touch this one
	int m_nTimerSpeed;		// default: 40
	HCURSOR m_hDefaultCursor;	// normally you would want to set this one in Create()
	HCURSOR m_hLinkCursor;		// normally you would want to set this one in Create()
	CString m_sData;			// use SetDataString() or FormatDataString()
	void(*m_pBackgroundPaint)(CDC*,RECT,BOOL,DWORD);	// background drawing function
	DWORD m_dwBackgroundPaintLParam;	// lParam to m_pBackgroundPaint.. by default this is the background color
	COLORREF m_crInternalTransparentColor;	// normally you would use a color close or equal to the background color
	CArray<CRect,CRect&> m_HotRects;
	CArray<CString,CString&> m_HotRectActions;
	
	////// Functions you always should use /////////////////////////////////

	// sets data string...
	CString SetDataString(LPCTSTR lpszNewString);
	CString SetDataString(UINT nStringResourceID);
	CString FormatDataString(LPCTSTR lpszFormat, ...);
	CString FormatDataString(UINT nFormatID, ...);
	// returns data string
	CString GetDataString();

	////// Functions you might want to use /////////////////////////////////

	// returns the index if the m_HotRects array the point matches or -1 for no hit
	int HitTest(CPoint pt);
	// sets the background color used by the default background drawer function
	void SetDefaultBkColor(COLORREF crColor);
	// parses the m_sData string, creates m_bmpNormal & m_bmpHot and fill the m_HotRects & m_HotRectActions arrays
	void Initialize();
	// set link cursor to a hand icon
	void SetDefaultLinkCursor();

	////// Functions you probably won't need ///////////////////////////////

	// helpers for parsing
	void Parse_AppendText(CDC *pDC, CDC *pHoverDC, int *pnCurHPos, int *pnCurVPos, int *pnCurHeight, CArray<line_rect,line_rect&>* parcLineRects, general_attribs *pga, font_attribs *pfa, CString sText, CString sCurLink, font_attribs link);
	void Parse_AppendBitmap(CDC *pDC, CDC *pHoverDC, int *pnCurHPos, int *pnCurVPos, int *pnCurHeight, CArray<line_rect,line_rect&>* parcLineRects, general_attribs *pga, CBitmap *pBitmap, COLORREF crBorder, int nBorder, CString sCurLink, font_attribs link);
	void Parse_AppendElement(CDC *pDC, CDC *pHoverDC, int *pnCurHPos, int *pnCurVPos, int *pnCurHeight, CArray<line_rect,line_rect&>* parcLineRects, general_attribs *pga, int nElementWidth, int nElementHeight, CDC *pElementDC, CDC *pHoverElementDC, CString sCurLink);
	void Parse_VAlignLine(CDC *pDestDC, CDC *pHoverDestDC, CDC *pLineDC, CDC *pHoverLineDC, int nCurHPos, int nCurVPos, int nCurHeight, CArray<line_rect,line_rect&>* parcLineRects, general_attribs *pga);
	BOOL StringToColor(CString string, COLORREF &cr);
	// default background drawer
	static void DrawBackground(CDC *pDC, RECT rect, BOOL bAnimate, DWORD lParam);
	// drawing routines
	void TransparentBlt(CDC *pSrcDC, CDC* pDestDC,COLORREF crTrans,const CRect& rcDest,const CRect& rcSrc);
	void DrawTransparentBitmap(CBitmap *pBitmap, CDC* pDC,COLORREF crTrans,const CRect& rcDest,const CRect& rcSrc);

private:
	int m_oldcx;
	int m_oldcy;

	////// Stuff you really shouldn't touch ////////////////////////////////

protected:
	// Internally used variables
	CRect m_rcClient;
	CRect m_rcHotRect;
	BOOL m_bIsScrolling;
	int m_nScrollStart;
	int m_nBitmapHeight;
	CBitmap m_bmpHot;
	CBitmap m_bmpNormal;

protected:
	afx_msg void OnPaint();
	afx_msg void OnTimer(UINT nIDEvent);
	afx_msg void OnSize(UINT nType, int cx, int cy);
	afx_msg void OnMouseMove(UINT nFlags, CPoint point);
	afx_msg void OnLButtonDown(UINT nFlags, CPoint point);
	afx_msg void OnLButtonUp(UINT nFlags, CPoint point);
	afx_msg void OnCancelMode();

	DECLARE_MESSAGE_MAP()
};
@


1.2
log
@1) bugfixing in resource cleanup
2) optimizazion in OnSize
@
text
@a0 4
#if !defined(AFX_CREDITSCTRL_H__0D506182_3886_4D4C_A609_DA8914C17718__INCLUDED_)
#define AFX_CREDITSCTRL_H__0D506182_3886_4D4C_A609_DA8914C17718__INCLUDED_

#if _MSC_VER > 1000
a1 7
#endif // _MSC_VER > 1000
// CreditsCtrl.h : header file
//
#include <afxtempl.h>

/////////////////////////////////////////////////////////////////////////////
// CCreditsCtrl window
a4 1
// Construction
a10 1
// Attributes
a39 9
// Operations
public:

// Overrides
	// ClassWizard generated virtual function overrides
	//{{AFX_VIRTUAL(CCreditsCtrl)
	//}}AFX_VIRTUAL

// Implementation
a40 1

a105 1
	// Generated message map functions
a106 1
	//{{AFX_MSG(CCreditsCtrl)
d113 2
a114 1
	//}}AFX_MSG
a116 7

/////////////////////////////////////////////////////////////////////////////

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_CREDITSCTRL_H__0D506182_3886_4D4C_A609_DA8914C17718__INCLUDED_)
@


1.1
log
@*** empty log message ***
@
text
@d113 4
@


1.1.4.1
log
@updating this branch...
@
text
@@

