head	1.19;
access;
symbols
	PublicRelease_1_2e:1.18
	Interim_Release_1-2e_RC1:1.18
	PublicRelease_1_2d:1.17
	Interim_Release_1-2d_RC1:1.17
	Interim_Release_1-2d_beta1:1.17
	PublicRelease_1_2c:1.16
	Interim_Release_1-2c_RC1:1.16
	Interim_Release_1-2c_beta1:1.16
	PublicRelease_1_2b:1.16
	Interim_Release_1-2b_RC1:1.16
	PublicRelease_1_2a:1.16
	Interim_Release_1-2a_RC1:1.16
	Interim_Release_1-2a_beta2:1.16
	Interim_Release_1-2a_beta1:1.16
	PublicRelease_1_2:1.16
	Interim_Release_1-2_RC1:1.16
	Interim_Release_1-2_beta1:1.15
	PublicRelease_1_1g:1.15
	Interim_Release_1-1g_RC3:1.15
	Interim_Release_1-1g_RC2:1.15
	Interim_Release_1-1g_RC1:1.15
	Interim_Release_1-1g_beta2:1.15
	Interim_Release_1-1g_beta1:1.15
	PublicRelease_1_1f:1.15
	Interim_Release_1-1f_RC1:1.15
	PublicRelease_1_1e:1.15
	Interim_Release_1-1e_RC2:1.15
	Interim_Release_1-1e_RC1:1.15
	Interim_Release_1-1e_beta1:1.14
	PublicRelease_1_1d:1.14
	Interim_Release_1-1d_RC1:1.14
	PublicRelease_1_1c:1.14
	Interim_Release_1-1c_RC1:1.14
	Interim_Release_1-1c_beta2:1.14
	Interim_Release_1-1c_beta1:1.14
	PublicRelease_1_1b:1.14
	Interim_Release_1-1b_RC1:1.14
	PublicRelease_1_1a:1.13
	Interim_Release_1-1a_RC2:1.13
	Interim_Release_1-1a_RC1:1.13
	Interim_Release_1-1a_beta2:1.13
	Interim_Release_1-1a_beta1:1.13
	PublicRelease_1_1:1.12
	Interim_Release_1-1_beta1:1.12
	PublicRelease_1o:1.11
	Interim_Release_1o_RC1:1.11
	Interim_Release_1o_beta1:1.11
	PublicRelease_1n:1.11
	Interim_Release_1n_RC2:1.11
	Interim_Release_1n_RC1:1.11
	Interim_Release_1n_beta2:1.11
	Interim_Release_1n_beta1:1.11
	PublicRelease_1m:1.11
	Interim_Release_1m_beta1:1.11
	PublicRelease_1l:1.11
	Interim_Release_1l_RC3:1.11
	Interim_Release_1l_RC2:1.10
	Interim_Release_1l_RC1:1.10
	Interim_Release_1l_beta2:1.10
	Interim_Release_1l_beta1:1.10
	PublicRelease_1k:1.10
	Interim_Release_1k_RC4:1.10
	Interim_1k_RC3:1.10
	Interim_1k_RC2:1.10
	Interim_Release_1k_RC1:1.10
	Interim_Release_1k_beta5:1.10
	Intrerim_Release_1k_beta4:1.10
	Interim_Release_1k_beta1:1.10
	PublicRelease_1j:1.10
	Interim_Release_1J_RC3:1.10
	Interim_Release_1j_RC3:1.10
	Interim_Release_1j_RC2:1.10
	Interim_Release_1j_RC1:1.10
	Interim_Release_1j_beta2:1.10
	Interim_Release_1j_beta1:1.10
	PublicRelease_1i:1.7
	Interim_Release_1i_RC6:1.7
	Interim_Release_1i_RC3:1.7
	Interim_Release_1i_RC2:1.7
	Interim_Release_1i_RC1:1.7
	Interim_Release_1i_beta3:1.7
	Interim_Release_1i_beta2:1.6
	Interim_Release_1i_beta1:1.6
	PublicRelease_1h:1.4
	Interim_Release_1h_rc2:1.4
	Interim_Release_1h_RC1:1.3
	Interim_Release_1h_beta2:1.3
	Interim_Release_1h_beta1_now:1.3
	Interim_Release_1h_beta1:1.3
	PublicRelease_1g:1.2
	Interim_Release_1g_RC6_Final:1.2
	Interim_Release_1g_RC6:1.2
	Interim_Release_1g_RC5:1.2
	Interim_Release_1g_RC4:1.2
	Interim_Release_1g_RC3:1.2
	Interim_Release_1g_beta2:1.2
	Interim_Release_1g_beta1:1.2
	Interim_Release_1f_RC4:1.2
	Interim_Release_1f_RC3:1.2
	Interim_Release_1f_RC2:1.2
	Interim_Release_1f_RC:1.2
	Interim_Release_1f_beta2:1.2
	Interim_Release_1f_beta1:1.2
	PublicRelease_1e:1.2
	Interim_Release_1e_RC2:1.2
	Interim_Release_1e_RC:1.2
	Interim_Release_1e_beta3:1.2
	Interim_Release_1e_beta2:1.2
	Interim_Release_1e_beta2_before_kuchin:1.2
	Interim_Release_1e_beta1:1.2
	PublicRelease_1c:1.2
	featurestest:1.2.0.4
	Interim_Release_1c_RC:1.2
	Interim_Release_1c_beta2:1.2
	Interim_Release_1c_beta1:1.2
	threaded_downloadqueue:1.2.0.2
	PublicRelease_1b:1.2
	Interim_Release_1b_beta2:1.2
	Interim_Release_1b_beta1:1.1
	proxydeadlake:1.1.0.12
	PublicRelease_1a:1.1
	Interim_Release_1a_beta2:1.1
	BerkeleyDb:1.1.0.10
	Interim_Release_1a_beta1:1.1
	PublicRelease_1:1.1
	goldfish:1.1
	eMulePlus_1_RC2:1.1
	eMulePlus_26b_1RC1:1.1
	PreRelease_26b_i0e:1.1
	before_26d_merge:1.1
	Interim_Release_26b_i0d:1.1
	Interim_Release_26b_i0c:1.1
	Interim_Release_26b_i0b:1.1
	Interim_Release_26b_i0a:1.1
	systraydlg:1.1.0.8
	plus26based:1.1.0.6
	Interim_Release_25b_i0b:1.1
	Proxy_Dev:1.1
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.19
date	2009.05.14.03.14.15;	author aw3;	state Exp;
branches;
next	1.18;

1.18
date	2008.11.07.05.29.46;	author aw3;	state Exp;
branches;
next	1.17;

1.17
date	2007.10.11.18.07.07;	author fuxie-dk;	state Exp;
branches;
next	1.16;

1.16
date	2006.02.13.05.40.29;	author aw3;	state Exp;
branches;
next	1.15;

1.15
date	2005.06.13.04.12.54;	author aw3;	state Exp;
branches;
next	1.14;

1.14
date	2004.12.16.00.26.16;	author aw3;	state Exp;
branches;
next	1.13;

1.13
date	2004.11.02.17.24.24;	author aw3;	state Exp;
branches;
next	1.12;

1.12
date	2004.09.30.19.09.31;	author aw3;	state Exp;
branches;
next	1.11;

1.11
date	2004.06.06.05.02.11;	author aw3;	state Exp;
branches;
next	1.10;

1.10
date	2003.12.22.15.08.17;	author dongato;	state Exp;
branches;
next	1.9;

1.9
date	2003.12.22.10.48.11;	author dongato;	state Exp;
branches;
next	1.8;

1.8
date	2003.12.16.07.30.02;	author dongato;	state Exp;
branches;
next	1.7;

1.7
date	2003.10.26.15.57.56;	author morevit;	state Exp;
branches;
next	1.6;

1.6
date	2003.10.03.23.18.49;	author morevit;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.20.15.39.31;	author morevit;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.14.13.48.42;	author dongato;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.07.20.26.59;	author syrus77;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.08.19.27.12;	author dongato;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.18.21.22;	author cax2;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.01.28.16.54.25;	author cax2;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Save sorting directions for all GUI lists; Unified list sort initialization and click processing;
Simplified list arrow configuration interface; Unified list column definitions.
@
text
@//this file is part of eMule
//Copyright (C)2002 Merkur ( merkur-@@users.sourceforge.net / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the GNU General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#pragma once

#include "MuleListCtrl.h"

class CSearchList;
class CSearchFile;

class CSearchListCtrl : public CMuleListCtrl
{
	DECLARE_DYNAMIC(CSearchListCtrl)
public:
					CSearchListCtrl();
	virtual		   ~CSearchListCtrl();
	void			Init(CSearchList *pSearchList);
	void			UpdateChangingColumns(CSearchFile *pSearchFile);
	void			AddResult(CSearchFile *pSearchFile);
	void			RemoveResult(CSearchFile *pSearchFile);
	void			Localize();
	void			ShowResults(uint32 dwResultsID);
	void			NoTabs()							{ m_dwResultsID = 0; }
	virtual void DrawItem(LPDRAWITEMSTRUCT lpDrawItemStruct);

protected:
	static	int CALLBACK SortProc(LPARAM lParam1, LPARAM lParam2, LPARAM lParamSort);
	afx_msg void OnContextMenu(CWnd *pWnd, CPoint point);
	virtual BOOL OnCommand(WPARAM wParam, LPARAM lParam);
	virtual BOOL PreTranslateMessage(MSG *pMsg);
	virtual void	OnNMDividerDoubleClick(NMHEADER *pNMHDR);

	DECLARE_MESSAGE_MAP()
private:
	void			UpdateLine(int iIndex, CSearchFile *pSearchFile);

private:
	uint32			m_dwResultsID;
	CSearchList		*m_pSearchList;
	CImageList		m_imageList;
};
@


1.18
log
@Fixed auto-resize for the first column of the shared files and search lists.
@
text
@a33 1
	void			SortInit(int iSortCode);
a40 1
	afx_msg void OnColumnClick(NMHDR* pNMHDR, LRESULT* pResult);
a53 1
	bool			m_bSortAscending[SL_NUMCOLUMNS + 1];
@


1.17
log
@Reduced #include dependency [Aw3]
@
text
@a18 1
#include "types.h"
d46 1
@


1.16
log
@Show file rating received from the server in the search list;
Rewritten drawing of the search list; Regrouped class sections.
@
text
@d17 1
a18 3
#pragma once
#include "opcodes.h"
#include "emule.h"
a19 3
#include "Preferences.h"
#include "KnownFile.h"
#include "SearchList.h"
@


1.15
log
@ED2K link shortcuts for Server and Search lists.
@
text
@a26 1
// CSearchListCtrl
d29 1
a32 11

public:
	uint32			m_dwResultsID;

protected:
	bool			m_bSetImageList;

private:
	CSearchList	   *m_pSearchList;
	bool			m_bSortAscending[SL_NUMCOLUMNS + 1];

d44 2
a45 1
	
a47 1
	afx_msg void OnCustomdraw(NMHDR* pNMHDR, LRESULT* pResult);
d49 1
a49 2
	afx_msg void OnContextMenu(CWnd* /*pWnd*/, CPoint /*point*/);
	afx_msg void OnGetDispInfo(NMHDR* pNMHDR, LRESULT* pResult);
d56 6
@


1.14
log
@Search list sorting by Complete Sources; Removed some non-required code.
@
text
@d58 6
a63 5
	afx_msg void	OnCustomdraw (NMHDR* pNMHDR, LRESULT* pResult);
	afx_msg	void	OnColumnClick(NMHDR* pNMHDR, LRESULT* pResult);
	afx_msg void	OnContextMenu(CWnd* /*pWnd*/, CPoint /*point*/);
	afx_msg void	OnGetDispInfo(NMHDR* pNMHDR, LRESULT* pResult);
	virtual BOOL	OnCommand(WPARAM wParam, LPARAM lParam);
@


1.13
log
@Last Seen Complete was added to search results.
@
text
@a17 1

d22 1
a22 1
#include "preferences.h"
d42 1
a42 2
	DWORD			m_dwLastSortCode;
	bool			m_bSortAscending[SL_NUMCOLUMNS];
a54 1
	void			SetLastSortCode(DWORD SortCode)		{ m_dwLastSortCode = SortCode; }
@


1.12
log
@Preferences storage reorganization and minor optimization.
@
text
@d50 1
a50 1
	void			UpdateSources(CSearchFile *pSearchFile);
d68 2
@


1.11
log
@Fixed list sorting direction while switching <thanks xrmb>;
Removed unrequired class member.
@
text
@a27 11
enum SearchListColumns
{
	SL_COLUMN_FILENAME = 0,
	SL_COLUMN_SIZE,
	SL_COLUMN_SOURCES,
	SL_COLUMN_TYPE,
	SL_COLUMN_FILEHASH,
	SL_COLUMN_FAKECHECK,

	SL_NUMCOLUMNS
};
@


1.10
log
@Minor changes
@
text
@d37 1
a37 1
	SL_NUMCOLUMNS,
d55 1
a55 2
	int				m_iSortColumn;
	bool			m_bSortAscending[SL_NUMCOLUMNS];	 
@


1.9
log
@Changed way of setting a variable.
@
text
@d54 1
a56 1
	DWORD			m_dwLastSortCode;
d68 2
a69 2
	void			NoTabs()						{ m_dwResultsID = 0; }
	void			SetLastSortCode(DWORD SortCode)	{m_dwLastSortCode = SortCode;}
d73 2
a74 2
	afx_msg void	OnCustomdraw ( NMHDR* pNMHDR, LRESULT* pResult);
	afx_msg	void	OnColumnClick( NMHDR* pNMHDR, LRESULT* pResult);
@


1.8
log
@Minor fixes
@
text
@d56 1
d68 2
a69 2
	void			NoTabs()	{ m_dwResultsID = 0; }
	DWORD			m_dwLastSortCode;
@


1.7
log
@Formatting, comments, and name changes.
Fixed a couple of sorting related bugs in SearchListCtrl.
@
text
@a53 1
	DWORD			m_dwLastSortCode;
d68 1
a79 2


@


1.6
log
@Formatting, comments, and name changes.
@
text
@d28 11
d47 22
a68 11
	CSearchListCtrl();
	virtual ~CSearchListCtrl();
	void	Init(CSearchList* in_searchlist);
	void	UpdateSources(CSearchFile* toupdate);
	void	AddResult(CSearchFile* toshow);
	void	RemoveResult( CSearchFile* toremove);
	void	SortInit(int sortCode);	//sortdlg Cax2
	void	Localize();
	void	ShowResults(uint32 nResultsID);
	void	NoTabs()	{ m_nResultsID = 0; }
	uint32	m_nResultsID;
a70 1
	bool	m_bSetImageList; // katsyonak 05/08/2003
d72 6
a77 5
	afx_msg void OnCustomdraw ( NMHDR* pNMHDR, LRESULT* pResult);
	afx_msg	void OnColumnClick( NMHDR* pNMHDR, LRESULT* pResult);
	afx_msg void OnContextMenu(CWnd* /*pWnd*/, CPoint /*point*/);
	afx_msg void OnGetDispInfo(NMHDR* pNMHDR, LRESULT* pResult);
	virtual BOOL OnCommand(WPARAM wParam, LPARAM lParam);
a78 3
private:
	CSearchList* 	m_pSearchList;
	bool		m_bSortAscending[7];	 
@


1.5
log
@More name changes, reinstated CMuleCtrlItem class, moved srcsarevisible from CPartFile to CMuleCtrlItem (where it belongs), added "Show Full Status Icons" and "Show Gray Paused" features with corresponding preferences, modified "SmartOpen" code to make it sticky and to make it work with sources with changing states.
@
text
@d59 1
a59 1
	bool		asc_sort[7];	 
@


1.4
log
@Fix for lists navigation [from official]
@
text
@d25 1
a25 1
#include "searchlist.h"
d58 1
a58 1
	CSearchList* 	searchlist;
@


1.3
log
@FEATURE: show filetype icons on searchlist [katsyonak]
@
text
@d54 1
@


1.2
log
@Last changes to context menues and Fakecheck code removal.
@
text
@d49 2
a50 1
	static int CALLBACK SortProc(LPARAM lParam1, LPARAM lParam2, LPARAM lParamSort);
@


1.1
log
@*** empty log message ***
@
text
@a55 2
	CTitleMenu	m_SearchFileMenu;
	CTitleMenu	m_FakeCheckMenu;
@


1.1.4.1
log
@updating this branch...
@
text
@@

