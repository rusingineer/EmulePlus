head	1.12;
access;
symbols
	PublicRelease_1_2e:1.12
	Interim_Release_1-2e_RC1:1.12
	PublicRelease_1_2d:1.12
	Interim_Release_1-2d_RC1:1.12
	Interim_Release_1-2d_beta1:1.11
	PublicRelease_1_2c:1.11
	Interim_Release_1-2c_RC1:1.11
	Interim_Release_1-2c_beta1:1.11
	PublicRelease_1_2b:1.11
	Interim_Release_1-2b_RC1:1.11
	PublicRelease_1_2a:1.10
	Interim_Release_1-2a_RC1:1.10
	Interim_Release_1-2a_beta2:1.10
	Interim_Release_1-2a_beta1:1.10
	PublicRelease_1_2:1.10
	Interim_Release_1-2_RC1:1.10
	Interim_Release_1-2_beta1:1.10
	PublicRelease_1_1g:1.10
	Interim_Release_1-1g_RC3:1.10
	Interim_Release_1-1g_RC2:1.10
	Interim_Release_1-1g_RC1:1.10
	Interim_Release_1-1g_beta2:1.10
	Interim_Release_1-1g_beta1:1.10
	PublicRelease_1_1f:1.9
	Interim_Release_1-1f_RC1:1.9
	PublicRelease_1_1e:1.9
	Interim_Release_1-1e_RC2:1.9
	Interim_Release_1-1e_RC1:1.9
	Interim_Release_1-1e_beta1:1.9
	PublicRelease_1_1d:1.9
	Interim_Release_1-1d_RC1:1.9
	PublicRelease_1_1c:1.9
	Interim_Release_1-1c_RC1:1.9
	Interim_Release_1-1c_beta2:1.9
	Interim_Release_1-1c_beta1:1.9
	PublicRelease_1_1b:1.9
	Interim_Release_1-1b_RC1:1.9
	PublicRelease_1_1a:1.9
	Interim_Release_1-1a_RC2:1.9
	Interim_Release_1-1a_RC1:1.9
	Interim_Release_1-1a_beta2:1.9
	Interim_Release_1-1a_beta1:1.9
	PublicRelease_1_1:1.9
	Interim_Release_1-1_beta1:1.9
	PublicRelease_1o:1.8
	Interim_Release_1o_RC1:1.8
	Interim_Release_1o_beta1:1.8
	PublicRelease_1n:1.8
	Interim_Release_1n_RC2:1.8
	Interim_Release_1n_RC1:1.8
	Interim_Release_1n_beta2:1.8
	PublicRelease_1m:1.8
	Interim_Release_1m_beta1:1.8
	PublicRelease_1l:1.8
	Interim_Release_1l_RC3:1.8
	Interim_Release_1l_RC2:1.8
	Interim_Release_1l_RC1:1.8
	Interim_Release_1l_beta2:1.8
	Interim_Release_1l_beta1:1.8
	PublicRelease_1k:1.8
	Interim_Release_1k_RC4:1.8
	Interim_1k_RC3:1.8
	Interim_1k_RC2:1.8
	Interim_Release_1k_RC1:1.8
	Interim_Release_1k_beta5:1.8
	Intrerim_Release_1k_beta4:1.8
	Interim_Release_1k_beta1:1.7
	PublicRelease_1j:1.7
	Interim_Release_1J_RC3:1.7
	Interim_Release_1j_RC3:1.7
	Interim_Release_1j_RC2:1.7
	Interim_Release_1j_RC1:1.7
	Interim_Release_1j_beta2:1.7
	Interim_Release_1j_beta1:1.7
	PublicRelease_1i:1.7
	Interim_Release_1i_RC6:1.7
	Interim_Release_1i_RC3:1.7
	Interim_Release_1i_RC2:1.7
	Interim_Release_1i_RC1:1.7
	Interim_Release_1i_beta3:1.7
	Interim_Release_1i_beta2:1.7
	Interim_Release_1i_beta1:1.6
	PublicRelease_1h:1.1
	Interim_Release_1h_rc2:1.1
	Interim_Release_1h_RC1:1.1
	Interim_Release_1h_beta2:1.1;
locks; strict;
comment	@// @;


1.12
date	2008.03.10.02.25.30;	author aw3;	state Exp;
branches;
next	1.11;

1.11
date	2006.11.13.00.39.15;	author aw3;	state Exp;
branches;
next	1.10;

1.10
date	2005.08.22.01.37.08;	author aw3;	state Exp;
branches;
next	1.9;

1.9
date	2004.10.01.04.45.43;	author aw3;	state Exp;
branches;
next	1.8;

1.8
date	2004.02.25.19.45.18;	author aw3;	state Exp;
branches;
next	1.7;

1.7
date	2003.10.24.01.21.22;	author morevit;	state Exp;
branches;
next	1.6;

1.6
date	2003.10.05.13.40.35;	author dongato;	state Exp;
branches;
next	1.5;

1.5
date	2003.10.05.10.45.18;	author forcha;	state Exp;
branches;
next	1.4;

1.4
date	2003.10.05.07.24.39;	author dongato;	state Exp;
branches;
next	1.3;

1.3
date	2003.10.05.05.19.58;	author dongato;	state Exp;
branches;
next	1.2;

1.2
date	2003.10.05.00.02.23;	author forcha;	state Exp;
branches;
next	1.1;

1.1
date	2003.08.23.00.32.24;	author forcha;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Fixed unused code regarding client/file details dialog title localization.
@
text
@//	This file is part of eMule Plus
//
//	This program is free software; you can redistribute it and/or
//	modify it under the terms of the GNU General Public License
//	as published by the Free Software Foundation; either
//	version 2 of the License, or (at your option) any later version.
//
//	This program is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU General Public License for more details.
//
//	You should have received a copy of the GNU General Public License
//	along with this program; if not, write to the Free Software
//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
// FileDetails.cpp : implementation file

#include "stdafx.h"
#include "clientdetails.h"
#include "..\otherfunctions.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

/////////////////////////////////////////////////////////////////////////////
// CClientDetails

IMPLEMENT_DYNAMIC(CClientDetails, CPropertySheet)

CClientDetails::CClientDetails(UINT uiIDCaption, CUpDownClient* pClient, CWnd* pParentWnd, UINT iSelectPage)
	: CPropertySheet(GetResString(uiIDCaption), pParentWnd, iSelectPage)
{
	Init(pClient);
}

CClientDetails::CClientDetails(LPCTSTR pszCaption, CUpDownClient* pClient, CWnd* pParentWnd, UINT iSelectPage)
	: CPropertySheet(pszCaption, pParentWnd, iSelectPage)
{
	Init(pClient);
}

CClientDetails::~CClientDetails()
{
}


BEGIN_MESSAGE_MAP(CClientDetails, CPropertySheet)
	ON_WM_TIMER()
END_MESSAGE_MAP()

/////////////////////////////////////////////////////////////////////////////
// CClientDetails message handlers

void CClientDetails::Init(CUpDownClient* pClient)
{
	m_pClient = pClient;
	m_nTimer = 0;

	m_proppageGeneral.m_pClient = m_pClient;
	m_wndTransfer.m_pClient = m_pClient;
	m_wndScores.m_pClient = m_pClient;

	m_psh.dwFlags = (m_psh.dwFlags | PSH_NOAPPLYNOW) & ~PSH_HASHELP;

	GetResString(&m_strGeneralTitle, IDS_PW_GENERAL);
	m_proppageGeneral.m_psp.dwFlags = (m_proppageGeneral.m_psp.dwFlags | PSP_USETITLE) & ~PSP_HASHELP;
	m_proppageGeneral.m_pPSP->pszTitle = m_strGeneralTitle;

	GetResString(&m_strTransferTitle, IDS_TRANSFER_NOUN);
	m_wndTransfer.m_psp.dwFlags = (m_wndTransfer.m_psp.dwFlags | PSP_USETITLE) & ~PSP_HASHELP;
	m_wndTransfer.m_pPSP->pszTitle = m_strTransferTitle;

	GetResString(&m_strScoresTitle, IDS_CD_SCORES);
	m_wndScores.m_psp.dwFlags = (m_wndScores.m_psp.dwFlags | PSP_USETITLE) & ~PSP_HASHELP;
	m_wndScores.m_pPSP->pszTitle = m_strScoresTitle;

	AddPage(&m_proppageGeneral);
	AddPage(&m_wndTransfer);
	AddPage(&m_wndScores);
}

BOOL CClientDetails::OnInitDialog()
{
	BOOL bResult = CPropertySheet::OnInitDialog();

	m_nTimer = SetTimer(301, 10000, NULL);

	return bResult;
}

void CClientDetails::OnTimer(UINT nIDEvent)
{
	if(nIDEvent == m_nTimer)
	{
		m_proppageGeneral.Update();
		m_wndTransfer.Update();
		m_wndScores.Update();
	}

	CPropertySheet::OnTimer(nIDEvent);
}
@


1.11
log
@Removed unused Apply and Help buttons from client/file details dialogs.
@
text
@d34 2
a35 2
CClientDetails::CClientDetails(UINT nIDCaption, CUpDownClient* pClient, CWnd* pParentWnd, UINT iSelectPage)
	: CPropertySheet(nIDCaption, pParentWnd, iSelectPage)
@


1.10
log
@IDS_INFLST_USER_TRANSFER renamed into IDS_TRANSFER_NOUN.
@
text
@d1 1
a1 1
// ClientDetails.cpp : implementation file
d3 15
a51 3
	//{{AFX_MSG_MAP(CClientDetails)
		// NOTE - the ClassWizard will add and remove mapping macros here.
	//}}AFX_MSG_MAP
d67 2
d70 1
a70 1
	m_proppageGeneral.m_psp.dwFlags |= PSP_USETITLE;
d74 1
a74 1
	m_wndTransfer.m_psp.dwFlags |= PSP_USETITLE;
d78 1
a78 1
	m_wndScores.m_psp.dwFlags |= PSP_USETITLE;
@


1.9
log
@Improved string processing; Cleanup.
@
text
@d59 1
a59 1
	GetResString(&m_strTransferTitle, IDS_INFLST_USER_TRANSFER);
@


1.8
log
@Improved string processing;
Removed property page localization during property sheet creature (every property page is localized at its creature)
@
text
@d5 2
a6 3
#include "ClientDetails.h"
#include "..\UpDownClient.h"
#include ".\clientdetails.h"
d20 1
a20 1
	:CPropertySheet(nIDCaption, pParentWnd, iSelectPage)
d26 1
a26 1
	:CPropertySheet(pszCaption, pParentWnd, iSelectPage)
d55 1
a55 1
	m_strGeneralTitle = GetResString(IDS_PW_GENERAL);
d59 1
a59 1
	m_strTransferTitle = GetResString(IDS_INFLST_USER_TRANSFER);
d63 1
a63 1
	m_strScoresTitle = GetResString(IDS_CD_SCORES);
a71 7
void CClientDetails::Update()
{
	m_proppageGeneral.Update();
	m_wndTransfer.Update();
	m_wndScores.Update();
}

d76 1
a76 1
	m_nTimer = SetTimer(301, 10000, 0);
d85 3
a87 1
		Update();
@


1.7
log
@Formatting, comments, and name changes.
@
text
@d51 1
a51 1
	
d56 1
a56 1
	m_strGeneralTitle.Format("%s", GetResString(IDS_PW_GENERAL));
d60 1
a60 1
	m_strTransferTitle.Format("%s", GetResString(IDS_INFLST_USER_TRANSFER));
d64 1
a64 1
	m_strScoresTitle.Format("%s", GetResString(IDS_CD_SCORES));
a72 7
void CClientDetails::Localize(void)
{
	m_proppageGeneral.Localize();
	m_wndTransfer.Localize();
	m_wndScores.Localize();
}

a83 1
	Localize();
@


1.6
log
@Minor changes
@
text
@d52 1
a52 1
	m_wndGeneral.m_pClient = m_pClient;
d57 2
a58 2
	m_wndGeneral.m_psp.dwFlags |= PSP_USETITLE;
	m_wndGeneral.m_pPSP->pszTitle = m_strGeneralTitle;
d68 1
a68 1
	AddPage(&m_wndGeneral);
d75 1
a75 1
	m_wndGeneral.Localize();
d82 1
a82 1
	m_wndGeneral.Update();
@


1.5
log
@TRY & CATCH
@
text
@d92 1
a92 1
	m_nTimer = SetTimer(301, 5000, 0);
@


1.4
log
@Localization update
@
text
@d82 3
a92 1
	Update();
@


1.3
log
@Localization and some fixes for new detail dialogs by FoRcHa
@
text
@d56 12
@


1.2
log
@new dialogs for file- & client-details
@
text
@d63 3
a69 1

@


1.1
log
@*** empty log message ***
@
text
@d6 2
d23 1
a23 1
	Init();
d29 1
a29 1
	Init();
d41 1
d47 1
a47 1
void CClientDetails::Init()
d49 7
d61 1
a61 12
/////////////////////////////////////////////////////////////////////////////
// CCDGeneral property page

IMPLEMENT_DYNCREATE(CCDGeneral, CPropertyPage)

CCDGeneral::CCDGeneral() : CPropertyPage(CCDGeneral::IDD)
{
	//{{AFX_DATA_INIT(CCDGeneral)
	//}}AFX_DATA_INIT
}

CCDGeneral::~CCDGeneral()
d65 1
a65 1
void CCDGeneral::DoDataExchange(CDataExchange* pDX)
a66 34
	CPropertyPage::DoDataExchange(pDX);
	//{{AFX_DATA_MAP(CCDGeneral)
	DDX_Control(pDX, IDC_USERNAME, m_ctrlUserName);
	DDX_Control(pDX, IDC_USERHASH_VAL, m_ctrlUserHash);
	DDX_Control(pDX, IDC_SERVERNAME_VAL, m_ctrlServerName);
	DDX_Control(pDX, IDC_SERVERIP_VAL, m_ctrlServerIP);
	DDX_Control(pDX, IDC_IPADDRESS_VAL, m_ctrlClientIP);
	DDX_Control(pDX, IDC_ID_VAL, m_ctrlClientID);
	DDX_Control(pDX, IDC_CLIENTVERSION_VAL, m_ctrlClientVersion);
	DDX_Control(pDX, IDC_CLIENTSOFTWARE_VAL, m_ctrlClientSoftware);
	DDX_Control(pDX, IDC_CLIENTICON, m_ctrlClientIcon);
	//}}AFX_DATA_MAP
}


BEGIN_MESSAGE_MAP(CCDGeneral, CPropertyPage)
	//{{AFX_MSG_MAP(CCDGeneral)
		// NOTE: the ClassWizard will add message map macros here
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()

/////////////////////////////////////////////////////////////////////////////
// CCDGeneral message handlers
/////////////////////////////////////////////////////////////////////////////
// CCDTransfer property page

IMPLEMENT_DYNCREATE(CCDTransfer, CPropertyPage)

CCDTransfer::CCDTransfer() : CPropertyPage(CCDTransfer::IDD)
{
	//{{AFX_DATA_INIT(CCDTransfer)
		// NOTE: the ClassWizard will add member initialization here
	//}}AFX_DATA_INIT
}
a67 2
CCDTransfer::~CCDTransfer()
{
d70 1
a70 1
void CCDTransfer::DoDataExchange(CDataExchange* pDX)
d72 1
a72 12
	CPropertyPage::DoDataExchange(pDX);
	//{{AFX_DATA_MAP(CCDTransfer)
	DDX_Control(pDX, IDC_CURRENTDOWN_VAL, m_ctrlCurrentDownload);
	//}}AFX_DATA_MAP
}


BEGIN_MESSAGE_MAP(CCDTransfer, CPropertyPage)
	//{{AFX_MSG_MAP(CCDTransfer)
		// NOTE: the ClassWizard will add message map macros here
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()
d74 3
a76 4
/////////////////////////////////////////////////////////////////////////////
// CCDTransfer message handlers
/////////////////////////////////////////////////////////////////////////////
// CCDScores property page
d78 1
a78 7
IMPLEMENT_DYNCREATE(CCDScores, CPropertyPage)

CCDScores::CCDScores() : CPropertyPage(CCDScores::IDD)
{
	//{{AFX_DATA_INIT(CCDScores)
		// NOTE: the ClassWizard will add member initialization here
	//}}AFX_DATA_INIT
d81 1
a81 1
CCDScores::~CCDScores()
d83 4
a86 1
}
d88 1
a88 7
void CCDScores::DoDataExchange(CDataExchange* pDX)
{
	CPropertyPage::DoDataExchange(pDX);
	//{{AFX_DATA_MAP(CCDScores)
	DDX_Control(pDX, IDC_SCORES_LBL, m_ctrlScores);
	DDX_Control(pDX, IDC_REMOTESCORES_LBL, m_ctrlRemoteScores);
	//}}AFX_DATA_MAP
a89 11


BEGIN_MESSAGE_MAP(CCDScores, CPropertyPage)
	//{{AFX_MSG_MAP(CCDScores)
		// NOTE: the ClassWizard will add message map macros here
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()

/////////////////////////////////////////////////////////////////////////////
// CCDScores message handlers

@

