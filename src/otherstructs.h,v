head	1.18;
access;
symbols
	PublicRelease_1_2e:1.18
	Interim_Release_1-2e_RC1:1.18
	PublicRelease_1_2d:1.18
	Interim_Release_1-2d_RC1:1.18
	Interim_Release_1-2d_beta1:1.17
	PublicRelease_1_2c:1.17
	Interim_Release_1-2c_RC1:1.17
	Interim_Release_1-2c_beta1:1.16
	PublicRelease_1_2b:1.15
	Interim_Release_1-2b_RC1:1.15
	PublicRelease_1_2a:1.14
	Interim_Release_1-2a_RC1:1.14
	Interim_Release_1-2a_beta2:1.14
	Interim_Release_1-2a_beta1:1.12
	PublicRelease_1_2:1.12
	Interim_Release_1-2_RC1:1.12
	Interim_Release_1-2_beta1:1.12
	PublicRelease_1_1g:1.12
	Interim_Release_1-1g_RC3:1.12
	Interim_Release_1-1g_RC2:1.12
	Interim_Release_1-1g_RC1:1.12
	Interim_Release_1-1g_beta2:1.12
	Interim_Release_1-1g_beta1:1.12
	PublicRelease_1_1f:1.12
	Interim_Release_1-1f_RC1:1.12
	PublicRelease_1_1e:1.12
	Interim_Release_1-1e_RC2:1.12
	Interim_Release_1-1e_RC1:1.12
	Interim_Release_1-1e_beta1:1.12
	PublicRelease_1_1d:1.12
	Interim_Release_1-1d_RC1:1.12
	PublicRelease_1_1c:1.12
	Interim_Release_1-1c_RC1:1.12
	Interim_Release_1-1c_beta2:1.12
	Interim_Release_1-1c_beta1:1.11
	PublicRelease_1_1b:1.11
	Interim_Release_1-1b_RC1:1.11
	PublicRelease_1_1a:1.10
	Interim_Release_1-1a_RC2:1.10
	Interim_Release_1-1a_RC1:1.10
	Interim_Release_1-1a_beta2:1.10
	Interim_Release_1-1a_beta1:1.10
	PublicRelease_1_1:1.10
	Interim_Release_1-1_beta1:1.10
	PublicRelease_1o:1.10
	Interim_Release_1o_RC1:1.10
	Interim_Release_1o_beta1:1.10
	PublicRelease_1n:1.10
	Interim_Release_1n_RC2:1.10
	Interim_Release_1n_RC1:1.10
	Interim_Release_1n_beta2:1.10
	Interim_Release_1n_beta1:1.10
	PublicRelease_1m:1.10
	Interim_Release_1m_beta1:1.10
	PublicRelease_1l:1.10
	Interim_Release_1l_RC3:1.10
	Interim_Release_1l_RC2:1.10
	Interim_Release_1l_RC1:1.10
	Interim_Release_1l_beta2:1.9
	Interim_Release_1l_beta1:1.9
	PublicRelease_1k:1.9
	Interim_Release_1k_RC4:1.9
	Interim_1k_RC3:1.9
	Interim_1k_RC2:1.8
	Interim_Release_1k_RC1:1.8
	Interim_Release_1k_beta5:1.8
	Intrerim_Release_1k_beta4:1.8
	Interim_Release_1k_beta1:1.8
	PublicRelease_1j:1.7
	Interim_Release_1J_RC3:1.7
	Interim_Release_1j_RC3:1.7
	Interim_Release_1j_RC2:1.7
	Interim_Release_1j_RC1:1.7
	Interim_Release_1j_beta2:1.7
	Interim_Release_1j_beta1:1.7
	PublicRelease_1i:1.7
	Interim_Release_1i_RC6:1.7
	Interim_Release_1i_RC3:1.7
	Interim_Release_1i_RC2:1.7
	Interim_Release_1i_RC1:1.7
	Interim_Release_1i_beta3:1.7
	Interim_Release_1i_beta2:1.6
	Interim_Release_1i_beta1:1.4
	PublicRelease_1h:1.4
	Interim_Release_1h_rc2:1.4
	Interim_Release_1h_RC1:1.4
	Interim_Release_1h_beta2:1.4
	Interim_Release_1h_beta1_now:1.3
	Interim_Release_1h_beta1:1.3
	PublicRelease_1g:1.3
	Interim_Release_1g_RC6_Final:1.3
	Interim_Release_1g_RC6:1.3
	Interim_Release_1g_RC5:1.3
	Interim_Release_1g_RC4:1.3
	Interim_Release_1g_RC3:1.3
	Interim_Release_1g_beta2:1.3
	Interim_Release_1g_beta1:1.3
	Interim_Release_1f_RC4:1.3
	Interim_Release_1f_RC3:1.3
	Interim_Release_1f_RC2:1.3
	Interim_Release_1f_RC:1.3
	Interim_Release_1f_beta2:1.3
	Interim_Release_1f_beta1:1.3
	PublicRelease_1e:1.3
	Interim_Release_1e_RC2:1.3
	Interim_Release_1e_RC:1.3
	Interim_Release_1e_beta3:1.3
	Interim_Release_1e_beta2:1.3
	Interim_Release_1e_beta2_before_kuchin:1.3
	Interim_Release_1e_beta1:1.3
	PublicRelease_1c:1.3
	featurestest:1.3.0.14
	Interim_Release_1c_RC:1.3
	Interim_Release_1c_beta2:1.3
	Interim_Release_1c_beta1:1.3
	threaded_downloadqueue:1.3.0.12
	PublicRelease_1b:1.3
	Interim_Release_1b_beta2:1.3
	Interim_Release_1b_beta1:1.3
	proxydeadlake:1.3.0.10
	PublicRelease_1a:1.3
	Interim_Release_1a_beta2:1.3
	BerkeleyDb:1.3.0.8
	Interim_Release_1a_beta1:1.3
	PublicRelease_1:1.3
	goldfish:1.3
	eMulePlus_1_RC2:1.3
	eMulePlus_26b_1RC1:1.3
	PreRelease_26b_i0e:1.3
	before_26d_merge:1.3
	Interim_Release_26b_i0d:1.3
	Interim_Release_26b_i0c:1.3
	Interim_Release_26b_i0b:1.3
	Interim_Release_26b_i0a:1.3
	systraydlg:1.3.0.6
	plus26based:1.3.0.4
	Interim_Release_25b_i0b:1.3
	Proxy_Dev:1.3
	Interim_Release_25b_i0a:1.3.2.1
	proxytest:1.3.2.1.0.2
	official_sockets:1.3.0.2
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.18
date	2008.03.03.05.25.41;	author aw3;	state Exp;
branches;
next	1.17;

1.17
date	2007.04.14.04.22.30;	author aw3;	state Exp;
branches;
next	1.16;

1.16
date	2007.02.25.00.47.49;	author aw3;	state Exp;
branches;
next	1.15;

1.15
date	2006.11.16.05.52.19;	author aw3;	state Exp;
branches;
next	1.14;

1.14
date	2006.05.15.05.51.51;	author aw3;	state Exp;
branches;
next	1.13;

1.13
date	2006.05.05.11.55.54;	author aw3;	state Exp;
branches;
next	1.12;

1.12
date	2005.02.02.07.15.51;	author aw3;	state Exp;
branches;
next	1.11;

1.11
date	2004.12.15.00.17.13;	author aw3;	state Exp;
branches;
next	1.10;

1.10
date	2004.05.26.06.17.13;	author aw3;	state Exp;
branches;
next	1.9;

1.9
date	2004.04.05.06.54.53;	author aw3;	state Exp;
branches;
next	1.8;

1.8
date	2004.02.15.11.55.57;	author morevit;	state Exp;
branches;
next	1.7;

1.7
date	2003.10.29.14.14.18;	author morevit;	state Exp;
branches;
next	1.6;

1.6
date	2003.10.21.02.16.52;	author morevit;	state Exp;
branches;
next	1.5;

1.5
date	2003.10.08.01.53.32;	author morevit;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.30.11.23.26;	author emoulari;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.24.22.07.53;	author maverick65;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2003.01.22.15.05.42;	author cax2;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.18.21.25;	author cax2;	state Exp;
branches;
next	;

1.3.2.1
date	2003.01.28.16.54.41;	author cax2;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Pending_Block_Struct moved to client implementation from otherstructs.h.
@
text
@//this file is part of eMule
//Copyright (C)2002 Merkur ( merkur-@@users.sourceforge.net / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the GNU General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#pragma once

#include "opcodes.h"

#pragma pack(1)
//			SERVER TO CLIENT
struct PacketHeader_Struct
{
	byte		byteEDonkeyProtocol;
	uint32		dwPacketLength;
	EnumOpcodes	eCommand;
};

struct UDP_Header_Struct
{
	byte		byteEDonkeyProtocol;
	EnumOpcodes	eCommand;
};
#pragma pack()

struct Requested_Block_Struct
{
	uint64		qwStartOffset;
	uint64		qwEndOffset;
	uchar		m_fileHash[16];
};

struct Requested_File_Struct
{
	uchar		m_fileHash[16];
	uint32		m_dwLastAskedTime;
	byte		m_byteNumBadRequests;
};

struct Gap_Struct
{
	uint64		qwStartOffset;
	uint64		qwEndOffset;
};
@


1.17
log
@Definitions of some structures were moved to the corresponding classes.
@
text
@a18 2
#include "types.h"
#include "zlib/zlib.h"
a50 9
struct Pending_Block_Struct
{
	Requested_Block_Struct	*pReqBlock;		// requested block
	z_stream				*pZStream;		// zlib context
	BYTE					*pbyteRxDate;	// buffer with buffered rx data
	uint32					dwReceived;		// bytes received for requested block
	int						iZStreamErr;
};

@


1.16
log
@Packet length structure field was changed from signed to unsigned;
Removed #pragma pack(1) for structures where it isn't required.
@
text
@a36 5

struct LoginAnswer_Struct
{
	uint32		m_dwClientID;
};
a66 15

#pragma pack(1)
struct ServerMet_Struct
{
	uint32		m_dwIP;
	uint16		m_uPort;
	uint32		m_dwTagCount;
};

struct ServerMet_StructShort
{
	uint32		m_dwIP;
	uint16		m_uPort;
};
#pragma pack()
@


1.15
log
@Simplified processing of the protocol variable.
@
text
@a16 1

d28 1
a28 1
	sint32		lPacketLength;
d31 1
d42 1
d73 1
a85 6

struct TransferredData
{
	uint32		m_dwDataLength;
	uint32		m_dwTimeStamp;
};
@


1.14
log
@Large file size support preparations; Renaming.
@
text
@d28 3
a30 3
	EnumProtocols	m_eEDonkeyProtocol;
	sint32			m_lPacketLength;
	EnumOpcodes		m_eCommand;
d34 2
a35 2
	EnumProtocols	m_eEDonkeyProtocol;
	EnumOpcodes		m_eCommand;
@


1.13
log
@Large file size support preparations.
@
text
@d45 2
a46 2
	uint32		m_dwStartOffset;
	uint32		m_dwEndOffset;
d59 1
a59 1
	Requested_Block_Struct	*m_pRequestedBlock;
@


1.12
log
@Server LowID users statistics.
@
text
@d68 2
a69 2
	uint32		m_dwStartOffset;
	uint32		m_dwEndOffset;
@


1.11
log
@Removed code which became useless.
@
text
@d79 6
@


1.10
log
@Fixed processing of corrupted compressed packets;
Removed unused members.
@
text
@a47 1
	uint32		m_dwBytesTransferred; // Barry - This counts bytes completed
@


1.9
log
@Fixed processing of corrupted compression stream;
Fixed very rare decompression problem for highly compressed data;
Added protection againts packets with zero data size;
Removed initialization of 'opaque' zstream parameter (not required because external memory allocation procedures aren't provided);
Recursive calls are changed into a loop (faster).
@
text
@a46 1
	uint32		m_dwPackedSize;
d53 3
a55 3
	uchar	  m_fileHash[16];
	uint32	  m_dwLastAskedTime;
	byte	  m_byteNumBadRequests;
d60 5
a64 4
	Requested_Block_Struct	   *m_pRequestedBlock;
	z_stream				   *m_pZStream;       // Barry - Used to unzip packets
	uint32						m_dwTotalUnzipped; // Barry - This holds the total unzipped bytes for all packets so far
	int							iZStreamErr;
d85 1
a85 1
#pragma pack()@


1.8
log
@Changed uint32 to unsigned long from unsigned int and made necessary code changes. Got rid of _unsigned_ types int8,int16,int32,int64. Eliminated uint8 to avoid confusion. Use "byte".
@
text
@d62 1
a62 1
    z_stream				   *m_pZStream;       // Barry - Used to unzip packets
d64 1
@


1.7
log
@Formatting, comments, and name changes.
@
text
@d29 1
a29 1
	int32			m_lPacketLength;
d56 1
a56 1
	uint8	  m_byteNumBadRequests;
@


1.6
log
@Formatting, comments, and name changes.
Completion of download list sorting changes (for now).
Added missing sort on FakeCheck column in search window.
@
text
@d38 3
a40 2
struct LoginAnswer_Struct {
	uint32	clientid;
d45 5
a49 5
	uint32		StartOffset;
	uint32		EndOffset;
	uint32		packedsize;
	uchar		FileID[16];
	uint32		transferred; // Barry - This counts bytes completed
d52 5
a56 4
struct Requested_File_Struct{
	uchar	  fileid[16];
	uint32	  lastasked;
	uint8	  badrequests;
d59 5
a63 4
struct Pending_Block_Struct{
	Requested_Block_Struct*	block;
    z_stream               *zStream;       // Barry - Used to unzip packets
	uint32                  totalUnzipped; // Barry - This holds the total unzipped bytes for all packets so far
d66 4
a69 3
struct Gap_Struct{
	uint32 start;
	uint32 end;
d74 3
a76 3
	uint32	m_iIP;
	uint16	m_nPort;
	uint32	m_iTagCount;
d79 4
a82 4
// enkeyDEV(Ottavio84) - Accurate speed measurement-
struct TransferredData {
	uint32	datalen;
	uint32	timestamp;
@


1.5
log
@Formatting, comments, and name changes.
Created distinct tag classes and typed enumerations for tags, opcodes, and protocols.
@
text
@d42 7
a48 6
struct Requested_Block_Struct{
	uint32	StartOffset;
	uint32	EndOffset;
	uint32	packedsize;
	uchar	FileID[16];
	uint32  transferred; // Barry - This counts bytes completed
@


1.4
log
@SecureIdent Support Mainly
Too many changes to mention here
@
text
@d22 1
d26 10
a35 8
struct Header_Struct{
	int8	eDonkeyID;
	int32	packetlength;
	int8	command;
};
struct UDP_Header_Struct{
	int8	eDonkeyID;
	int8	command;
d67 5
a71 4
struct ServerMet_Struct {
	uint32	ip;
	uint16	port;
	uint32	tagcount;
@


1.3
log
@updated to .25b codebase
@
text
@d75 1
@


1.3.2.1
log
@updating this branch...
@
text
@@


1.2
log
@update to .25b codebase
@
text
@d55 1
a55 1
	z_stream               *zStream;       // Barry - Used to unzip packets
@


1.1
log
@*** empty log message ***
@
text
@d21 1
d44 1
d55 2
a56 1
	CMemFile*				buffer;
@

