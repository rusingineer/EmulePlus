head	1.9;
access;
symbols
	PublicRelease_1_2e:1.9
	Interim_Release_1-2e_RC1:1.9
	PublicRelease_1_2d:1.8
	Interim_Release_1-2d_RC1:1.8
	Interim_Release_1-2d_beta1:1.8
	PublicRelease_1_2c:1.8
	Interim_Release_1-2c_RC1:1.8
	Interim_Release_1-2c_beta1:1.6
	PublicRelease_1_2b:1.6
	Interim_Release_1-2b_RC1:1.6
	PublicRelease_1_2a:1.6
	Interim_Release_1-2a_RC1:1.6
	Interim_Release_1-2a_beta2:1.6
	Interim_Release_1-2a_beta1:1.6
	PublicRelease_1_2:1.6
	Interim_Release_1-2_RC1:1.6
	Interim_Release_1-2_beta1:1.6
	PublicRelease_1_1g:1.6
	Interim_Release_1-1g_RC3:1.6
	Interim_Release_1-1g_RC2:1.6
	Interim_Release_1-1g_RC1:1.6
	Interim_Release_1-1g_beta2:1.6
	Interim_Release_1-1g_beta1:1.6
	PublicRelease_1_1f:1.6
	Interim_Release_1-1f_RC1:1.6
	PublicRelease_1_1e:1.6
	Interim_Release_1-1e_RC2:1.6
	Interim_Release_1-1e_RC1:1.6
	Interim_Release_1-1e_beta1:1.6
	PublicRelease_1_1d:1.6
	Interim_Release_1-1d_RC1:1.6
	PublicRelease_1_1c:1.6
	Interim_Release_1-1c_RC1:1.6
	Interim_Release_1-1c_beta2:1.6
	Interim_Release_1-1c_beta1:1.6
	PublicRelease_1_1b:1.6
	Interim_Release_1-1b_RC1:1.6
	PublicRelease_1_1a:1.6
	Interim_Release_1-1a_RC2:1.6
	Interim_Release_1-1a_RC1:1.6
	Interim_Release_1-1a_beta2:1.6
	Interim_Release_1-1a_beta1:1.6
	PublicRelease_1_1:1.6
	Interim_Release_1-1_beta1:1.6
	PublicRelease_1o:1.6
	Interim_Release_1o_RC1:1.6
	Interim_Release_1o_beta1:1.6
	PublicRelease_1n:1.6
	Interim_Release_1n_RC2:1.6
	Interim_Release_1n_RC1:1.6
	Interim_Release_1n_beta2:1.6
	Interim_Release_1n_beta1:1.6
	PublicRelease_1m:1.6
	Interim_Release_1m_beta1:1.6
	PublicRelease_1l:1.6
	Interim_Release_1l_RC3:1.6
	Interim_Release_1l_RC2:1.5
	Interim_Release_1l_RC1:1.5
	Interim_Release_1l_beta2:1.5
	Interim_Release_1l_beta1:1.5
	PublicRelease_1k:1.5
	Interim_Release_1k_RC4:1.5
	Interim_1k_RC3:1.5
	Interim_1k_RC2:1.5
	Interim_Release_1k_RC1:1.5
	Interim_Release_1k_beta5:1.5
	Intrerim_Release_1k_beta4:1.5
	Interim_Release_1k_beta1:1.5
	PublicRelease_1j:1.5
	Interim_Release_1J_RC3:1.5
	Interim_Release_1j_RC3:1.5
	Interim_Release_1j_RC2:1.5
	Interim_Release_1j_RC1:1.5
	Interim_Release_1j_beta2:1.5
	Interim_Release_1j_beta1:1.5
	PublicRelease_1i:1.5
	Interim_Release_1i_RC6:1.5
	Interim_Release_1i_RC3:1.5
	Interim_Release_1i_RC2:1.5
	Interim_Release_1i_RC1:1.5
	Interim_Release_1i_beta3:1.5
	Interim_Release_1i_beta2:1.5
	Interim_Release_1i_beta1:1.5
	PublicRelease_1h:1.5
	Interim_Release_1h_rc2:1.5
	Interim_Release_1h_RC1:1.5
	Interim_Release_1h_beta2:1.5
	Interim_Release_1h_beta1_now:1.5
	Interim_Release_1h_beta1:1.5
	PublicRelease_1g:1.4
	Interim_Release_1g_RC6_Final:1.4
	Interim_Release_1g_RC6:1.4
	Interim_Release_1g_RC5:1.4
	Interim_Release_1g_RC4:1.4
	Interim_Release_1g_RC3:1.4
	Interim_Release_1g_beta2:1.3
	Interim_Release_1g_beta1:1.3
	Interim_Release_1f_RC4:1.3
	Interim_Release_1f_RC3:1.3
	Interim_Release_1f_RC2:1.3
	Interim_Release_1f_RC:1.3
	Interim_Release_1f_beta2:1.3
	Interim_Release_1f_beta1:1.3
	PublicRelease_1e:1.3
	Interim_Release_1e_RC2:1.3
	Interim_Release_1e_RC:1.3
	Interim_Release_1e_beta3:1.3
	Interim_Release_1e_beta2:1.3
	Interim_Release_1e_beta2_before_kuchin:1.3
	Interim_Release_1e_beta1:1.3
	PublicRelease_1c:1.3
	featurestest:1.3.0.6
	Interim_Release_1c_RC:1.3
	Interim_Release_1c_beta2:1.3
	Interim_Release_1c_beta1:1.3
	threaded_downloadqueue:1.3.0.4
	PublicRelease_1b:1.3
	Interim_Release_1b_beta2:1.3
	Interim_Release_1b_beta1:1.3
	proxydeadlake:1.3.0.2
	PublicRelease_1a:1.3
	Interim_Release_1a_beta2:1.3
	BerkeleyDb:1.2.0.2
	Interim_Release_1a_beta1:1.2
	PublicRelease_1:1.2
	goldfish:1.2
	eMulePlus_1_RC2:1.2
	eMulePlus_26b_1RC1:1.2
	PreRelease_26b_i0e:1.2
	before_26d_merge:1.1
	Interim_Release_26b_i0d:1.1
	Interim_Release_26b_i0c:1.1
	Interim_Release_26b_i0b:1.1
	Interim_Release_26b_i0a:1.1
	systraydlg:1.1.0.8
	plus26based:1.1.0.6
	Interim_Release_25b_i0b:1.1
	Proxy_Dev:1.1
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.9
date	2008.12.08.13.28.22;	author kush_eplus;	state Exp;
branches;
next	1.8;

1.8
date	2007.04.08.22.31.27;	author aw3;	state Exp;
branches;
next	1.7;

1.7
date	2007.04.03.18.57.39;	author kush_eplus;	state Exp;
branches;
next	1.6;

1.6
date	2004.06.08.16.12.36;	author katsyonak;	state Exp;
branches;
next	1.5;

1.5
date	2003.08.03.20.00.27;	author forcha;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.09.20.57.48;	author partyckip;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.26.03.26.50;	author cax2;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.17.06.50.29;	author obaldin;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2003.01.21.18.21.16;	author cax2;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.01.28.16.54.03;	author cax2;	state Exp;
branches;
next	;

1.2.2.1
date	2003.02.28.22.44.54;	author obaldin;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Make base class destructors virtual.
@
text
@// ------------------------------------------------------------
//  CDialogMinTrayBtn template class
//  MFC CDialog with minimize to systemtray button (0.04a)
//  Supports WinXP styles (thanks to David Yuheng Zhao for CVisualStylesXP - yuheng_zhao@@yahoo.com)
// ------------------------------------------------------------
//  DialogMinTrayBtn.h
//  zegzav - 2002,2003 - eMule project (http://www.emule-project.net)
// ------------------------------------------------------------

#pragma once

#include "ThemeHelperST.h"

#define HTMINTRAYBUTTON	65
#define SC_MINIMIZETRAY	0xE000

template <class BASE = CDialog> class CDialogMinTrayBtn : public BASE
{
public:
	CDialogMinTrayBtn();
	CDialogMinTrayBtn(LPCTSTR lpszTemplateName, CWnd* pParentWnd = NULL);
	CDialogMinTrayBtn(UINT nIDTemplate, CWnd* pParentWnd = NULL);
	virtual ~CDialogMinTrayBtn();

	void MinTrayBtnShow();
	void MinTrayBtnHide();
	BOOL MinTrayBtnIsVisible() const { return m_bMinTrayBtnVisible; }

	void MinTrayBtnEnable();
	void MinTrayBtnDisable();
	BOOL MinTrayBtnIsEnabled() const { return m_bMinTrayBtnEnabled; }

	void SetWindowText(LPCTSTR lpszString);

	static CThemeHelperST	m_themeHelper;

protected:
	virtual BOOL OnInitDialog();
	afx_msg void OnNcPaint();
	afx_msg BOOL OnNcActivate(BOOL bActive);
#if _MFC_VER>=0x0800
	afx_msg LRESULT OnNcHitTest(CPoint point);
#else
	afx_msg UINT OnNcHitTest(CPoint point);
#endif
	afx_msg void OnNcLButtonDown(UINT nHitTest, CPoint point);
	afx_msg void OnNcRButtonDown(UINT nHitTest, CPoint point);
	afx_msg void OnMouseMove(UINT nFlags, CPoint point);
	afx_msg void OnLButtonUp(UINT nFlags, CPoint point);
	afx_msg void OnTimer(UINT_PTR nIDEvent);
	afx_msg LRESULT _OnThemeChanged();
	DECLARE_MESSAGE_MAP()

private:
	void MinTrayBtnInit();
	void MinTrayBtnDraw();
	BOOL MinTrayBtnHitTest(CPoint point) const;
	void MinTrayBtnUpdatePosAndSize();

	void MinTrayBtnSetUp();
	void MinTrayBtnSetDown();

	const CPoint &MinTrayBtnGetPos() const { return m_MinTrayBtnPos; }
	const CSize &MinTrayBtnGetSize() const { return m_MinTrayBtnSize; }
	CRect MinTrayBtnGetRect() const { return CRect(MinTrayBtnGetPos(), MinTrayBtnGetSize()); }

	BOOL IsWindowsClassicStyle() const;
	TCHAR *GetVisualStylesXPColor();

	BOOL MinTrayBtnInitBitmap();

	BOOL (WINAPI *m_pfnTransparentBlt)(HDC, int, int, int, int, HDC, int, int, int, int, UINT);
	HMODULE		m_hMsImg32;
	CPoint		m_MinTrayBtnPos;
	CSize		m_MinTrayBtnSize;
	UINT_PTR	m_nMinTrayBtnTimerId;
	CBitmap		m_bmMinTrayBtnBitmap;
	BOOL		m_bMinTrayBtnVisible;
	BOOL		m_bMinTrayBtnEnabled;
	BOOL		m_bMinTrayBtnUp;
	BOOL		m_bMinTrayBtnCapture;
	BOOL		m_bMinTrayBtnActive;
	BOOL		m_bMinTrayBtnHitTest;
	BOOL		m_bMinTrayBtnWindowsClassicStyle;
};

#include "DialogMinTrayBtn.hpp"
@


1.8
log
@Removed unrequired __inline; Better members alignment.
@
text
@d23 1
a23 1
	~CDialogMinTrayBtn();
@


1.7
log
@Merged theme code into ThemeHelperST, remove VisualStylesXP;
Some updates from original, code cleanup and optimization;
Fixed MinTray button size and position
@
text
@d27 1
a27 1
	__inline BOOL MinTrayBtnIsVisible() const { return m_bMinTrayBtnVisible; }
d31 1
a31 1
	__inline BOOL MinTrayBtnIsEnabled() const { return m_bMinTrayBtnEnabled; }
d63 3
a65 3
	__inline const CPoint &MinTrayBtnGetPos() const { return m_MinTrayBtnPos; }
	__inline const CSize &MinTrayBtnGetSize() const { return m_MinTrayBtnSize; }
	__inline CRect MinTrayBtnGetRect() const { return CRect(MinTrayBtnGetPos(), MinTrayBtnGetSize()); }
d76 2
a83 2
	UINT_PTR	m_nMinTrayBtnTimerId;
	CBitmap		m_bmMinTrayBtnBitmap;
@


1.6
log
@minor update
@
text
@d12 1
a12 2
#define HTMINTRAYBUTTON         65
#define SC_MINIMIZETRAY         0xE000
d14 2
a15 3
#if _MSC_VER >= 1310
static BOOL (WINAPI *_TransparentBlt)(HDC, int, int, int, int, HDC, int, int, int, int, UINT);
#endif
d17 1
a17 1
template <class BASE= CDialog> class CDialogMinTrayBtn : public BASE
d20 12
a31 12
    // constructor
    CDialogMinTrayBtn();
    CDialogMinTrayBtn(LPCTSTR lpszTemplateName, CWnd* pParentWnd = NULL);
    CDialogMinTrayBtn(UINT nIDTemplate, CWnd* pParentWnd = NULL);

    // methods
    void MinTrayBtnShow();
    void MinTrayBtnHide();
    BOOL MinTrayBtnIsVisible() const;
    void MinTrayBtnEnable();
    void MinTrayBtnDisable();
    BOOL MinTrayBtnIsEnabled() const;
d35 2
d38 13
a50 10
    // messages
    virtual BOOL OnInitDialog();
    afx_msg void OnNcPaint();
    afx_msg BOOL OnNcActivate(BOOL bActive);
    afx_msg UINT OnNcHitTest(CPoint point);
    afx_msg void OnNcLButtonDown(UINT nHitTest, CPoint point);
    afx_msg void OnNcRButtonDown(UINT nHitTest, CPoint point);
    afx_msg void OnMouseMove(UINT nFlags, CPoint point);
    afx_msg void OnLButtonUp(UINT nFlags, CPoint point);
    afx_msg void OnTimer(UINT_PTR nIDEvent);
d52 1
a52 1
    DECLARE_MESSAGE_MAP()
d55 11
a65 12
    // internal methods
    void MinTrayBtnInit();
    void MinTrayBtnDraw();
    BOOL MinTrayBtnHitTest(CPoint point) const;
    void MinTrayBtnUpdatePosAndSize();

    void MinTrayBtnSetUp();
    void MinTrayBtnSetDown();

    const CPoint &MinTrayBtnGetPos() const;
    const CSize &MinTrayBtnGetSize() const;
    CRect MinTrayBtnGetRect() const;
d67 2
a68 2
    BOOL IsWindowsClassicStyle() const;
	INT GetVisualStylesXPColor() const;
d72 13
a84 16
    // data members
    CPoint m_MinTrayBtnPos;
    CSize  m_MinTrayBtnSize;
    BOOL   m_bMinTrayBtnVisible; 
    BOOL   m_bMinTrayBtnEnabled; 
    BOOL   m_bMinTrayBtnUp;
    BOOL   m_bMinTrayBtnCapture;
    BOOL   m_bMinTrayBtnActive;
    BOOL   m_bMinTrayBtnHitTest;
    UINT_PTR m_nMinTrayBtnTimerId;
	CBitmap m_bmMinTrayBtnBitmap;
	BOOL	m_bMinTrayBtnWindowsClassicStyle;
	static const TCHAR *m_pszMinTrayBtnBmpName[];
#if _MSC_VER < 1310	
	static BOOL (WINAPI *_TransparentBlt)(HDC, int, int, int, int, HDC, int, int, int, int, UINT);
#endif
a86 25
template <class BASE> inline const CPoint &CDialogMinTrayBtn<BASE>::MinTrayBtnGetPos() const
{
    return m_MinTrayBtnPos;
}

template <class BASE> inline const CSize &CDialogMinTrayBtn<BASE>::MinTrayBtnGetSize() const
{
    return m_MinTrayBtnSize;
}

template <class BASE> inline CRect CDialogMinTrayBtn<BASE>::MinTrayBtnGetRect() const
{
    return CRect(MinTrayBtnGetPos(), MinTrayBtnGetSize());
}

template <class BASE> inline BOOL CDialogMinTrayBtn<BASE>::MinTrayBtnIsVisible() const
{
    return m_bMinTrayBtnVisible;
}

template <class BASE> inline BOOL CDialogMinTrayBtn<BASE>::MinTrayBtnIsEnabled() const
{
    return m_bMinTrayBtnEnabled;
}

a87 1

@


1.5
log
@*** empty log message ***
@
text
@d81 1
@


1.4
log
@unicode cleanup
@
text
@d15 4
d82 1
d84 1
@


1.3
log
@minimize to tray button v4a, updated connections control panel
@
text
@d77 1
a77 1
	static const CHAR *m_pszMinTrayBtnBmpName[];
@


1.2
log
@upgrade to 26d, fixes, extended reask, more upload parts seen, more crash fixes
@
text
@d3 1
a3 1
//  MFC CDialog with minimize to systemtray button (0.03a)
d7 1
a7 1
//  zegzav - 31/12/2002 - eMule project (http://www.emule-project.net)
d44 1
d62 3
d76 3
@


1.2.2.1
log
@v1a upgrade
@
text
@d3 1
a3 1
//  MFC CDialog with minimize to systemtray button (0.04a)
d7 1
a7 1
//  zegzav - 2002,2003 - eMule project (http://www.emule-project.net)
a43 1
	afx_msg LRESULT _OnThemeChanged();
a60 3
	INT GetVisualStylesXPColor() const;

	BOOL MinTrayBtnInitBitmap();
a71 3
	CBitmap m_bmMinTrayBtnBitmap;
	static const CHAR *m_pszMinTrayBtnBmpName[];
	static BOOL (WINAPI *_TransparentBlt)(HDC, int, int, int, int, HDC, int, int, int, int, UINT);
@


1.1
log
@*** empty log message ***
@
text
@d3 1
a3 1
//  MFC CDialog with minimize to systemtray button (0.03)
d30 2
@


1.1.4.1
log
@updating this branch...
@
text
@@

