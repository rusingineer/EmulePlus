head	1.5;
access;
symbols
	PublicRelease_1_2e:1.5
	Interim_Release_1-2e_RC1:1.5
	PublicRelease_1_2d:1.4
	Interim_Release_1-2d_RC1:1.4
	Interim_Release_1-2d_beta1:1.4;
locks; strict;
comment	@ * @;


1.5
date	2008.06.27.02.08.10;	author aw3;	state Exp;
branches;
next	1.4;

1.4
date	2008.01.01.11.01.06;	author eklmn;	state Exp;
branches;
next	1.3;

1.3
date	2007.12.12.20.15.32;	author eklmn;	state Exp;
branches;
next	1.2;

1.2
date	2007.12.05.21.59.51;	author eklmn;	state Exp;
branches;
next	1.1;

1.1
date	2007.12.01.10.38.07;	author eklmn;	state Exp;
branches;
next	;


desc
@@


1.5
log
@WebServer: fixed inserting several ed2k-links {L_ignorant}.
@
text
@//	This file is part of eMule Plus
//
//	This program is free software; you can redistribute it and/or
//	modify it under the terms of the GNU General Public License
//	as published by the Free Software Foundation; either
//	version 2 of the License, or (at your option) any later version.
//
//	This program is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU General Public License for more details.
//
//	You should have received a copy of the GNU General Public License
//	along with this program; if not, write to the Free Software
//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
//	Copyright (C) 2007 Eklmn ( eklmn@@users.sourceforge.net / http://www.emule-project.net )
#pragma once

typedef enum ECodingFormat
{
	cfLocalCodePage,
	cfUTF8,
	cfUTF8withBOM
};

typedef enum ETextFileFormat
{
	tffUnknown,
	tffANSI,
	tffUnicode,
	tffUTF8
};

#define HAS_BOM(pBuffer) ((*(uint32*)(pBuffer)&0x00FFFFFFul) == 0x00BFBBEFul)

void ReadMB2Str(ECodingFormat eCF, CString *pstrTarget, CFile &file, unsigned dwLength);
void WriteStr2MB(ECodingFormat eCF, const CString &strSrc, CFile &file);
int MB2Str(ECodingFormat eCF, CString *pstrTarget, const char *pchSource, int iLength = -1);
int MB2Str(ECodingFormat eCF, CString *pstrTarget, const CStringA &strSrc);
int Str2MB(ECodingFormat eCF, CStringA *pstrTarget, const CString &strSrc);
int Str2MB(ECodingFormat eCF, CStringA *pstrTarget, LPCTSTR pchSrc, int iLength = -1);
CString Ed2kURIEncode(const CString &strSource);
CString URLEncode(const CString &strSource);
CString URLDecode(const CString &strURL, bool bAllowCR = false);
bool IsUTF8Required(LPCTSTR pchStr);
bool IsUTF8(LPCSTR pchStr);
ETextFileFormat GetTextFileFormat(LPCTSTR pcFile);
@


1.4
log
@minor unification of the conversion interface
@
text
@a19 2
#include "types.h"

d45 1
a45 1
CString URLDecode(const CString &strURL);
@


1.3
log
@added unicode support for log files (emule, debug, upload, download, status, backup)
@
text
@d42 2
a43 2
void MB2Str(ECodingFormat eCF, CString *pstrTarget, const CStringA &strSrc);
void Str2MB(ECodingFormat eCF, CStringA *pstrTarget, const CString &strSrc);
@


1.2
log
@splited the functions for ed2k link and URL generation
@
text
@d29 8
d50 1
@


1.1
log
@unicode prepararions:
1) added the code for conversion
2) unicode support for ini files
3) unicode support for URL en(de)coding
4) statistic output in UTF8 format
@
text
@d37 1
@

