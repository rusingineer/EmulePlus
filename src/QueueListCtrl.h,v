head	1.37;
access;
symbols
	PublicRelease_1_2e:1.36
	Interim_Release_1-2e_RC1:1.36
	PublicRelease_1_2d:1.34
	Interim_Release_1-2d_RC1:1.34
	Interim_Release_1-2d_beta1:1.33
	PublicRelease_1_2c:1.33
	Interim_Release_1-2c_RC1:1.33
	Interim_Release_1-2c_beta1:1.33
	PublicRelease_1_2b:1.33
	Interim_Release_1-2b_RC1:1.33
	PublicRelease_1_2a:1.31
	Interim_Release_1-2a_RC1:1.31
	Interim_Release_1-2a_beta2:1.31
	Interim_Release_1-2a_beta1:1.31
	PublicRelease_1_2:1.31
	Interim_Release_1-2_RC1:1.31
	Interim_Release_1-2_beta1:1.31
	PublicRelease_1_1g:1.31
	Interim_Release_1-1g_RC3:1.31
	Interim_Release_1-1g_RC2:1.31
	Interim_Release_1-1g_RC1:1.31
	Interim_Release_1-1g_beta2:1.31
	Interim_Release_1-1g_beta1:1.31
	PublicRelease_1_1f:1.31
	Interim_Release_1-1f_RC1:1.31
	PublicRelease_1_1e:1.31
	Interim_Release_1-1e_RC2:1.31
	Interim_Release_1-1e_RC1:1.31
	Interim_Release_1-1e_beta1:1.31
	PublicRelease_1_1d:1.31
	Interim_Release_1-1d_RC1:1.31
	PublicRelease_1_1c:1.31
	Interim_Release_1-1c_RC1:1.31
	Interim_Release_1-1c_beta2:1.31
	Interim_Release_1-1c_beta1:1.31
	PublicRelease_1_1b:1.31
	Interim_Release_1-1b_RC1:1.31
	PublicRelease_1_1a:1.31
	Interim_Release_1-1a_RC2:1.31
	Interim_Release_1-1a_RC1:1.31
	Interim_Release_1-1a_beta2:1.31
	Interim_Release_1-1a_beta1:1.31
	PublicRelease_1_1:1.31
	Interim_Release_1-1_beta1:1.31
	PublicRelease_1o:1.30
	Interim_Release_1o_RC1:1.30
	Interim_Release_1o_beta1:1.30
	PublicRelease_1n:1.29
	Interim_Release_1n_RC2:1.29
	Interim_Release_1n_RC1:1.29
	Interim_Release_1n_beta2:1.29
	Interim_Release_1n_beta1:1.27
	PublicRelease_1m:1.26
	Interim_Release_1m_beta1:1.26
	PublicRelease_1l:1.26
	Interim_Release_1l_RC3:1.26
	Interim_Release_1l_RC2:1.26
	Interim_Release_1l_RC1:1.25
	Interim_Release_1l_beta2:1.25
	Interim_Release_1l_beta1:1.25
	PublicRelease_1k:1.20
	Interim_Release_1k_RC4:1.20
	Interim_1k_RC3:1.20
	Interim_1k_RC2:1.20
	Interim_Release_1k_RC1:1.20
	Interim_Release_1k_beta5:1.20
	Intrerim_Release_1k_beta4:1.20
	Interim_Release_1k_beta1:1.20
	PublicRelease_1j:1.20
	Interim_Release_1J_RC3:1.20
	Interim_Release_1j_RC3:1.20
	Interim_Release_1j_RC2:1.19
	Interim_Release_1j_RC1:1.19
	Interim_Release_1j_beta2:1.19
	Interim_Release_1j_beta1:1.19
	PublicRelease_1i:1.19
	Interim_Release_1i_RC6:1.19
	Interim_Release_1i_RC3:1.19
	Interim_Release_1i_RC2:1.19
	Interim_Release_1i_RC1:1.18
	Interim_Release_1i_beta3:1.18
	Interim_Release_1i_beta2:1.18
	Interim_Release_1i_beta1:1.16
	PublicRelease_1h:1.10
	Interim_Release_1h_rc2:1.10
	Interim_Release_1h_RC1:1.9
	Interim_Release_1h_beta2:1.9
	Interim_Release_1h_beta1_now:1.9
	Interim_Release_1h_beta1:1.9
	PublicRelease_1g:1.9
	Interim_Release_1g_RC6_Final:1.9
	Interim_Release_1g_RC6:1.9
	Interim_Release_1g_RC5:1.9
	Interim_Release_1g_RC4:1.9
	Interim_Release_1g_RC3:1.9
	Interim_Release_1g_beta2:1.9
	Interim_Release_1g_beta1:1.9
	Interim_Release_1f_RC4:1.9
	Interim_Release_1f_RC3:1.9
	Interim_Release_1f_RC2:1.8
	Interim_Release_1f_RC:1.8
	Interim_Release_1f_beta2:1.8
	Interim_Release_1f_beta1:1.8
	PublicRelease_1e:1.8
	Interim_Release_1e_RC2:1.8
	Interim_Release_1e_RC:1.8
	Interim_Release_1e_beta3:1.8
	Interim_Release_1e_beta2:1.8
	Interim_Release_1e_beta2_before_kuchin:1.8
	Interim_Release_1e_beta1:1.8
	PublicRelease_1c:1.8
	featurestest:1.8.0.4
	Interim_Release_1c_RC:1.8
	Interim_Release_1c_beta2:1.8
	Interim_Release_1c_beta1:1.8
	threaded_downloadqueue:1.8.0.2
	PublicRelease_1b:1.6
	Interim_Release_1b_beta2:1.6
	Interim_Release_1b_beta1:1.6
	proxydeadlake:1.6.0.4
	PublicRelease_1a:1.6
	Interim_Release_1a_beta2:1.6
	BerkeleyDb:1.6.0.2
	Interim_Release_1a_beta1:1.6
	PublicRelease_1:1.5
	goldfish:1.5
	eMulePlus_1_RC2:1.5
	eMulePlus_26b_1RC1:1.5
	PreRelease_26b_i0e:1.5
	before_26d_merge:1.5
	Interim_Release_26b_i0d:1.5
	Interim_Release_26b_i0c:1.5
	Interim_Release_26b_i0b:1.5
	Interim_Release_26b_i0a:1.5
	systraydlg:1.3.0.4
	plus26based:1.3.0.2
	Interim_Release_25b_i0b:1.3
	Proxy_Dev:1.3
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.37
date	2009.05.14.03.10.30;	author aw3;	state Exp;
branches;
next	1.36;

1.36
date	2008.11.03.05.56.16;	author aw3;	state Exp;
branches;
next	1.35;

1.35
date	2008.09.29.04.29.59;	author aw3;	state Exp;
branches;
next	1.34;

1.34
date	2008.03.29.13.32.40;	author eklmn;	state Exp;
branches;
next	1.33;

1.33
date	2006.11.17.05.26.12;	author aw3;	state Exp;
branches;
next	1.32;

1.32
date	2006.11.16.11.57.00;	author eklmn;	state Exp;
branches;
next	1.31;

1.31
date	2004.09.30.19.09.31;	author aw3;	state Exp;
branches;
next	1.30;

1.30
date	2004.09.12.20.40.52;	author aw3;	state Exp;
branches;
next	1.29;

1.29
date	2004.08.06.17.00.46;	author eklmn;	state Exp;
branches;
next	1.28;

1.28
date	2004.07.24.06.56.43;	author aw3;	state Exp;
branches;
next	1.27;

1.27
date	2004.07.18.12.20.31;	author eklmn;	state Exp;
branches;
next	1.26;

1.26
date	2004.06.01.22.31.03;	author aw3;	state Exp;
branches;
next	1.25;

1.25
date	2004.05.05.15.38.39;	author netwolf1;	state Exp;
branches;
next	1.24;

1.24
date	2004.04.29.11.59.45;	author netwolf1;	state Exp;
branches;
next	1.23;

1.23
date	2004.04.26.14.08.33;	author katsyonak;	state Exp;
branches;
next	1.22;

1.22
date	2004.04.25.08.33.01;	author dongato;	state Exp;
branches;
next	1.21;

1.21
date	2004.04.25.06.03.19;	author katsyonak;	state Exp;
branches;
next	1.20;

1.20
date	2004.01.19.18.21.28;	author dropf;	state Exp;
branches;
next	1.19;

1.19
date	2003.11.17.14.44.37;	author kuchin;	state Exp;
branches;
next	1.18;

1.18
date	2003.10.15.03.51.45;	author morevit;	state Exp;
branches;
next	1.17;

1.17
date	2003.10.08.15.39.48;	author morevit;	state Exp;
branches;
next	1.16;

1.16
date	2003.10.04.00.48.37;	author morevit;	state Exp;
branches;
next	1.15;

1.15
date	2003.10.03.23.18.21;	author morevit;	state Exp;
branches;
next	1.14;

1.14
date	2003.10.03.13.04.36;	author morevit;	state Exp;
branches;
next	1.13;

1.13
date	2003.09.29.14.55.46;	author morevit;	state Exp;
branches;
next	1.12;

1.12
date	2003.09.29.02.57.43;	author dongato;	state Exp;
branches;
next	1.11;

1.11
date	2003.09.28.13.55.07;	author dongato;	state Exp;
branches;
next	1.10;

1.10
date	2003.09.14.13.48.42;	author dongato;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.20.20.46.31;	author netwolf1;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.14.15.49.24;	author partyckip;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	2003.03.14.09.45.24;	author lord_kiron;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.22.16.22.35;	author obaldin;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.09.23.06.24;	author obaldin;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.09.18.39.42;	author kuchin;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.02.03.39.55;	author cax2;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2003.02.01.14.45.39;	author dongato;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.18.21.22;	author cax2;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.01.28.16.54.24;	author cax2;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2003.02.02.02.36.28;	author cax2;	state Exp;
branches;
next	;

1.3.2.1
date	2003.02.05.01.58.42;	author obaldin;	state Exp;
branches;
next	;

1.8.4.1
date	2003.03.24.09.39.44;	author recdvst;	state Exp;
branches;
next	;


desc
@@


1.37
log
@Save sorting directions for all GUI lists; Unified list sort initialization and click processing;
Simplified list arrow configuration interface.
@
text
@//this file is part of eMule
//Copyright (C)2002 Merkur ( merkur-@@users.sourceforge.net / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the GNU General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#pragma once

#include "MuleListCtrl.h"
#include "Loggable.h"
#include <vector>

#ifndef USRMSG_SWITCHUPLOADLIST
#define USRMSG_SWITCHUPLOADLIST	WM_USER + 12
#endif

enum EnumClientFilter
{
	CLI_FILTER_NONE		= 0,
	CLI_FILTER_BANNED	= 1,
	CLI_FILTER_FRIEND	= 2,
	CLI_FILTER_CREDIT	= 3
};

class CUpDownClient;

class CQueueListCtrl : public CMuleListCtrl, public CLoggable
{
	DECLARE_DYNAMIC(CQueueListCtrl)

public:
	CQueueListCtrl();
	virtual ~CQueueListCtrl();
	virtual void DrawItem(LPDRAWITEMSTRUCT lpDrawItemStruct);
	void	Init();
	void	AddClient(CUpDownClient* pClient);
	void	RemoveClient(CUpDownClient* client);
	void	UpdateClient(CUpDownClient* client);
	void	Localize();
	void	ShowFilteredList();
	int		GetClientFilterType(CUpDownClient* client);
	int		m_iClientFilter;
	void	ShowSelectedUserDetails();

	virtual BOOL OnCommand(WPARAM wParam,LPARAM lParam );
	virtual BOOL PreTranslateMessage(MSG* pMsg);

	afx_msg void OnNMClick(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void OnNMDblclkQueuelist(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void OnKeyUp(UINT nChar, UINT nRepCnt, UINT nFlags);

protected:
	static int CALLBACK SortProc(LPARAM lParam1, LPARAM lParam2, LPARAM lParamSort);
	afx_msg void OnContextMenu(CWnd* pWnd, CPoint point);
	afx_msg void OnGetDispInfo(NMHDR* pNMHDR, LRESULT* pResult);

	virtual void OnNMDividerDoubleClick(NMHEADER *pNMHDR);
	virtual BOOL OnWndMsg(UINT iMessage, WPARAM wParam, LPARAM lParam, LRESULT *pResult);

	DECLARE_MESSAGE_MAP()

private:
	typedef vector<CUpDownClient*>		ClientVector;

	int			m_iColumnMaxWidths[QLCOL_NUMCOLUMNS];
	int			m_iMeasuringColumn;
	ClientVector*		m_pvecDirtyClients;

private:
	void RefreshInfo(void);
	bool AddDirtyClient(CUpDownClient* pClientItem);
	ClientVector* GetDirtyClients();
};
@


1.36
log
@Simplified column resize interface.
@
text
@a48 1
	void	SortInit(int sortCode);
a63 1
	afx_msg	void OnColumnClick( NMHDR* pNMHDR, LRESULT* pResult);
a74 1
	bool			m_bSortAscending[QLCOL_NUMCOLUMNS];
@


1.35
log
@Local class functions were made private; Removed unrequired/double includes.
@
text
@d69 2
a70 2
	virtual BOOL OnNMDividerDoubleClick(NMHEADER* pNMHDR, LRESULT* pResult);
	virtual BOOL OnWndMsg(UINT iMessage,WPARAM wParam, LPARAM lParam, LRESULT *pResult);
@


1.34
log
@removed useless methods
@
text
@d17 1
a18 3
#pragma once
#include <sys/timeb.h>
#include "types.h"
a34 1
// CQueueListCtrl
d57 6
d73 1
d81 2
a82 5
public:
	afx_msg void OnNMClick(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void OnNMDblclkQueuelist(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void OnKeyUp(UINT nChar, UINT nRepCnt, UINT nFlags);
	virtual BOOL PreTranslateMessage(MSG* pMsg);
@


1.33
log
@Rolled back "don't process invisible GUI lists" - reason: current list positions and visible view regions are not preserved.
@
text
@a80 2
	afx_msg BOOL OnEraseBkgnd(CDC* pDC);
	virtual BOOL OnChildNotify(UINT message, WPARAM wParam, LPARAM lParam, LRESULT* pLResult);
@


1.32
log
@don't process invisible GUI lists
@
text
@a59 2
	virtual BOOL ShowWindow(int iCmdShow);

a72 1
	bool 			m_bIsVisible;
@


1.31
log
@Preferences storage reorganization and minor optimization.
@
text
@d60 2
d75 1
@


1.30
log
@Removed old unused code.
@
text
@d34 1
a34 21
	CLI_FILTER_CREDIT	= 3,
};

enum EnumUploadQueueListColumns
{
	QLCOL_USERNAME = 0,
	QLCOL_FILENAME,
	QLCOL_FILEPRIORITY,
	QLCOL_PARTS,
	QLCOL_PROGRESS,
	QLCOL_QLRATING,
	QLCOL_SCORE,
	QLCOL_SFRATIO,
	QLCOL_RFRATIO,
	QLCOL_TIMESASKED,
	QLCOL_LASTSEEN,
	QLCOL_ENTEREDQUEUE,
	QLCOL_BANNED,
	QLCOL_COUNTRY,

	QLCOL_NUMCOLUMNS
@


1.29
log
@SSWQ
@
text
@a72 1
	DWORD	m_dwSortTime;
@


1.28
log
@Faster client icon drawing in the lists;
Unified processing of client icon images; Unused methods are removed.
@
text
@d69 1
a69 1
	void	AddClient(CUpDownClient* client, bool reset = true);
d106 1
a106 2
	void PostRefreshMessage();
	void AddDirtyClient(CUpDownClient* pClientItem);
@


1.27
log
@1) corrected default toolbar definition
2) improved processing of the username by anti-leecher feature
3) unified async GUI updade of Upload, Queue & Client lists
@
text
@a36 16
enum EnumUploadQueueListIcons
{
	QL_ICON_NORMAL = 0,
	QL_ICON_COMPROT,
	QL_ICON_MLDONKEY,
	QL_ICON_EDONKEYHYBRID,
	QL_ICON_CREDIT_ONLY,
	QL_ICON_FRIEND_ONLY,
	QL_ICON_BANNED_ONLY,
	QL_ICON_UNKNOWN,
	QL_ICON_AMULE,
	QL_ICON_LMULE,
	QL_ICON_SHAREAZA,
	QL_ICON_SECUREHASH,
};

d54 1
a54 1
	QLCOL_NUMCOLUMNS,
a71 2
	void	Hide() {ShowWindow(SW_HIDE);}
	void	Show() {ShowWindow(SW_SHOW);}
a80 2

	CImageList 		m_imageList;
d94 1
a94 1
	bool			m_bSortAscending[QLCOL_NUMCOLUMNS];	 
a108 1

a109 1

@


1.26
log
@Add aMule client support;
CDonkey client support is eliminated.
@
text
@d23 1
d112 2
d115 3
a117 5
	UINT_PTR		m_hTimer;	// Barry - Refresh the queue every X seconds
	int				m_iColumnMaxWidths[QLCOL_NUMCOLUMNS];
	int				m_iMeasuringColumn;

	static void CALLBACK QueueUpdateTimer(HWND hwnd, UINT uiMsg, UINT idEvent, DWORD dwTime);
d120 1
a120 1
afx_msg void OnNMDblclkQueuelist(NMHDR *pNMHDR, LRESULT *pResult);
a121 1
	void RefreshInfo(void);
d125 5
@


1.25
log
@Middle mouse button click opens details of selected client or file
@
text
@d46 1
a46 1
	QL_ICON_CDONKEY,
@


1.24
log
@'Open containing folder' added to download list context menu + minor changes
@
text
@d95 1
@


1.23
log
@added tooltips in On Queue & Known Clients lists
@
text
@d89 2
a90 2
	void	SortInit(int sortCode);	//sortdlg Cax2
	DWORD	m_dwSortTime; //sortdlg Cax2
a91 2

	//DonGato: show filtered list of clients
d118 1
a118 3
	/**AK start**/
	afx_msg void OnNMDblclkQueuelist(NMHDR *pNMHDR, LRESULT *pResult);
	/**AK finish**/
@


1.22
log
@Please, DO NOT alter column order. This messes with users column customization and don't bring a standard as people likings are different.
@
text
@d99 2
a112 1
	CImageList 		m_imageList;
@


1.21
log
@Added "Country" column in Uploads/On Queue/Known Clients lists
@
text
@a54 1
	QLCOL_COUNTRY,
d67 1
@


1.20
log
@Some corrections in shortcut management code to keep new engine hierarchy (thanks to eklmn ;-))
@
text
@d55 1
@


1.19
log
@Fix for bug #459
Crash on right click
@
text
@d125 1
@


1.18
log
@DownloadListCtrl rewrite.
Changed Category ID types to an enumeration.
More async update work.
The usual formatting, comments, and name changes.
@
text
@a20 1
#include "titlemenu.h"
a110 2
	CTitleMenu		m_menuClient;
	CMenu			m_menuFilter;
@


1.17
log
@Formatting, comments, and name changes. Factored various UI update methods out and modified to use async. messaging instead of sync. call.
@
text
@d86 1
a86 1
	void	RefreshClient(CUpDownClient* client);
@


1.16
log
@Formatting, comments, and name changes.
@
text
@d106 1
@


1.15
log
@Formatting, comments, and name changes.
Fixed column resizing on double-click.
@
text
@d88 1
a88 1
	void	Visable() {ShowWindow(SW_SHOW);}
@


1.14
log
@Formatting, comments, and name changes.
@
text
@d29 2
a30 1
enum EClientFilter{
d37 35
d104 3
d109 8
a116 6
	bool		asc_sort[13];	 
	CImageList 	imagelist;
	CTitleMenu	m_menuClient;
	CMenu		m_FilterMenu; //DonGato: show filtered list of clients
	// Barry - Refresh the queue every X seconds
	UINT_PTR m_hTimer;
@


1.13
log
@Formatting, comments, and name changes.
@
text
@d54 1
a54 1
	DWORD	m_sortTime; //sortdlg Cax2
d72 1
a72 1
	CTitleMenu	m_ClientMenu;
@


1.12
log
@fix for errors on removing a file when no space on Temp disk (#0000284)
fix for queue filtering (forgot that the list is updated :P)
@
text
@d87 1
@


1.11
log
@Fix for forced sharing (root dirs)
Added filtering to GUI queue
@
text
@d59 1
@


1.10
log
@Fix for lists navigation [from official]
@
text
@d29 7
d57 4
d69 4
a72 3
	bool		 asc_sort[13];	 
	CImageList imagelist;
	CTitleMenu	   m_ClientMenu;
a85 2


@


1.9
log
@minor fixes and improvements
@
text
@d55 1
@


1.8
log
@converted to new logging method
@
text
@d54 1
a54 1
	afx_msg void OnNMRclick(NMHDR *pNMHDR, LRESULT *pResult);
@


1.8.4.1
log
@27c
@
text
@d54 1
a54 1
	afx_msg void OnContextMenu(CWnd* pWnd, CPoint point);
@


1.7
log
@*** empty log message ***
@
text
@d23 1
d32 1
a32 1
class CQueueListCtrl : public CMuleListCtrl
@


1.6
log
@the famous zz upload system! :)
@
text
@d69 2
@


1.5
log
@some icons frm the 26 branch
@
text
@d40 1
a40 1
	void	AddClient(CUpDownClient* client);
@


1.4
log
@Merge from plus26based branch (without new sockets code yet)
@
text
@d38 1
a47 1
	virtual void DrawItem(LPDRAWITEMSTRUCT lpDrawItemStruct); // UUU
@


1.3
log
@bugfixes & control panel updates
@
text
@d41 1
a41 1
	void	RefreshClient(CUpDownClient* client, bool updatetime = true, bool newclient = false);
@


1.3.2.1
log
@initial upgrade to .26
@
text
@a37 1
	virtual void DrawItem(LPDRAWITEMSTRUCT lpDrawItemStruct);
d41 1
a41 1
	void	RefreshClient(CUpDownClient* client);
d47 1
@


1.2
log
@Updates to Preferences (and enabling/disabling options in code because of that)
@
text
@d56 1
a56 1
	bool		 asc_sort[11];	 
d59 1
a59 1
	// Barry - Refresh the queue every 10 seconds
@


1.1
log
@*** empty log message ***
@
text
@d59 3
@


1.1.4.1
log
@updating this branch...
@
text
@@


1.1.4.2
log
@updated control panes, and assorted bugfixes
@
text
@d56 1
a56 1
	bool		 asc_sort[13];	 
a58 3
	// Barry - Refresh the queue every X seconds
	UINT_PTR m_hTimer;
	static void CALLBACK QueueUpdateTimer(HWND hwnd, UINT uiMsg, UINT idEvent, DWORD dwTime);
@


