head	1.2;
access;
symbols
	PublicRelease_1e:1.1
	Interim_Release_1e_RC2:1.1
	Interim_Release_1e_RC:1.1
	Interim_Release_1e_beta3:1.1
	Interim_Release_1e_beta2:1.1
	Interim_Release_1e_beta2_before_kuchin:1.1
	Interim_Release_1e_beta1:1.1
	PublicRelease_1c:1.1
	featurestest:1.1.0.8
	Interim_Release_1c_RC:1.1
	Interim_Release_1c_beta2:1.1
	Interim_Release_1c_beta1:1.1
	threaded_downloadqueue:1.1.0.6
	PublicRelease_1b:1.1
	Interim_Release_1b_beta2:1.1
	Interim_Release_1b_beta1:1.1
	proxydeadlake:1.1.0.4
	PublicRelease_1a:1.1
	Interim_Release_1a_beta2:1.1
	BerkeleyDb:1.1.0.2;
locks; strict;
comment	@ * @;


1.2
date	2003.04.29.16.13.29;	author kuchin;	state dead;
branches;
next	1.1;

1.1
date	2003.02.25.10.54.18;	author kuchin;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.02.25.13.42.26;	author kuchin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@/* DO NOT EDIT: automatically built by dist/s_include. */
#ifndef	_mutex_ext_h_
#define	_mutex_ext_h_

#if defined(__cplusplus)
extern "C" {
#endif

int __db_fcntl_mutex_init __P((DB_ENV *, DB_MUTEX *, u_int32_t));
int __db_fcntl_mutex_lock __P((DB_ENV *, DB_MUTEX *));
int __db_fcntl_mutex_unlock __P((DB_ENV *, DB_MUTEX *));
int __db_fcntl_mutex_destroy __P((DB_MUTEX *));
int __db_pthread_mutex_init __P((DB_ENV *, DB_MUTEX *, u_int32_t));
int __db_pthread_mutex_lock __P((DB_ENV *, DB_MUTEX *));
int __db_pthread_mutex_unlock __P((DB_ENV *, DB_MUTEX *));
int __db_pthread_mutex_destroy __P((DB_MUTEX *));
int __db_tas_mutex_init __P((DB_ENV *, DB_MUTEX *, u_int32_t));
int __db_tas_mutex_lock __P((DB_ENV *, DB_MUTEX *));
int __db_tas_mutex_unlock __P((DB_ENV *, DB_MUTEX *));
int __db_tas_mutex_destroy __P((DB_MUTEX *));
int __db_win32_mutex_init __P((DB_ENV *, DB_MUTEX *, u_int32_t));
int __db_win32_mutex_lock __P((DB_ENV *, DB_MUTEX *));
int __db_win32_mutex_unlock __P((DB_ENV *, DB_MUTEX *));
int __db_win32_mutex_destroy __P((DB_MUTEX *));
int __db_mutex_setup __P((DB_ENV *, REGINFO *, void *, u_int32_t));
void __db_mutex_free __P((DB_ENV *, REGINFO *, DB_MUTEX *));
void __db_shreg_locks_clear __P((DB_MUTEX *, REGINFO *, REGMAINT *));
void __db_shreg_locks_destroy __P((REGINFO *, REGMAINT *));
int __db_shreg_mutex_init __P((DB_ENV *, DB_MUTEX *, u_int32_t, u_int32_t, REGINFO *, REGMAINT *));
void __db_shreg_maintinit __P((REGINFO *, void *addr, size_t));

#if defined(__cplusplus)
}
#endif
#endif /* !_mutex_ext_h_ */
@


1.1
log
@*** empty log message ***
@
text
@@


1.1.2.1
log
@*** empty log message ***
@
text
@@

