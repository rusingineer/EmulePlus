head	1.3;
access;
symbols
	PublicRelease_1_2e:1.3
	Interim_Release_1-2e_RC1:1.3
	PublicRelease_1_2d:1.3
	Interim_Release_1-2d_RC1:1.3
	Interim_Release_1-2d_beta1:1.3
	PublicRelease_1_2c:1.3
	Interim_Release_1-2c_RC1:1.3
	Interim_Release_1-2c_beta1:1.3
	PublicRelease_1_2b:1.3
	Interim_Release_1-2b_RC1:1.3
	PublicRelease_1_2a:1.3
	Interim_Release_1-2a_RC1:1.3
	Interim_Release_1-2a_beta2:1.3
	Interim_Release_1-2a_beta1:1.3
	PublicRelease_1_2:1.3
	Interim_Release_1-2_RC1:1.3
	Interim_Release_1-2_beta1:1.3
	PublicRelease_1_1g:1.3
	Interim_Release_1-1g_RC3:1.3
	Interim_Release_1-1g_RC2:1.3
	Interim_Release_1-1g_RC1:1.3
	Interim_Release_1-1g_beta2:1.3
	Interim_Release_1-1g_beta1:1.3
	PublicRelease_1_1f:1.3
	Interim_Release_1-1f_RC1:1.3
	PublicRelease_1_1e:1.3
	Interim_Release_1-1e_RC2:1.3
	Interim_Release_1-1e_RC1:1.3
	Interim_Release_1-1e_beta1:1.3
	PublicRelease_1_1d:1.3
	Interim_Release_1-1d_RC1:1.3
	PublicRelease_1_1c:1.3
	Interim_Release_1-1c_RC1:1.3
	Interim_Release_1-1c_beta2:1.3
	Interim_Release_1-1c_beta1:1.3
	PublicRelease_1_1b:1.1;
locks; strict;
comment	@// @;


1.3
date	2005.01.28.20.13.43;	author kuchin;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.29.16.04.21;	author kuchin;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.26.06.50.32;	author kuchin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Corrected v2 defines, improved v2 webserver and database functionality
@
text
@// EngineTray.cpp : main source file for EngineTray.exe
//

#include "stdafx.h"

#include <atlframe.h>
#include <atlctrls.h>
#include <atldlgs.h>

#include "resource.h"

CAppModule _Module;

CEmEngine g_stEngine;

#include "GUI/MainDlg.h"

#include "WebServer/WebServerImpl.h"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int Run(LPTSTR /*lpstrCmdLine*/ = NULL, int nCmdShow = SW_SHOWDEFAULT)
{
	CMessageLoop theLoop;
	_Module.AddMessageLoop(&theLoop);

	CMainDlg dlgMain;

	if(dlgMain.Create(NULL) == NULL)
	{
		ATLTRACE(_T("Main dialog creation failed!\n"));
		return 0;
	}

	dlgMain.ShowWindow(SW_HIDE/*nCmdShow*/);

	CWebServerImpl* pWebServer = new CWebServerImpl;
	pWebServer->Start();

	int nRet = theLoop.Run();

	pWebServer->Stop();
	delete pWebServer;

	_Module.RemoveMessageLoop();

	return nRet;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int WINAPI _tWinMain(HINSTANCE hInstance, HINSTANCE /*hPrevInstance*/, LPTSTR lpstrCmdLine, int nCmdShow)
{
	HRESULT hRes = ::CoInitialize(NULL);
//	If you are running on NT 4.0 or higher you can use the following call instead to 
//	make the EXE free threaded. This means that calls come in on a random RPC thread.
//	HRESULT hRes = ::CoInitializeEx(NULL, COINIT_MULTITHREADED);
	ATLASSERT(SUCCEEDED(hRes));

//	This resolves ATL window thunking problem when Microsoft Layer for Unicode (MSLU) is used
//	(I thunk, he thank, we're gethunken?)
	::DefWindowProc(NULL, 0, 0, 0L);

	AtlInitCommonControls(ICC_BAR_CLASSES);	// Add flags to support other controls

	hRes = _Module.Init(NULL, hInstance);
	ATLASSERT(SUCCEEDED(hRes));

	int nRet = Run(lpstrCmdLine, nCmdShow);

	_Module.Term();
	::CoUninitialize();

	return nRet;
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
@


1.2
log
@There can be only one engine :-)
@
text
@d16 1
a16 1
#include ".\GUI\MainDlg.h"
d18 1
a18 1
#include "WebServer/WebServer.h"
d36 1
a36 1
	CWebServer* pWebServer = new CWebServer;
@


1.1
log
@*** empty log message ***
@
text
@d14 2
@

