head	1.2;
access;
symbols
	PublicRelease_1_2e:1.2
	Interim_Release_1-2e_RC1:1.2
	PublicRelease_1_2d:1.2
	Interim_Release_1-2d_RC1:1.2
	Interim_Release_1-2d_beta1:1.2
	PublicRelease_1_2c:1.2
	Interim_Release_1-2c_RC1:1.2
	Interim_Release_1-2c_beta1:1.2
	PublicRelease_1_2b:1.2
	Interim_Release_1-2b_RC1:1.2
	PublicRelease_1_2a:1.2
	Interim_Release_1-2a_RC1:1.2
	Interim_Release_1-2a_beta2:1.2
	Interim_Release_1-2a_beta1:1.2
	PublicRelease_1_2:1.2
	Interim_Release_1-2_RC1:1.2
	Interim_Release_1-2_beta1:1.2
	PublicRelease_1_1g:1.2
	Interim_Release_1-1g_RC3:1.2
	Interim_Release_1-1g_RC2:1.2
	Interim_Release_1-1g_RC1:1.2
	Interim_Release_1-1g_beta2:1.2
	Interim_Release_1-1g_beta1:1.2
	PublicRelease_1_1f:1.2
	Interim_Release_1-1f_RC1:1.2
	PublicRelease_1_1e:1.2
	Interim_Release_1-1e_RC2:1.2
	Interim_Release_1-1e_RC1:1.2
	Interim_Release_1-1e_beta1:1.2
	PublicRelease_1_1d:1.2
	Interim_Release_1-1d_RC1:1.2
	PublicRelease_1_1c:1.2
	Interim_Release_1-1c_RC1:1.2
	Interim_Release_1-1c_beta2:1.2
	Interim_Release_1-1c_beta1:1.2
	PublicRelease_1_1b:1.1;
locks; strict;
comment	@ * @;


1.2
date	2005.01.28.20.13.51;	author kuchin;	state Exp;
branches;
next	1.1;

1.1
date	2004.12.26.06.50.33;	author kuchin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Corrected v2 defines, improved v2 webserver and database functionality
@
text
@#pragma once

#include "WebServerImpl.h"

void StartSocketsImpl(CWebServerImpl *pThis);
void StartSockets(CWebServer *pThis);
void StopSockets();

class CWebSocket 
{
public:
	void SetParent(CWebServerImpl *);
	CWebServerImpl* m_pParent;

	class CChunk 
	{
	public:
		char* m_pData;
		char* m_pToSend;
		DWORD m_dwSize;
		CChunk* m_pNext;

		~CChunk() { if (m_pData) delete[] m_pData; }
	};

	CChunk* m_pHead; // tails of what has to be sent
	CChunk* m_pTail;

	TCHAR* m_pBuf;
	DWORD m_dwRecv;
	DWORD m_dwBufSize;
	DWORD m_dwHttpHeaderLen;
	DWORD m_dwHttpContentLen;

	bool m_bCanRecv;
	bool m_bCanSend;
	bool m_bValid;
	SOCKET m_hSocket;

	void OnReceived(void* pData, DWORD dwDataSize); // must be implemented
	void SendData(const void* pData, DWORD dwDataSize);
	void SendData(LPCTSTR szText) { SendData(szText, lstrlen(szText)); }
	void SendContent(LPCTSTR szStdResponse, const void* pContent, DWORD dwContentSize);
	void SendTextContent(LPCTSTR szText) { SendContent(_T(""), szText, lstrlen(szText)); }
	void Disconnect();

	void OnRequestReceived(TCHAR* pHeader, DWORD dwHeaderLen, TCHAR* pData, DWORD dwDataLen);
};

@


1.1
log
@*** empty log message ***
@
text
@d3 1
a3 1
#include "WebServer.h"
d5 1
d12 2
a13 2
	void SetParent(CWebServer *);
	CWebServer* m_pParent;
@

