head	1.11;
access;
symbols
	PublicRelease_1_2e:1.11
	Interim_Release_1-2e_RC1:1.11
	PublicRelease_1_2d:1.11
	Interim_Release_1-2d_RC1:1.11
	Interim_Release_1-2d_beta1:1.9
	PublicRelease_1_2c:1.7
	Interim_Release_1-2c_RC1:1.7
	Interim_Release_1-2c_beta1:1.7
	PublicRelease_1_2b:1.7
	Interim_Release_1-2b_RC1:1.7
	PublicRelease_1_2a:1.7
	Interim_Release_1-2a_RC1:1.7
	Interim_Release_1-2a_beta2:1.7
	Interim_Release_1-2a_beta1:1.7
	PublicRelease_1_2:1.6
	Interim_Release_1-2_RC1:1.6
	Interim_Release_1-2_beta1:1.6
	PublicRelease_1_1g:1.6
	Interim_Release_1-1g_RC3:1.6
	Interim_Release_1-1g_RC2:1.6
	Interim_Release_1-1g_RC1:1.6
	Interim_Release_1-1g_beta2:1.6
	Interim_Release_1-1g_beta1:1.6
	PublicRelease_1_1f:1.6
	Interim_Release_1-1f_RC1:1.6
	PublicRelease_1_1e:1.6
	Interim_Release_1-1e_RC2:1.6
	Interim_Release_1-1e_RC1:1.6
	Interim_Release_1-1e_beta1:1.6
	PublicRelease_1_1d:1.6
	Interim_Release_1-1d_RC1:1.6
	PublicRelease_1_1c:1.6
	Interim_Release_1-1c_RC1:1.6
	Interim_Release_1-1c_beta2:1.6
	Interim_Release_1-1c_beta1:1.6
	PublicRelease_1_1b:1.6
	Interim_Release_1-1b_RC1:1.6
	PublicRelease_1_1a:1.6
	Interim_Release_1-1a_RC2:1.6
	Interim_Release_1-1a_RC1:1.6
	Interim_Release_1-1a_beta2:1.6
	Interim_Release_1-1a_beta1:1.6
	PublicRelease_1_1:1.6
	Interim_Release_1-1_beta1:1.6
	PublicRelease_1o:1.6
	Interim_Release_1o_RC1:1.6
	Interim_Release_1o_beta1:1.6
	PublicRelease_1n:1.6
	Interim_Release_1n_RC2:1.6
	Interim_Release_1n_RC1:1.6
	Interim_Release_1n_beta2:1.6
	Interim_Release_1n_beta1:1.6
	PublicRelease_1m:1.6
	Interim_Release_1m_beta1:1.6
	PublicRelease_1l:1.5
	Interim_Release_1l_RC3:1.5
	Interim_Release_1l_RC2:1.5
	Interim_Release_1l_RC1:1.5
	Interim_Release_1l_beta2:1.5
	Interim_Release_1l_beta1:1.5
	PublicRelease_1k:1.5
	Interim_Release_1k_RC4:1.5
	Interim_1k_RC3:1.5
	Interim_1k_RC2:1.5
	Interim_Release_1k_RC1:1.5
	Interim_Release_1k_beta5:1.5
	Intrerim_Release_1k_beta4:1.5
	Interim_Release_1k_beta1:1.5
	PublicRelease_1j:1.5
	Interim_Release_1J_RC3:1.5
	Interim_Release_1j_RC3:1.5
	Interim_Release_1j_RC2:1.5
	Interim_Release_1j_RC1:1.5
	Interim_Release_1j_beta2:1.5
	Interim_Release_1j_beta1:1.5
	PublicRelease_1i:1.5
	Interim_Release_1i_RC6:1.5
	Interim_Release_1i_RC3:1.5
	Interim_Release_1i_RC2:1.5
	Interim_Release_1i_RC1:1.5
	Interim_Release_1i_beta3:1.5
	Interim_Release_1i_beta2:1.5
	Interim_Release_1i_beta1:1.5
	PublicRelease_1h:1.4
	Interim_Release_1h_rc2:1.4
	Interim_Release_1h_RC1:1.4
	Interim_Release_1h_beta2:1.4
	Interim_Release_1h_beta1_now:1.4
	Interim_Release_1h_beta1:1.4
	PublicRelease_1g:1.4
	Interim_Release_1g_RC6_Final:1.4
	Interim_Release_1g_RC6:1.4
	Interim_Release_1g_RC5:1.4
	Interim_Release_1g_RC4:1.4
	Interim_Release_1g_RC3:1.4
	Interim_Release_1g_beta2:1.4
	Interim_Release_1g_beta1:1.4
	Interim_Release_1f_RC4:1.3
	Interim_Release_1f_RC3:1.3
	Interim_Release_1f_RC2:1.3
	Interim_Release_1f_RC:1.3
	Interim_Release_1f_beta2:1.3
	Interim_Release_1f_beta1:1.3
	PublicRelease_1e:1.3
	Interim_Release_1e_RC2:1.3
	Interim_Release_1e_RC:1.3
	Interim_Release_1e_beta3:1.3
	Interim_Release_1e_beta2:1.3
	Interim_Release_1e_beta2_before_kuchin:1.3
	Interim_Release_1e_beta1:1.3
	PublicRelease_1c:1.3
	featurestest:1.3.0.4
	Interim_Release_1c_RC:1.3
	Interim_Release_1c_beta2:1.3
	Interim_Release_1c_beta1:1.3
	threaded_downloadqueue:1.3.0.2
	PublicRelease_1b:1.2
	Interim_Release_1b_beta2:1.2
	Interim_Release_1b_beta1:1.2
	proxydeadlake:1.2.0.4
	PublicRelease_1a:1.2
	Interim_Release_1a_beta2:1.2
	BerkeleyDb:1.2.0.2
	Interim_Release_1a_beta1:1.2
	PublicRelease_1:1.2
	goldfish:1.2
	eMulePlus_1_RC2:1.2
	eMulePlus_26b_1RC1:1.2
	PreRelease_26b_i0e:1.2
	before_26d_merge:1.2
	Interim_Release_26b_i0d:1.2
	Interim_Release_26b_i0c:1.2
	Interim_Release_26b_i0b:1.2
	Interim_Release_26b_i0a:1.2
	systraydlg:1.1.0.8
	plus26based:1.1.0.6
	Interim_Release_25b_i0b:1.1
	Proxy_Dev:1.1
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.11
date	2008.03.09.19.18.51;	author aw3;	state Exp;
branches;
next	1.10;

1.10
date	2008.03.08.21.56.27;	author eklmn;	state Exp;
branches;
next	1.9;

1.9
date	2008.02.05.06.03.05;	author aw3;	state Exp;
branches;
next	1.8;

1.8
date	2007.12.14.21.11.17;	author kush_eplus;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.25.12.18.43;	author kush_eplus;	state Exp;
branches;
next	1.6;

1.6
date	2004.06.22.02.21.30;	author katsyonak;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.22.16.26.45;	author morevit;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.26.22.14.03;	author partyckip;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.14.15.59.54;	author partyckip;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.09.18.39.41;	author kuchin;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.18.21.18;	author cax2;	state Exp;
branches
	1.1.4.1
	1.1.6.1;
next	;

1.1.4.1
date	2003.01.28.16.54.12;	author cax2;	state Exp;
branches;
next	;

1.1.6.1
date	2003.02.05.01.58.41;	author obaldin;	state Exp;
branches;
next	;


desc
@@


1.11
log
@String processing optimization; Formatting.
@
text
@//This program is free software; you can redistribute it and/or
//modify it under the terms of the GNU General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#pragma once

#include "Loggable.h"

class CIrcSocket;
class CIrcWnd;

class CIrcMain : public CLoggable
{
public:
	CIrcMain(void);
	~CIrcMain(void);
	void ParseMessage(CString strRawMessage);
	void PreParseMessage(const char *pcBuf, int iLen);
	void SendLogin();
	void Connect();
	void Disconnect(bool bIsShuttingDown = false);
	void SetConnectStatus(bool bConnected);
	void SetIRCWnd(CIrcWnd* pWndIRC)	{m_pWndIRC = pWndIRC;}
	int SendString(const CString &strSend);
	void ParsePerform();
	CString GetNick() const				{ return m_strNick; }

private:
	CIrcSocket	*m_pIrcSocket;
	CIrcWnd		*m_pWndIRC;
	CStringA	m_strPreParseBufA;
	CString		m_strUser;
	CString		m_strNick;
};
@


1.10
log
@add minimal unicode support for IRC, i.e. allow client to read UTF8 encoded messages
@
text
@d35 1
a36 1
	CString GetNick()	{return strNick;}
d40 3
a42 4
	CStringA		strPreParseBufferA;
	CString		strUser;
	CString		strNick;
	CString		strVersion;
@


1.9
log
@Faster string processing; Reduced H-file dependency; Removed useless pragma pack 1.
@
text
@d27 1
a27 1
	void PreParseMessage(CString strBuffer);
d40 1
a40 1
	CString		strPreParseBuffer;
@


1.8
log
@Remove unused but active code that can be used to retrieve IP and port of users through IRC {Bruno}
@
text
@d14 1
a15 2
#pragma once
#include "IrcSocket.h"
d18 1
d20 1
d33 1
a33 1
	int SendString(CString strSend);
@


1.7
log
@minor formatting
@
text
@a33 3
	//void ProcessLink(const CString& ed2kLink );
	uint32 SetVerify()					{iVerify = rand();
						            	return iVerify;}
a42 1
	uint32		iVerify;
@


1.6
log
@formatting / name changes
@
text
@d16 1
a16 1
#include "ircsocket.h"
@


1.5
log
@Formatting, comments, and name changes.
@
text
@d25 2
a26 2
	void ParseMessage( CString message );
	void PreParseMessage( CString buffer );
d29 4
a32 4
	void Disconnect( bool isshuttingdown = false);
	void SetConnectStatus( bool bConnected );
	void SetIRCWnd(CIrcWnd* pwndIRC)	{m_pwndIRC = pwndIRC;}
	int SendString( CString send );
d34 3
a36 3
	void ProcessLink(const CString& ed2kLink );
	uint32 SetVerify()					{verify = rand();
						            	return verify;}
d38 1
a38 1
	CString GetNick()	{return nick;}
d40 7
a46 7
	CIrcSocket*	ircsocket;
	CIrcWnd*	m_pwndIRC;
	CString		preParseBuffer;
	CString		user;
	CString		nick;
	CString		version;
	uint32		verify;
@


1.4
log
@switch to one URLDecode function
@
text
@d30 1
a30 1
	void SetConnectStatus( bool connected );
@


1.3
log
@converted to new logging method
@
text
@d34 1
a34 1
	void ProcessLink( CString ed2kLink );
@


1.2
log
@Merge from plus26based branch (without new sockets code yet)
@
text
@d17 1
d20 1
a20 1
class CIrcMain
@


1.1
log
@*** empty log message ***
@
text
@d28 1
a28 1
	void Disconnect();
@


1.1.6.1
log
@initial upgrade to .26
@
text
@d28 1
a28 1
	void Disconnect( bool isshuttingdown = false);
@


1.1.4.1
log
@updating this branch...
@
text
@@

