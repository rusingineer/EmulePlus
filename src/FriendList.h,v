head	1.9;
access;
symbols
	PublicRelease_1_2e:1.9
	Interim_Release_1-2e_RC1:1.9
	PublicRelease_1_2d:1.9
	Interim_Release_1-2d_RC1:1.9
	Interim_Release_1-2d_beta1:1.9
	PublicRelease_1_2c:1.9
	Interim_Release_1-2c_RC1:1.9
	Interim_Release_1-2c_beta1:1.9
	PublicRelease_1_2b:1.9
	Interim_Release_1-2b_RC1:1.9
	PublicRelease_1_2a:1.9
	Interim_Release_1-2a_RC1:1.9
	Interim_Release_1-2a_beta2:1.9
	Interim_Release_1-2a_beta1:1.9
	PublicRelease_1_2:1.8
	Interim_Release_1-2_RC1:1.8
	Interim_Release_1-2_beta1:1.8
	PublicRelease_1_1g:1.8
	Interim_Release_1-1g_RC3:1.8
	Interim_Release_1-1g_RC2:1.8
	Interim_Release_1-1g_RC1:1.8
	Interim_Release_1-1g_beta2:1.8
	Interim_Release_1-1g_beta1:1.8
	PublicRelease_1_1f:1.8
	Interim_Release_1-1f_RC1:1.8
	PublicRelease_1_1e:1.8
	Interim_Release_1-1e_RC2:1.8
	Interim_Release_1-1e_RC1:1.8
	Interim_Release_1-1e_beta1:1.8
	PublicRelease_1_1d:1.8
	Interim_Release_1-1d_RC1:1.8
	PublicRelease_1_1c:1.8
	Interim_Release_1-1c_RC1:1.8
	Interim_Release_1-1c_beta2:1.8
	Interim_Release_1-1c_beta1:1.8
	PublicRelease_1_1b:1.8
	Interim_Release_1-1b_RC1:1.8
	PublicRelease_1_1a:1.8
	Interim_Release_1-1a_RC2:1.8
	Interim_Release_1-1a_RC1:1.8
	Interim_Release_1-1a_beta2:1.8
	Interim_Release_1-1a_beta1:1.8
	PublicRelease_1_1:1.8
	Interim_Release_1-1_beta1:1.8
	PublicRelease_1o:1.8
	Interim_Release_1o_RC1:1.8
	Interim_Release_1o_beta1:1.8
	PublicRelease_1n:1.8
	Interim_Release_1n_RC2:1.8
	Interim_Release_1n_RC1:1.8
	Interim_Release_1n_beta2:1.8
	Interim_Release_1n_beta1:1.8
	PublicRelease_1m:1.8
	Interim_Release_1m_beta1:1.8
	PublicRelease_1l:1.8
	Interim_Release_1l_RC3:1.8
	Interim_Release_1l_RC2:1.8
	Interim_Release_1l_RC1:1.8
	Interim_Release_1l_beta2:1.8
	Interim_Release_1l_beta1:1.7
	PublicRelease_1k:1.7
	Interim_Release_1k_RC4:1.7
	Interim_1k_RC3:1.7
	Interim_1k_RC2:1.7
	Interim_Release_1k_RC1:1.7
	Interim_Release_1k_beta5:1.7
	Intrerim_Release_1k_beta4:1.7
	Interim_Release_1k_beta1:1.7
	PublicRelease_1j:1.7
	Interim_Release_1J_RC3:1.7
	Interim_Release_1j_RC3:1.7
	Interim_Release_1j_RC2:1.7
	Interim_Release_1j_RC1:1.7
	Interim_Release_1j_beta2:1.7
	Interim_Release_1j_beta1:1.7
	PublicRelease_1i:1.7
	Interim_Release_1i_RC6:1.7
	Interim_Release_1i_RC3:1.7
	Interim_Release_1i_RC2:1.7
	Interim_Release_1i_RC1:1.7
	Interim_Release_1i_beta3:1.7
	Interim_Release_1i_beta2:1.5
	Interim_Release_1i_beta1:1.5
	PublicRelease_1h:1.4
	Interim_Release_1h_rc2:1.4
	Interim_Release_1h_RC1:1.4
	Interim_Release_1h_beta2:1.4
	Interim_Release_1h_beta1_now:1.4
	Interim_Release_1h_beta1:1.4
	PublicRelease_1g:1.4
	Interim_Release_1g_RC6_Final:1.4
	Interim_Release_1g_RC6:1.4
	Interim_Release_1g_RC5:1.4
	Interim_Release_1g_RC4:1.4
	Interim_Release_1g_RC3:1.4
	Interim_Release_1g_beta2:1.4
	Interim_Release_1g_beta1:1.4
	Interim_Release_1f_RC4:1.4
	Interim_Release_1f_RC3:1.4
	Interim_Release_1f_RC2:1.4
	Interim_Release_1f_RC:1.4
	Interim_Release_1f_beta2:1.4
	Interim_Release_1f_beta1:1.4
	PublicRelease_1e:1.4
	Interim_Release_1e_RC2:1.4
	Interim_Release_1e_RC:1.4
	Interim_Release_1e_beta3:1.4
	Interim_Release_1e_beta2:1.4
	Interim_Release_1e_beta2_before_kuchin:1.4
	Interim_Release_1e_beta1:1.4
	PublicRelease_1c:1.4
	featurestest:1.4.0.2
	Interim_Release_1c_RC:1.4
	Interim_Release_1c_beta2:1.4
	Interim_Release_1c_beta1:1.3
	threaded_downloadqueue:1.3.0.2
	PublicRelease_1b:1.2
	Interim_Release_1b_beta2:1.2
	Interim_Release_1b_beta1:1.2
	proxydeadlake:1.2.0.4
	PublicRelease_1a:1.2
	Interim_Release_1a_beta2:1.2
	BerkeleyDb:1.2.0.2
	Interim_Release_1a_beta1:1.2
	PublicRelease_1:1.2
	goldfish:1.2
	eMulePlus_1_RC2:1.2
	eMulePlus_26b_1RC1:1.2
	PreRelease_26b_i0e:1.2
	before_26d_merge:1.1
	Interim_Release_26b_i0d:1.1
	Interim_Release_26b_i0c:1.1
	Interim_Release_26b_i0b:1.1
	Interim_Release_26b_i0a:1.1
	systraydlg:1.1.0.8
	plus26based:1.1.0.6
	Interim_Release_25b_i0b:1.1
	Proxy_Dev:1.1
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.9
date	2006.04.23.04.06.57;	author aw3;	state Exp;
branches;
next	1.8;

1.8
date	2004.05.19.10.34.22;	author netwolf1;	state Exp;
branches;
next	1.7;

1.7
date	2003.10.29.14.14.18;	author morevit;	state Exp;
branches;
next	1.6;

1.6
date	2003.10.26.10.54.37;	author katsyonak;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.23.19.01.33;	author netwolf1;	state Exp;
branches;
next	1.4;

1.4
date	2003.03.17.05.59.30;	author recdvst;	state Exp;
branches;
next	1.3;

1.3
date	2003.03.14.15.57.16;	author partyckip;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.17.06.50.29;	author obaldin;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.18.21.18;	author cax2;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.01.28.16.54.09;	author cax2;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Reduced H-file dependency.
@
text
@//this file is part of eMule
//Copyright (C)2002 Merkur ( merkur-@@users.sourceforge.net / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the GNU General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

#pragma once
#include "types.h"
#include "Loggable.h"

class CFriend;
class CFriendListCtrl;
class CUpDownClient;

class CFriendList : public CLoggable
{
public:
	CFriendList();
	~CFriendList();

	bool		IsAlreadyFriend(uint32 tm_dwLastUsedIP, uint32 tm_nLastUsedPort);
	void		SaveList();
	bool		LoadList();
	void		RefreshFriend(CFriend *pFriend) const;
	CFriend	   *SearchFriend(const uchar* achUserHash, uint32 m_dwIP, uint16 m_uPort) const;
	void		SetWindow(CFriendListCtrl *pctlFriendList)	{m_pctlFriendList = pctlFriendList;}
	void		ShowFriends() const;
	bool		AddFriend(CUpDownClient* toadd);
	bool		AddFriend( uchar tm_abyUserhash[16], uint32 tm_dwLastSeen, uint32 tm_dwLastUsedIP, uint32 tm_nLastUsedPort, uint32 tm_dwLastChatted, CString tm_strName, uint32 tm_dwHasHash);
	void		RemoveFriend(CFriend* todel);
	void		RemoveFriend(CUpDownClient* toadd);
	void		Process();

private:
	CTypedPtrList<CPtrList, CFriend*>	m_listFriends;
	CFriendListCtrl					   *m_pctlFriendList;
	uint32								m_nLastSaved;
};
@


1.8
log
@Prevent unwanted clients from becoming friends;
Fix for possible crash due to corrupt comment packet;
Fix for delayed remote answer to hashset request.
@
text
@a19 1
#include "friendlistctrl.h"
d22 4
d32 1
a32 1
	bool		IsAlreadyFriend( uint32 tm_dwLastUsedIP, uint32 tm_nLastUsedPort ); 
@


1.7
log
@Formatting, comments, and name changes.
@
text
@d32 2
a33 2
	void		RefreshFriend(CFriend *pFriend);
	CFriend*	LinkFriend(uchar* achUserHash, uint32 m_dwIp, uint16 m_uPort);
d35 1
a35 1
	void		ShowFriends();
@


1.6
log
@Fixed a bug where clients without an IP or hash could be added as a friends  (from official)
@
text
@d32 3
a34 3
	void		RefreshFriend(CFriend* torefresh);
	CFriend*	LinkFriend(uchar* achUserHash, uint32 m_dwIp, uint16 m_nPort);
	void		SetWindow(CFriendListCtrl* NewWnd)	{m_wndOutput = NewWnd;}
d44 1
a44 1
	CFriendListCtrl*					m_wndOutput;
@


1.5
log
@cleanup (friendslot)
@
text
@d36 2
a37 2
	void		AddFriend(CUpDownClient* toadd);
	void		AddFriend( uchar tm_abyUserhash[16], uint32 tm_dwLastSeen, uint32 tm_dwLastUsedIP, uint32 tm_nLastUsedPort, uint32 tm_dwLastChatted, CString tm_strName, uint32 tm_dwHasHash);
@


1.4
log
@various bugfixes for "friends"
@
text
@a39 1
	void		RemoveAllFriendSlots();
@


1.3
log
@converted to new logging method
@
text
@d39 1
@


1.2
log
@upgrade to 26d, fixes, extended reask, more upload parts seen, more crash fixes
@
text
@d21 1
d23 1
a23 1
class CFriendList
@


1.1
log
@*** empty log message ***
@
text
@d39 2
d44 1
@


1.1.4.1
log
@updating this branch...
@
text
@@

