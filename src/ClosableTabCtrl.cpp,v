head	1.17;
access;
symbols
	PublicRelease_1_2e:1.17
	Interim_Release_1-2e_RC1:1.17
	PublicRelease_1_2d:1.17
	Interim_Release_1-2d_RC1:1.17
	Interim_Release_1-2d_beta1:1.14
	PublicRelease_1_2c:1.13
	Interim_Release_1-2c_RC1:1.13
	Interim_Release_1-2c_beta1:1.11
	PublicRelease_1_2b:1.11
	Interim_Release_1-2b_RC1:1.11
	PublicRelease_1_2a:1.11
	Interim_Release_1-2a_RC1:1.11
	Interim_Release_1-2a_beta2:1.11
	Interim_Release_1-2a_beta1:1.11
	PublicRelease_1_2:1.11
	Interim_Release_1-2_RC1:1.11
	Interim_Release_1-2_beta1:1.11
	PublicRelease_1_1g:1.10
	Interim_Release_1-1g_RC3:1.10
	Interim_Release_1-1g_RC2:1.10
	Interim_Release_1-1g_RC1:1.10
	Interim_Release_1-1g_beta2:1.9
	Interim_Release_1-1g_beta1:1.9
	PublicRelease_1_1f:1.9
	Interim_Release_1-1f_RC1:1.9
	PublicRelease_1_1e:1.9
	Interim_Release_1-1e_RC2:1.9
	Interim_Release_1-1e_RC1:1.9
	Interim_Release_1-1e_beta1:1.9
	PublicRelease_1_1d:1.9
	Interim_Release_1-1d_RC1:1.9
	PublicRelease_1_1c:1.9
	Interim_Release_1-1c_RC1:1.9
	Interim_Release_1-1c_beta2:1.9
	Interim_Release_1-1c_beta1:1.8
	PublicRelease_1_1b:1.8
	Interim_Release_1-1b_RC1:1.8
	PublicRelease_1_1a:1.8
	Interim_Release_1-1a_RC2:1.8
	Interim_Release_1-1a_RC1:1.8
	Interim_Release_1-1a_beta2:1.8
	Interim_Release_1-1a_beta1:1.8
	PublicRelease_1_1:1.6
	Interim_Release_1-1_beta1:1.6
	PublicRelease_1o:1.6
	Interim_Release_1o_RC1:1.6
	Interim_Release_1o_beta1:1.6
	PublicRelease_1n:1.6
	Interim_Release_1n_RC2:1.6
	Interim_Release_1n_RC1:1.6
	Interim_Release_1n_beta2:1.6
	Interim_Release_1n_beta1:1.6
	PublicRelease_1m:1.6
	Interim_Release_1m_beta1:1.6
	PublicRelease_1l:1.6
	Interim_Release_1l_RC3:1.6
	Interim_Release_1l_RC2:1.6
	Interim_Release_1l_RC1:1.6
	Interim_Release_1l_beta2:1.6
	Interim_Release_1l_beta1:1.6
	PublicRelease_1k:1.5
	Interim_Release_1k_RC4:1.5
	Interim_1k_RC3:1.5
	Interim_1k_RC2:1.5
	Interim_Release_1k_RC1:1.5
	Interim_Release_1k_beta5:1.5
	Intrerim_Release_1k_beta4:1.5
	Interim_Release_1k_beta1:1.5
	PublicRelease_1j:1.5
	Interim_Release_1J_RC3:1.5
	Interim_Release_1j_RC3:1.5
	Interim_Release_1j_RC2:1.5
	Interim_Release_1j_RC1:1.5
	Interim_Release_1j_beta2:1.5
	Interim_Release_1j_beta1:1.5
	PublicRelease_1i:1.5
	Interim_Release_1i_RC6:1.5
	Interim_Release_1i_RC3:1.4
	Interim_Release_1i_RC2:1.4
	Interim_Release_1i_RC1:1.4
	Interim_Release_1i_beta3:1.4
	Interim_Release_1i_beta2:1.4
	Interim_Release_1i_beta1:1.4
	PublicRelease_1h:1.4
	Interim_Release_1h_rc2:1.4
	Interim_Release_1h_RC1:1.4
	Interim_Release_1h_beta2:1.4
	Interim_Release_1h_beta1_now:1.4
	Interim_Release_1h_beta1:1.4
	PublicRelease_1g:1.3
	Interim_Release_1g_RC6_Final:1.3
	Interim_Release_1g_RC6:1.3
	Interim_Release_1g_RC5:1.3
	Interim_Release_1g_RC4:1.3
	Interim_Release_1g_RC3:1.3
	Interim_Release_1g_beta2:1.2
	Interim_Release_1g_beta1:1.2
	Interim_Release_1f_RC4:1.2
	Interim_Release_1f_RC3:1.2
	Interim_Release_1f_RC2:1.2
	Interim_Release_1f_RC:1.2
	Interim_Release_1f_beta2:1.2
	Interim_Release_1f_beta1:1.2
	PublicRelease_1e:1.2
	Interim_Release_1e_RC2:1.2
	Interim_Release_1e_RC:1.2
	Interim_Release_1e_beta3:1.2
	Interim_Release_1e_beta2:1.2
	Interim_Release_1e_beta2_before_kuchin:1.2
	Interim_Release_1e_beta1:1.2
	PublicRelease_1c:1.2
	featurestest:1.2.0.8
	Interim_Release_1c_RC:1.2
	Interim_Release_1c_beta2:1.2
	Interim_Release_1c_beta1:1.2
	threaded_downloadqueue:1.2.0.6
	PublicRelease_1b:1.2
	Interim_Release_1b_beta2:1.2
	Interim_Release_1b_beta1:1.2
	proxydeadlake:1.2.0.4
	PublicRelease_1a:1.2
	Interim_Release_1a_beta2:1.2
	BerkeleyDb:1.2.0.2
	Interim_Release_1a_beta1:1.2
	PublicRelease_1:1.2
	goldfish:1.2
	eMulePlus_1_RC2:1.2
	eMulePlus_26b_1RC1:1.2
	PreRelease_26b_i0e:1.2
	before_26d_merge:1.2
	Interim_Release_26b_i0d:1.1
	Interim_Release_26b_i0c:1.1
	Interim_Release_26b_i0b:1.1
	Interim_Release_26b_i0a:1.1
	systraydlg:1.1.0.8
	plus26based:1.1.0.6
	Interim_Release_25b_i0b:1.1
	Proxy_Dev:1.1
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@// @;


1.17
date	2008.03.09.19.17.27;	author aw3;	state Exp;
branches;
next	1.16;

1.16
date	2008.03.08.22.48.52;	author eklmn;	state Exp;
branches;
next	1.15;

1.15
date	2008.03.03.04.38.38;	author aw3;	state Exp;
branches;
next	1.14;

1.14
date	2008.01.17.22.02.50;	author eklmn;	state Exp;
branches;
next	1.13;

1.13
date	2007.07.08.00.14.18;	author aw3;	state Exp;
branches;
next	1.12;

1.12
date	2007.04.19.03.17.56;	author aw3;	state Exp;
branches;
next	1.11;

1.11
date	2006.01.14.19.53.10;	author aw3;	state Exp;
branches;
next	1.10;

1.10
date	2005.11.27.20.31.04;	author eklmn;	state Exp;
branches;
next	1.9;

1.9
date	2005.02.02.08.03.24;	author katsyonak;	state Exp;
branches;
next	1.8;

1.8
date	2004.10.29.03.27.04;	author aw3;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.26.21.13.59;	author aw3;	state Exp;
branches;
next	1.6;

1.6
date	2004.05.04.05.54.48;	author aw3;	state Exp;
branches;
next	1.5;

1.5
date	2003.11.26.23.54.50;	author katsyonak;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.07.14.39.09;	author dongato;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.19.07.47.47;	author partyckip;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.16.22.01.46;	author lord_kiron;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.18.07.05;	author cax2;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.01.28.16.53.59;	author cax2;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Fixed newly introduced code.
@
text
@//this file is part of eMule
//Copyright (C)2002-2006 Merkur ( strEmail.Format("%s@@%s", "devteam", "emule-project.net") / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the GNU General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

#include "stdafx.h"
#include "emule.h"
#include "ClosableTabCtrl.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif


IMPLEMENT_DYNAMIC(CClosableTabCtrl, CTabCtrl)
CClosableTabCtrl::CClosableTabCtrl()
{
	static const uint16 s_auIconResID[] = { IDI_CLOSE };

	m_pImgLst.Create(16, 16, ILC_COLOR8 | ILC_MASK, ARRSIZE(s_auIconResID), 0);
	m_pImgLst.SetBkColor(CLR_NONE);
	FillImgLstWith16x16Icons(&m_pImgLst, s_auIconResID, ARRSIZE(s_auIconResID));
}

CClosableTabCtrl::~CClosableTabCtrl()
{
}

BEGIN_MESSAGE_MAP(CClosableTabCtrl, CTabCtrl)
	ON_WM_LBUTTONUP()
	ON_WM_MBUTTONUP()
	ON_WM_RBUTTONUP()
END_MESSAGE_MAP()


void CClosableTabCtrl::OnLButtonUp(UINT nFlags, CPoint point)
{
	int			iTabs = GetItemCount();
	CRect		rect;

	for (int i = 0; i < iTabs; i++)
	{
		GetItemRect(i, rect);
		rect.DeflateRect(rect.Width() - 16, 0, 0, 0);

		if (rect.PtInRect(point))
		{
			GetParent()->SendMessage(WM_CLOSETAB, (WPARAM)i);
			return; 
		}
	}
	
	CTabCtrl::OnLButtonUp(nFlags, point);
}

void CClosableTabCtrl::OnMButtonUp(UINT nFlags, CPoint point)
{
	int			iTabs = GetItemCount();
	CRect		rect;

	for (int i = 0; i < iTabs; i++)
	{
		GetItemRect(i, rect);
		if (rect.PtInRect(point))
		{
			GetParent()->SendMessage(WM_CLOSETAB, (WPARAM)i);
			return;
		}
	}

	CTabCtrl::OnMButtonUp(nFlags, point);
}

void CClosableTabCtrl::OnRButtonUp(UINT nFlags, CPoint point)
{
	int			iTabs = GetItemCount();
	CRect		rect;

	for (int i = 0; i < iTabs; i++)
	{
		GetItemRect(i, rect);
		if (rect.PtInRect(point))
		{
			GetParent()->SendMessage(WM_TAB_PROPERTIES, (WPARAM)i);
			return;
		}
	}

	CTabCtrl::OnRButtonUp(nFlags, point);
}

void CClosableTabCtrl::DrawItem(LPDRAWITEMSTRUCT lpDIS)
{
	CRect		rect = lpDIS->rcItem;
	IMAGEINFO	info;
	bool		bSelected = lpDIS->itemState & ODS_SELECTED;
	int			iTabIndex = lpDIS->itemID;

	if (iTabIndex < 0)
		return;

	TCHAR		szLabel[256];
	TC_ITEM		tci;

	tci.mask = TCIF_TEXT | TCIF_IMAGE | TCIF_STATE;
	tci.pszText = szLabel;
	tci.cchTextMax = ARRSIZE(szLabel);
	tci.dwStateMask = TCIS_HIGHLIGHTED;
	if (!GetItem(iTabIndex, &tci))
		return;

	CDC			dc;

	dc.Attach(lpDIS->hDC);

	int		iCX, iOldBkMode = dc.SetBkMode(TRANSPARENT);
	LONG	lTop = rect.top;

	iCX = ::GetSystemMetrics(SM_CXEDGE);
	rect.DeflateRect(iCX, ::GetSystemMetrics(SM_CYEDGE), iCX, 0);

	if (!g_App.m_pMDlg->m_themeHelper.IsAppThemed())
		dc.FillSolidRect(&rect, GetSysColor(COLOR_BTNFACE));

//	Draw image
	if (tci.iImage >= 0)
	{
		// Get height of image 
		m_pImgLst.GetImageInfo(0, &info);

		CRect	ImageRect(info.rcImage), rIcon = rect;

		rIcon.right -= bSelected ? 6 : 4;
		rIcon.top += 2;
		rIcon.left = rIcon.right - ImageRect.Width();
		rect.right = rIcon.left - 3;

		m_pImgLst.Draw(&dc, 0, CPoint(rIcon.left, rIcon.top), ILD_TRANSPARENT);
	}

	COLORREF	crOldColor = dc.SetTextColor((tci.dwState & TCIS_HIGHLIGHTED) ? RGB(196, 0, 0) : GetSysColor(COLOR_BTNTEXT));
	UINT		dwFormat = DT_SINGLELINE | DT_BOTTOM | DT_CENTER | DT_NOPREFIX | DT_NOCLIP;

	if (bSelected)
	{
		rect.top = lTop;
		dwFormat = DT_SINGLELINE | DT_VCENTER | DT_CENTER | DT_NOPREFIX | DT_NOCLIP;
	}
	dc.DrawText(szLabel, -1, rect, dwFormat);
	dc.SetTextColor(crOldColor);
	dc.SetBkMode(iOldBkMode);
	dc.Detach();
}

void CClosableTabCtrl::PreSubclassWindow()
{
	CTabCtrl::PreSubclassWindow();
	SetImageList(&m_pImgLst);	//required only to automatically extend tab width for image size
	ModifyStyle(0, TCS_OWNERDRAWFIXED);
#ifdef _UNICODE
//	Win9x: Explicitly set to Unicode to receive Unicode notifications.
	SendMessage(CCM_SETUNICODEFORMAT, TRUE);
#endif
}
@


1.16
log
@show client properties on right mouseclick on tab in chat window
@
text
@d103 1
a103 1
	CTabCtrl::OnMButtonUp(nFlags, point);
d105 1
@


1.15
log
@ELEMENT_COUNT -> ARRSIZE.
@
text
@d46 1
d88 17
@


1.14
log
@set Unicode message format for Win9x systems
@
text
@d34 1
a34 1
	m_pImgLst.Create(16, 16, ILC_COLOR8 | ILC_MASK, ELEMENT_COUNT(s_auIconResID), 0);
d36 1
a36 1
	FillImgLstWith16x16Icons(&m_pImgLst, s_auIconResID, ELEMENT_COUNT(s_auIconResID));
@


1.13
log
@Optimized DrawText -- no need to create temporary CString.
@
text
@d154 5
a158 1
	ModifyStyle(0, TCS_OWNERDRAWFIXED); 
@


1.12
log
@Middle mouse click closes tab (search, chat, etc.) (from original) {Towelie};
Fixed call to base class OnLButtonUp handler;
Minor optimization and formatting.
@
text
@d144 1
a144 1
	dc.DrawText(szLabel, rect, dwFormat);
@


1.11
log
@Minor formatting.
@
text
@d1 16
a16 2
// CClosableTab class definitions
// by enkeyDEV(Ottavio84)
a28 2
// CClosableTabCtrl

d45 1
a48 2
// CClosableTabCtrl message handlers

d57 1
a57 1
		rect.DeflateRect(rect.Width() - 16, 0 , 0, 0);
d66 19
a84 1
	CTabCtrl::OnLButtonDown(nFlags, point);
d111 1
a111 1
	int		iOldBkMode = dc.SetBkMode(TRANSPARENT);
d114 2
a115 1
	rect.DeflateRect(::GetSystemMetrics(SM_CXEDGE), ::GetSystemMetrics(SM_CYEDGE), ::GetSystemMetrics(SM_CXEDGE), 0);
d137 1
a137 1
	UINT		dwFormat = DT_SINGLELINE|DT_BOTTOM|DT_CENTER|DT_NOPREFIX|DT_NOCLIP;
d142 1
a142 1
		dwFormat = DT_SINGLELINE|DT_VCENTER|DT_CENTER|DT_NOPREFIX|DT_NOCLIP;
@


1.10
log
@renamed 3 variables
@
text
@d125 1
a125 1
}@


1.9
log
@Fixed closeable tabs display with themed Windows XP/2003.
@
text
@d87 1
a87 1
	if (!g_eMuleApp.m_pdlgEmule->m_themeHelper.IsAppThemed())
@


1.8
log
@Removed unused closable tab stuff to reduce used memory and GDI resources;
Set TCS_OWNERDRAWFIXED flag to tabs control resources instead of run-time modification.
@
text
@d40 4
a43 3
	int ntabs = GetItemCount();
	CRect clsbutrect;
	for(int i = 0; i < ntabs; i++)
d45 2
a46 12
		GetItemRect(i, clsbutrect);

		//clsbutrect.DeflateRect(clsbutrect.Width() - 5 - 9,  2 + 4,  4, clsbutrect.Height() - 9 - (2 + 4));	// mod. [FoRcHa]
		clsbutrect.DeflateRect(clsbutrect.Width() - 16, 0 , 0, 0);	// DonGato: better closing response
		//                     |                    |   |   |   |   |          |             |    |   |                                            
		// with of the button -|                    |   |   |   |   |          |             |    |   |
		// with of the cross -----------------------|   |   |   |   |          |             |    |   |
		// right border --------------------------------+-a |   | a-|          |             |    |   |               
		// regular border btw. top of cross and top of tab -+-b | b----------b | b---------b | b--|   |
		// empty pixels in the icon (top) ----------------------+------------c | c---------c | c------|
		// height of the button -----------------------------------------------|             |
		// height of the cross --------------------------------------------------------------|
d48 1
a48 1
		if(clsbutrect.PtInRect(point)) 
d50 1
a50 1
			GetParent()->SendMessage(WM_CLOSETAB, (WPARAM) i);
d60 6
a65 5
	CRect rect = lpDIS->rcItem;
	IMAGEINFO info;
	bool bSelected = lpDIS->itemState & ODS_SELECTED;
	int nTabIndex = lpDIS->itemID;
	if(nTabIndex < 0) 
d68 3
a70 2
	TCHAR label[64];
	TC_ITEM tci;
d72 2
a73 2
	tci.pszText = label;
	tci.cchTextMax = 63;
d75 1
a75 1
	if(!GetItem(nTabIndex, &tci)) 
d78 3
a80 3
	CDC* pDC = CDC::FromHandle(lpDIS->hDC);
	if(!pDC) 
		return;
d82 1
d85 4
a88 1
	rect.top += ::GetSystemMetrics(SM_CYEDGE);
d91 1
a91 1
	if (tci.iImage >= 0) 
d93 1
a93 1
		// Get height of image so we 
a94 1
		CRect ImageRect(info.rcImage);
d96 2
a97 1
		CRect rIcon = rect;
d103 1
a103 1
		m_pImgLst.Draw(pDC, 0, CPoint(rIcon.left, rIcon.top), ILD_TRANSPARENT);
d106 2
a107 2
	pDC->SetBkMode(TRANSPARENT);
	pDC->SetTextColor((tci.dwState & TCIS_HIGHLIGHTED) ? RGB(196, 0, 0) : GetSysColor(COLOR_BTNTEXT));
d109 1
a109 3
	UINT	dwFormat = DT_SINGLELINE|DT_BOTTOM|DT_CENTER|DT_NOPREFIX|DT_NOCLIP;

	if(bSelected)
d114 4
a117 1
	pDC->DrawText(label, rect, dwFormat);
d124 2
a125 1
}
@


1.7
log
@Faster image lists icon loading; reduced memory usage.
@
text
@a32 1
	ON_WM_CREATE()
d67 1
a67 1
void CClosableTabCtrl::DrawItem(LPDRAWITEMSTRUCT lpDIS)	// Function modified by FoRcHa
d78 1
a78 1
	tci.mask = TCIF_TEXT|TCIF_IMAGE|TCIF_STATE;
d93 2
a94 3
	// Draw image
	CImageList* pImageList = &m_pImgLst;
	if(pImageList && tci.iImage >= 0) 
d97 1
a97 1
		pImageList->GetImageInfo(0, &info);
d106 1
a106 1
		pImageList->Draw(pDC, 0, CPoint(rIcon.left, rIcon.top), ILD_TRANSPARENT);
d125 1
a125 9
	ModifyStyle(0, TCS_OWNERDRAWFIXED);
}

int CClosableTabCtrl::OnCreate(LPCREATESTRUCT lpCreateStruct)
{
	if (CTabCtrl::OnCreate(lpCreateStruct) == -1)
		return -1;
	ModifyStyle(0, TCS_OWNERDRAWFIXED);
	return 0;
@


1.6
log
@Solved display of '&' in closable tab control;
Improve image list filling; minor improvements.
@
text
@d22 1
a22 1
	m_pImgLst.Create(16, 16, ILC_COLOR8 | ILC_MASK, 0, 10);
@


1.5
log
@inactive IRC/Messages window receiving new text becomes hilighted until you select it
@
text
@d20 3
a22 1
	m_pImgLst.Create(16,16,ILC_COLOR8|ILC_MASK,0,10);
d24 1
a24 2
	m_pImgLst.Add(LoadImgLstIcon(MAKEINTRESOURCE(IDI_CLOSE),16,16));
	LoadImgLstIcon(NULL,0,0); // delete temp-icon
d43 2
a44 2
	for(int i = 0; i < ntabs; i++) 
	{			
d46 1
a46 1
				
d80 2
a81 2
	tci.pszText = label;     
	tci.cchTextMax = 63;    	
d90 2
d112 1
d114 1
a114 4
	if(tci.dwState & TCIS_HIGHLIGHTED)
		pDC->SetTextColor(RGB(196, 0, 0));
	else
		pDC->SetTextColor(GetSysColor(COLOR_BTNTEXT));
d116 1
a116 7
	if(bSelected) 
	{
		rect.top -= ::GetSystemMetrics(SM_CYEDGE);
		pDC->DrawText(label, rect, DT_SINGLELINE|DT_VCENTER|DT_CENTER);
		rect.top += ::GetSystemMetrics(SM_CYEDGE);
	} 
	else 
d118 2
a119 1
		pDC->DrawText(label, rect, DT_SINGLELINE|DT_BOTTOM|DT_CENTER);
d121 1
a136 1

@


1.4
log
@Better closing of tabs
@
text
@d78 1
a78 1
	tci.mask = TCIF_TEXT|TCIF_IMAGE;
d81 1
d109 6
a124 1

@


1.3
log
@unicode cleanup
@
text
@d46 2
a47 1
		clsbutrect.DeflateRect(clsbutrect.Width() - 9 - 4,  2 + 4,  4, clsbutrect.Height() - 9 - (2 + 4));	// mod. [FoRcHa]
@


1.2
log
@Added instrumentation for debugging memory leaks :
#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

To all .cpp files (I hope I didn't miss any one)
@
text
@d75 1
a75 1
	char label[64];
@


1.1
log
@*** empty log message ***
@
text
@d8 6
@


1.1.4.1
log
@updating this branch...
@
text
@@

