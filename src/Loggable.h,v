head	1.12;
access;
symbols
	PublicRelease_1_2e:1.12
	Interim_Release_1-2e_RC1:1.12
	PublicRelease_1_2d:1.11
	Interim_Release_1-2d_RC1:1.11
	Interim_Release_1-2d_beta1:1.11
	PublicRelease_1_2c:1.10
	Interim_Release_1-2c_RC1:1.10
	Interim_Release_1-2c_beta1:1.10
	PublicRelease_1_2b:1.10
	Interim_Release_1-2b_RC1:1.10
	PublicRelease_1_2a:1.10
	Interim_Release_1-2a_RC1:1.10
	Interim_Release_1-2a_beta2:1.10
	Interim_Release_1-2a_beta1:1.10
	PublicRelease_1_2:1.10
	Interim_Release_1-2_RC1:1.10
	Interim_Release_1-2_beta1:1.10
	PublicRelease_1_1g:1.9
	Interim_Release_1-1g_RC3:1.9
	Interim_Release_1-1g_RC2:1.9
	Interim_Release_1-1g_RC1:1.9
	Interim_Release_1-1g_beta2:1.9
	Interim_Release_1-1g_beta1:1.9
	PublicRelease_1_1f:1.9
	Interim_Release_1-1f_RC1:1.9
	PublicRelease_1_1e:1.9
	Interim_Release_1-1e_RC2:1.9
	Interim_Release_1-1e_RC1:1.9
	Interim_Release_1-1e_beta1:1.9
	PublicRelease_1_1d:1.9
	Interim_Release_1-1d_RC1:1.9
	PublicRelease_1_1c:1.9
	Interim_Release_1-1c_RC1:1.9
	Interim_Release_1-1c_beta2:1.9
	Interim_Release_1-1c_beta1:1.8
	PublicRelease_1_1b:1.8
	Interim_Release_1-1b_RC1:1.8
	PublicRelease_1_1a:1.8
	Interim_Release_1-1a_RC2:1.8
	Interim_Release_1-1a_RC1:1.8
	Interim_Release_1-1a_beta2:1.8
	Interim_Release_1-1a_beta1:1.8
	PublicRelease_1_1:1.8
	Interim_Release_1-1_beta1:1.8
	PublicRelease_1o:1.8
	Interim_Release_1o_RC1:1.8
	Interim_Release_1o_beta1:1.8
	PublicRelease_1n:1.8
	Interim_Release_1n_RC2:1.8
	Interim_Release_1n_RC1:1.8
	Interim_Release_1n_beta2:1.8
	Interim_Release_1n_beta1:1.8
	PublicRelease_1m:1.7
	Interim_Release_1m_beta1:1.7
	PublicRelease_1l:1.7
	Interim_Release_1l_RC3:1.7
	Interim_Release_1l_RC2:1.7
	Interim_Release_1l_RC1:1.7
	Interim_Release_1l_beta2:1.7
	Interim_Release_1l_beta1:1.7
	PublicRelease_1k:1.7
	Interim_Release_1k_RC4:1.7
	Interim_1k_RC3:1.7
	Interim_1k_RC2:1.7
	Interim_Release_1k_RC1:1.7
	Interim_Release_1k_beta5:1.7
	Intrerim_Release_1k_beta4:1.7
	Interim_Release_1k_beta1:1.7
	PublicRelease_1j:1.5
	Interim_Release_1J_RC3:1.5
	Interim_Release_1j_RC3:1.5
	Interim_Release_1j_RC2:1.5
	Interim_Release_1j_RC1:1.5
	Interim_Release_1j_beta2:1.5
	Interim_Release_1j_beta1:1.5
	PublicRelease_1i:1.5
	Interim_Release_1i_RC6:1.5
	Interim_Release_1i_RC3:1.5
	Interim_Release_1i_RC2:1.5
	Interim_Release_1i_RC1:1.5
	Interim_Release_1i_beta3:1.5
	Interim_Release_1i_beta2:1.5
	Interim_Release_1i_beta1:1.5
	PublicRelease_1h:1.5
	Interim_Release_1h_rc2:1.5
	Interim_Release_1h_RC1:1.5
	Interim_Release_1h_beta2:1.5
	Interim_Release_1h_beta1_now:1.5
	Interim_Release_1h_beta1:1.5
	PublicRelease_1g:1.5
	Interim_Release_1g_RC6_Final:1.5
	Interim_Release_1g_RC6:1.5
	Interim_Release_1g_RC5:1.5
	Interim_Release_1g_RC4:1.5
	Interim_Release_1g_RC3:1.5
	Interim_Release_1g_beta2:1.4
	Interim_Release_1g_beta1:1.2
	Interim_Release_1f_RC4:1.2
	Interim_Release_1f_RC3:1.2
	Interim_Release_1f_RC2:1.2
	Interim_Release_1f_RC:1.2
	Interim_Release_1f_beta2:1.2
	Interim_Release_1f_beta1:1.2
	PublicRelease_1e:1.2
	Interim_Release_1e_RC2:1.2
	Interim_Release_1e_RC:1.2
	Interim_Release_1e_beta3:1.2
	Interim_Release_1e_beta2:1.2
	Interim_Release_1e_beta2_before_kuchin:1.2
	Interim_Release_1e_beta1:1.2
	PublicRelease_1c:1.2
	featurestest:1.2.0.4
	Interim_Release_1c_RC:1.2
	Interim_Release_1c_beta2:1.2
	Interim_Release_1c_beta1:1.2
	threaded_downloadqueue:1.2.0.2;
locks; strict;
comment	@ * @;


1.12
date	2008.11.12.03.52.08;	author aw3;	state Exp;
branches;
next	1.11;

1.11
date	2007.10.11.18.09.45;	author fuxie-dk;	state Exp;
branches;
next	1.10;

1.10
date	2006.01.15.17.41.10;	author aw3;	state Exp;
branches;
next	1.9;

1.9
date	2005.02.03.14.40.17;	author kuchin;	state Exp;
branches;
next	1.8;

1.8
date	2004.06.30.13.38.41;	author dongato;	state Exp;
branches;
next	1.7;

1.7
date	2004.02.15.11.55.57;	author morevit;	state Exp;
branches;
next	1.6;

1.6
date	2004.02.03.01.20.31;	author double_t;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.28.10.26.30;	author partyckip;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.09.01.15.46;	author syrus77;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.07.11.59.19;	author partyckip;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.14.15.47.06;	author partyckip;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.14.11.55.40;	author partyckip;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Simplified logging system implementation.
@
text
@//	This file is part of eMule Plus
//
//	This program is free software; you can redistribute it and/or
//	modify it under the terms of the GNU General Public License
//	as published by the Free Software Foundation; either
//	version 2 of the License, or (at your option) any later version.
//
//	This program is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU General Public License for more details.
//
//	You should have received a copy of the GNU General Public License
//	along with this program; if not, write to the Free Software
//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#pragma once

class CLoggable
{
public:
	static void AddLogLine(int iMode, UINT nID, ...);
	static void AddLogLine(int iMode, LPCTSTR line, ...);

private:
	static void AddLogText(int iMode, LPCTSTR line, va_list argptr);
};

#define LOG_FL_EMBEDFMT		0x80000000	//passed string can contain embedded COLOR tags
#define LOG_FL_DBG			0x40000000	//debug log message
#define LOG_FL_SBAR			0x20000000	//add message to the status bar (non-debug messages only)

#define LOG_COLOR_TAG		_T("<CLR=")
#define LOG_COLOR_TAGLEN	CSTRLEN(LOG_COLOR_TAG)

#define LOG_RGB_AQUA				RGB(0x33, 0xCC, 0xCC)	//51,204,204
#define LOG_RGB_BLACK				RGB(0x00, 0x01, 0x00)	//0,0,0 (slightly different to distinguish with default color)
#define LOG_RGB_BLUE				RGB(0x00, 0x00, 0xFF)	//0,0,255
#define LOG_RGB_BLUE_GRAY			RGB(0x66, 0x66, 0x99)	//102,102,153
#define LOG_RGB_BRIGHT_GREEN		RGB(0x00, 0xFF, 0x00)	//0,255,0
#define LOG_RGB_BRIGHT_PLUM			RGB(0xDD, 0xA0, 0xDD)	//221,160,221
#define LOG_RGB_BRIGHT_TAN			RGB(0xFF, 0xCC, 0x99)	//255,204,153
#define LOG_RGB_BROWN				RGB(0x99, 0x33, 0x00)	//153,51,0
#define LOG_RGB_CADET_BLUE			RGB(0x5F, 0x9E, 0xA0)	//95,158,160
#define LOG_RGB_CHOCOLATE			RGB(0xD2, 0x69, 0x1E)	//210,105,30
#define LOG_RGB_CORAL				RGB(0xFF, 0x7F, 0x50)	//255,127,80
#define LOG_RGB_CORNFLOWER_BLUE		RGB(0x64, 0x95, 0xED)	//100,149,237
#define LOG_RGB_CRIMSON				RGB(0xDC, 0x14, 0x3C)	//220,20,60
#define LOG_RGB_CYAN				RGB(0x00, 0xFF, 0xFF)	//0,255,255
#define LOG_RGB_DARK_BLUE			RGB(0x00, 0x00, 0x80)	//0,0,128
#define LOG_RGB_DARK_CYAN			RGB(0x00, 0x80, 0x80)	//0,128,128
#define LOG_RGB_DARK_GOLD			RGB(0xFF, 0xCC, 0x00)	//255,204,0
#define LOG_RGB_DARK_GOLDEN_ROD		RGB(0xB8, 0x86, 0x0B)	//184,134,11
#define LOG_RGB_DARK_GRAY			RGB(0xA9, 0xA9, 0xA9)	//169,169,169
#define LOG_RGB_DARK_GREEN			RGB(0x00, 0x64, 0x00)	//0,100,0
#define LOG_RGB_DARK_KHAKI			RGB(0xBD, 0xB7, 0x6B)	//189,183,107
#define LOG_RGB_DARK_OLIVE			RGB(0x55, 0x6B, 0x2F)	//85,107,47
#define LOG_RGB_DARK_ORANGE			RGB(0xFF, 0x8C, 0x00)	//255,140,0
#define LOG_RGB_DARK_RED			RGB(0x80, 0x00, 0x00)	//128,0,0
#define LOG_RGB_DARK_SALMON			RGB(0xE9, 0x96, 0x7A)	//233,150,122
#define LOG_RGB_DARK_SEA_GREEN		RGB(0x8F, 0xBC, 0x8F)	//143,188,143
#define LOG_RGB_DARK_SLATE_BLUE		RGB(0x48, 0x3D, 0x8B)	//72,61,139
#define LOG_RGB_DARK_VIOLET			RGB(0x94, 0x00, 0xD3)	//148,0,211
#define LOG_RGB_DARK_YELLOW			RGB(0x80, 0x80, 0x00)	//128,128,0
#define LOG_RGB_DARKER_ORANGE		RGB(0xFF, 0x66, 0x00)	//255,102,0
#define LOG_RGB_DARKER_SEA_GREEN	RGB(0x2E, 0x8B, 0x57)	//46,139,87
#define LOG_RGB_DEEP_PINK			RGB(0xFF, 0x14, 0x93)	//255,20,147
#define LOG_RGB_DEEP_SKY_BLUE		RGB(0x00, 0xBF, 0xFF)	//0,191,255
#define LOG_RGB_DIM_GRAY			RGB(0x69, 0x69, 0x69)	//105,105,105
#define LOG_RGB_DODGER_BLUE			RGB(0x1E, 0x90, 0xFF)	//30,144,255
#define LOG_RGB_FOREST_GREEN		RGB(0x22, 0x8B, 0x22)	//34,139,34
#define LOG_RGB_GOLDEN_ROD			RGB(0xDA, 0xA5, 0x20)	//218,165,32
#define LOG_RGB_GRAY25				RGB(0xC0, 0xC0, 0xC0)	//192,192,192
#define LOG_RGB_GRAY40				RGB(0x99, 0x99, 0x99)	//153,153,153
#define LOG_RGB_GRAY50				RGB(0x80, 0x80, 0x80)	//128,128,128
#define LOG_RGB_GRAY80				RGB(0x33, 0x33, 0x33)	//51,51,51
#define LOG_RGB_GREEN				RGB(0x00, 0x80, 0x00)	//0,128,0
#define LOG_RGB_HOT_PINK			RGB(0xFF, 0x69, 0xB4)	//255,105,180
#define LOG_RGB_INDIAN_RED			RGB(0xCD, 0x5C, 0x5C)	//205,92,92
#define LOG_RGB_INDIGO				RGB(0x33, 0x33, 0x99)	//51,51,153
#define LOG_RGB_KHAKI				RGB(0xF0, 0xE8, 0x6C)	//240,232,108
#define LOG_RGB_LAVENDER			RGB(0xCC, 0x99, 0xFF)	//204,153,255
#define LOG_RGB_LAWN_GREEN			RGB(0x7C, 0xFC, 0x00)	//124,252,0
#define LOG_RGB_LIGHT_BLUE			RGB(0x33, 0x66, 0xFF)	//51,102,255
#define LOG_RGB_LIGHT_CORAL			RGB(0xF0, 0x80, 0x80)	//240,128,128
#define LOG_RGB_LIGHT_GREEN			RGB(0xCC, 0xFF, 0xCC)	//204,255,204
#define LOG_RGB_LIGHT_PINK			RGB(0xFF, 0xB6, 0xC1)	//255,182,193
#define LOG_RGB_LIGHT_SALMON		RGB(0xFF, 0xA0, 0x7A)	//255,160,122
#define LOG_RGB_LIGHT_SKY_BLUE		RGB(0x87, 0xCE, 0xFA)	//135,206,250
#define LOG_RGB_LIGHT_SEA_GREEN		RGB(0x20, 0xB2, 0xAA)	//32,178,170
#define LOG_RGB_LIGHT_YELLOW		RGB(0xFF, 0xFF, 0x99)	//255,255,153
#define LOG_RGB_LIGHTER_GREEN		RGB(0x90, 0xEE, 0x90)	//144,238,144
#define LOG_RGB_LIGHTER_SKY_BLUE	RGB(0xAD, 0xD8, 0xE6)	//173,216,230
#define LOG_RGB_LIME				RGB(0x99, 0xCC, 0x00)	//153,204,0
#define LOG_RGB_MAGENTA				RGB(0xFF, 0x00, 0xFF)	//255,0,255
#define LOG_RGB_MAROON				RGB(0x80, 0x00, 0x00)	//128,0,0
#define LOG_RGB_MEDIUM_BLUE			RGB(0x00, 0x00, 0xCD)	//0,0,205
#define LOG_RGB_MEDIUM_GREEN		RGB(0x00, 0xCD, 0x00)	//0,205,0
#define LOG_RGB_MEDIUM_ORCHID		RGB(0xBA, 0x55, 0xD3)	//186,85,211
#define LOG_RGB_MEDIUM_PURPLE		RGB(0x93, 0x70, 0xDB)	//147,112,219
#define LOG_RGB_MEDIUM_RED			RGB(0xCD, 0x00, 0x00)	//205,0,0
#define LOG_RGB_MEDIUM_SEA_GREEN	RGB(0x3C, 0xB3, 0x71)	//60,179,113
#define LOG_RGB_MEDIUM_VIOLET_RED	RGB(0xC7, 0x15, 0x85)	//199,21,133
#define LOG_RGB_OLIVE_DRAB			RGB(0x6B, 0x8E, 0x23)	//107,142,35
#define LOG_RGB_ORANGE				RGB(0xFF, 0xA5, 0x00)	//255,165,0
#define LOG_RGB_ORANGE_RED			RGB(0xFF, 0x45, 0x00)	//255,69,0
#define LOG_RGB_ORCHID				RGB(0xDA, 0x70, 0xD6)	//218,112,214
#define LOG_RGB_PALE_VIOLET_RED		RGB(0xDB, 0x70, 0x93)	//219,112,147
#define LOG_RGB_PERU				RGB(0xCD, 0x85, 0x3F)	//205,133,63
#define LOG_RGB_PINK				RGB(0xFF, 0xC0, 0xCB)	//255,192,203
#define LOG_RGB_PLUM				RGB(0x99, 0x33, 0x66)	//153,51,102
#define LOG_RGB_PURPLE				RGB(0x80, 0x00, 0x80)	//128,0,128
#define LOG_RGB_RED					RGB(0xFF, 0x00, 0x00)	//255,0,0
#define LOG_RGB_ROSE				RGB(0xFF, 0x99, 0xCC)	//255,153,204
#define LOG_RGB_ROSY_BROWN			RGB(0xBC, 0x8F, 0x8F)	//188,143,143
#define LOG_RGB_SALMON				RGB(0xFA, 0x80, 0x72)	//250,128,114
#define LOG_RGB_SANDY_BROWN			RGB(0xF4, 0xA4, 0x60)	//244,164,96
#define LOG_RGB_SIENNA				RGB(0xA0, 0x52, 0x2D)	//160,82,45
#define LOG_RGB_SPRING_GREEN		RGB(0x00, 0xFF, 0x7F)	//0,255,127
#define LOG_RGB_SLATE_BLUE			RGB(0x6A, 0x5A, 0xCD)	//106,90,205
#define LOG_RGB_STEEL_BLUE			RGB(0x46, 0x82, 0xB4)	//70,130,180
#define LOG_RGB_TAN					RGB(0xD2, 0xB4, 0x8C)	//210,180,140
#define LOG_RGB_TOMATO				RGB(0xFF, 0x63, 0x47)	//255,99,71
#define LOG_RGB_THISTLE				RGB(0xD8, 0xBF, 0xD8)	//216,191,216
#define LOG_RGB_VIOLET				RGB(0xEE, 0x82, 0xEE)	//238,130,238
#define LOG_RGB_WHITE				RGB(0xFF, 0xFF, 0xFF)	//255,255,255
#define LOG_RGB_YELLOW				RGB(0xFF, 0xFF, 0x00)	//255,255,0

#define RGB_DEFAULT_TXT				LOG_COLOR_TAG _T("Default>")
#define RGB_AQUA_TXT				LOG_COLOR_TAG _T("33CCCC>")
#define RGB_BLACK_TXT				LOG_COLOR_TAG _T("000000>")
#define RGB_BLUE_TXT				LOG_COLOR_TAG _T("0000FF>")
#define RGB_BLUE_GRAY_TXT			LOG_COLOR_TAG _T("666699>")
#define RGB_BRIGHT_GREEN_TXT		LOG_COLOR_TAG _T("00FF00>")
#define RGB_BRIGHT_PLUM_TXT			LOG_COLOR_TAG _T("DDA0DD>")
#define RGB_BRIGHT_TAN_TXT			LOG_COLOR_TAG _T("FFCC99>")
#define RGB_BROWN_TXT				LOG_COLOR_TAG _T("993300>")
#define RGB_CADET_BLUE_TXT			LOG_COLOR_TAG _T("5F9EA0>")
#define RGB_CHOCOLATE_TXT			LOG_COLOR_TAG _T("D2691E>")
#define RGB_CORAL_TXT				LOG_COLOR_TAG _T("FF7F50>")
#define RGB_CORNFLOWER_BLUE_TXT		LOG_COLOR_TAG _T("6495ED>")
#define RGB_CRIMSON_TXT				LOG_COLOR_TAG _T("DC143C>")
#define RGB_CYAN_TXT				LOG_COLOR_TAG _T("00FFFF>")
#define RGB_DARK_BLUE_TXT			LOG_COLOR_TAG _T("000080>")
#define RGB_DARK_CYAN_TXT			LOG_COLOR_TAG _T("008080>")
#define RGB_DARK_GOLD_TXT			LOG_COLOR_TAG _T("FFCC00>")
#define RGB_DARK_GOLDEN_ROD_TXT		LOG_COLOR_TAG _T("B8860B>")
#define RGB_DARK_GRAY_TXT			LOG_COLOR_TAG _T("A9A9A9>")
#define RGB_DARK_GREEN_TXT			LOG_COLOR_TAG _T("006400>")
#define RGB_DARK_KHAKI_TXT			LOG_COLOR_TAG _T("BDB76B>")
#define RGB_DARK_OLIVE_TXT			LOG_COLOR_TAG _T("556B2F>")
#define RGB_DARK_ORANGE_TXT			LOG_COLOR_TAG _T("FF8C00>")
#define RGB_DARK_RED_TXT			LOG_COLOR_TAG _T("800000>")
#define RGB_DARK_SALMON_TXT			LOG_COLOR_TAG _T("E9967A>")
#define RGB_DARK_SEA_GREEN_TXT		LOG_COLOR_TAG _T("8FBC8F>")
#define RGB_DARK_SLATE_BLUE_TXT		LOG_COLOR_TAG _T("483D8B>")
#define RGB_DARK_VIOLET_TXT			LOG_COLOR_TAG _T("9400D3>")
#define RGB_DARK_YELLOW_TXT			LOG_COLOR_TAG _T("808000>")
#define RGB_DARKER_ORANGE_TXT		LOG_COLOR_TAG _T("FF6600>")
#define RGB_DARKER_SEA_GREEN_TXT	LOG_COLOR_TAG _T("2E8B57>")
#define RGB_DEEP_PINK_TXT			LOG_COLOR_TAG _T("FF1493>")
#define RGB_DEEP_SKY_BLUE_TXT		LOG_COLOR_TAG _T("00BFFF>")
#define RGB_DIM_GRAY_TXT			LOG_COLOR_TAG _T("696969>")
#define RGB_DODGER_BLUE_TXT			LOG_COLOR_TAG _T("1E90FF>")
#define RGB_FOREST_GREEN_TXT		LOG_COLOR_TAG _T("228B22>")
#define RGB_GOLDEN_ROD_TXT			LOG_COLOR_TAG _T("DAA520>")
#define RGB_GRAY25_TXT				LOG_COLOR_TAG _T("C0C0C0>")
#define RGB_GRAY40_TXT				LOG_COLOR_TAG _T("999999>")
#define RGB_GRAY50_TXT				LOG_COLOR_TAG _T("808080>")
#define RGB_GRAY80_TXT				LOG_COLOR_TAG _T("333333>")
#define RGB_GREEN_TXT				LOG_COLOR_TAG _T("008000>")
#define RGB_HOT_PINK_TXT			LOG_COLOR_TAG _T("FF69B4>")
#define RGB_INDIAN_RED_TXT			LOG_COLOR_TAG _T("CD5C5C>")
#define RGB_INDIGO_TXT				LOG_COLOR_TAG _T("333399>")
#define RGB_KHAKI_TXT				LOG_COLOR_TAG _T("F0E86C>")
#define RGB_LAVENDER_TXT			LOG_COLOR_TAG _T("CC99FF>")
#define RGB_LAWN_GREEN_TXT			LOG_COLOR_TAG _T("7CFC00>")
#define RGB_LIGHT_BLUE_TXT			LOG_COLOR_TAG _T("3366FF>")
#define RGB_LIGHT_CORAL_TXT			LOG_COLOR_TAG _T("F08080>")
#define RGB_LIGHT_GREEN_TXT			LOG_COLOR_TAG _T("CCFFCC>")
#define RGB_LIGHT_PINK_TXT			LOG_COLOR_TAG _T("FFB6C1>")
#define RGB_LIGHT_SALMON_TXT		LOG_COLOR_TAG _T("FFA07A>")
#define RGB_LIGHT_SKY_BLUE_TXT		LOG_COLOR_TAG _T("87CEFA>")
#define RGB_LIGHT_SEA_GREEN_TXT		LOG_COLOR_TAG _T("20B2AA>")
#define RGB_LIGHT_YELLOW_TXT		LOG_COLOR_TAG _T("FFFF99>")
#define RGB_LIGHTER_GREEN_TXT		LOG_COLOR_TAG _T("90EE90>")
#define RGB_LIGHTER_SKY_BLUE_TXT	LOG_COLOR_TAG _T("ADD8E6>")
#define RGB_LIME_TXT				LOG_COLOR_TAG _T("99CC00>")
#define RGB_MAGENTA_TXT				LOG_COLOR_TAG _T("FF00FF>")
#define RGB_MAROON_TXT				LOG_COLOR_TAG _T("800000>")
#define RGB_MEDIUM_BLUE_TXT			LOG_COLOR_TAG _T("0000CD>")
#define RGB_MEDIUM_GREEN_TXT		LOG_COLOR_TAG _T("00CD00>")
#define RGB_MEDIUM_ORCHID_TXT		LOG_COLOR_TAG _T("BA55D3>")
#define RGB_MEDIUM_PURPLE_TXT		LOG_COLOR_TAG _T("9370DB>")
#define RGB_MEDIUM_RED_TXT			LOG_COLOR_TAG _T("CD0000>")
#define RGB_MEDIUM_SEA_GREEN_TXT	LOG_COLOR_TAG _T("3CB371>")
#define RGB_MEDIUM_VIOLET_RED_TXT	LOG_COLOR_TAG _T("C71585>")
#define RGB_OLIVE_DRAB_TXT			LOG_COLOR_TAG _T("6B8E23>")
#define RGB_ORANGE_TXT				LOG_COLOR_TAG _T("FFA500>")
#define RGB_ORANGE_RED_TXT			LOG_COLOR_TAG _T("FF4500>")
#define RGB_ORCHID_TXT				LOG_COLOR_TAG _T("DA70D6>")
#define RGB_PALE_VIOLET_RED_TXT		LOG_COLOR_TAG _T("DB7093>")
#define RGB_PERU_TXT				LOG_COLOR_TAG _T("CD853F>")
#define RGB_PINK_TXT				LOG_COLOR_TAG _T("FFC0CB>")
#define RGB_PLUM_TXT				LOG_COLOR_TAG _T("993366>")
#define RGB_PURPLE_TXT				LOG_COLOR_TAG _T("800080>")
#define RGB_RED_TXT					LOG_COLOR_TAG _T("FF0000>")
#define RGB_ROSE_TXT				LOG_COLOR_TAG _T("FF99CC>")
#define RGB_ROSY_BROWN_TXT			LOG_COLOR_TAG _T("BC8F8F>")
#define RGB_SALMON_TXT				LOG_COLOR_TAG _T("FA8072>")
#define RGB_SANDY_BROWN_TXT			LOG_COLOR_TAG _T("F4A460>")
#define RGB_SIENNA_TXT				LOG_COLOR_TAG _T("A0522D>")
#define RGB_SPRING_GREEN_TXT		LOG_COLOR_TAG _T("00FF7F>")
#define RGB_SLATE_BLUE_TXT			LOG_COLOR_TAG _T("6A5ACD>")
#define RGB_STEEL_BLUE_TXT			LOG_COLOR_TAG _T("4682B4>")
#define RGB_TAN_TXT					LOG_COLOR_TAG _T("D2B48C>")
#define RGB_TOMATO_TXT				LOG_COLOR_TAG _T("FF6347>")
#define RGB_THISTLE_TXT				LOG_COLOR_TAG _T("D8BFD8>")
#define RGB_VIOLET_TXT				LOG_COLOR_TAG _T("EE82EE>")
#define RGB_WHITE_TXT				LOG_COLOR_TAG _T("FFFFFF>")
#define RGB_YELLOW_TXT				LOG_COLOR_TAG _T("FFFF00>")

#define RGB_DEFAULT				CString(RGB_DEFAULT_TXT)
#define RGB_AQUA				CString(RGB_AQUA_TXT)
#define RGB_BLACK				CString(RGB_BLACK_TXT)
#define RGB_BLUE				CString(RGB_BLUE_TXT)
#define RGB_BLUE_GRAY			CString(RGB_BLUE_GRAY_TXT)
#define RGB_BRIGHT_GREEN		CString(RGB_BRIGHT_GREEN_TXT)
#define RGB_BRIGHT_PLUM			CString(RGB_BRIGHT_PLUM_TXT)
#define RGB_BRIGHT_TAN			CString(RGB_BRIGHT_TAN_TXT)
#define RGB_BROWN				CString(RGB_BROWN_TXT)
#define RGB_CADET_BLUE			CString(RGB_CADET_BLUE_TXT)
#define RGB_CHOCOLATE			CString(RGB_CHOCOLATE_TXT)
#define RGB_CORAL				CString(RGB_CORAL_TXT)
#define RGB_CORNFLOWER_BLUE		CString(RGB_CORNFLOWER_BLUE_TXT)
#define RGB_CRIMSON				CString(RGB_CRIMSON_TXT)
#define RGB_CYAN				CString(RGB_CYAN_TXT)
#define RGB_DARK_BLUE			CString(RGB_DARK_BLUE_TXT)
#define RGB_DARK_CYAN			CString(RGB_DARK_CYAN_TXT)
#define RGB_DARK_GOLD			CString(RGB_DARK_GOLD_TXT)
#define RGB_DARK_GOLDEN_ROD		CString(RGB_DARK_GOLDEN_ROD_TXT)
#define RGB_DARK_GRAY			CString(RGB_DARK_GRAY_TXT)
#define RGB_DARK_GREEN			CString(RGB_DARK_GREEN_TXT)
#define RGB_DARK_KHAKI			CString(RGB_DARK_KHAKI_TXT)
#define RGB_DARK_OLIVE			CString(RGB_DARK_OLIVE_TXT)
#define RGB_DARK_ORANGE			CString(RGB_DARK_ORANGE_TXT)
#define RGB_DARK_RED			CString(RGB_DARK_RED_TXT)
#define RGB_DARK_SALMON			CString(RGB_DARK_SALMON_TXT)
#define RGB_DARK_SEA_GREEN		CString(RGB_DARK_SEA_GREEN_TXT)
#define RGB_DARK_SLATE_BLUE		CString(RGB_DARK_SLATE_BLUE_TXT)
#define RGB_DARK_VIOLET			CString(RGB_DARK_VIOLET_TXT)
#define RGB_DARK_YELLOW			CString(RGB_DARK_YELLOW_TXT)
#define RGB_DARKER_ORANGE		CString(RGB_DARKER_ORANGE_TXT)
#define RGB_DARKER_SEA_GREEN	CString(RGB_DARKER_SEA_GREEN_TXT)
#define RGB_DEEP_PINK			CString(RGB_DEEP_PINK_TXT)
#define RGB_DEEP_SKY_BLUE		CString(RGB_DEEP_SKY_BLUE_TXT)
#define RGB_DIM_GRAY			CString(RGB_DIM_GRAY_TXT)
#define RGB_DODGER_BLUE			CString(RGB_DODGER_BLUE_TXT)
#define RGB_FOREST_GREEN		CString(RGB_FOREST_GREEN_TXT)
#define RGB_GOLDEN_ROD			CString(RGB_GOLDEN_ROD_TXT)
#define RGB_GRAY25				CString(RGB_GRAY25_TXT)
#define RGB_GRAY40				CString(RGB_GRAY40_TXT)
#define RGB_GRAY50				CString(RGB_GRAY50_TXT)
#define RGB_GRAY80				CString(RGB_GRAY80_TXT)
#define RGB_GREEN				CString(RGB_GREEN_TXT)
#define RGB_HOT_PINK			CString(RGB_HOT_PINK_TXT)
#define RGB_INDIAN_RED			CString(RGB_INDIAN_RED_TXT)
#define RGB_INDIGO				CString(RGB_INDIGO_TXT)
#define RGB_KHAKI				CString(RGB_KHAKI_TXT)
#define RGB_LAVENDER			CString(RGB_LAVENDER_TXT)
#define RGB_LAWN_GREEN			CString(RGB_LAWN_GREEN_TXT)
#define RGB_LIGHT_BLUE			CString(RGB_LIGHT_BLUE_TXT)
#define RGB_LIGHT_CORAL			CString(RGB_LIGHT_CORAL_TXT)
#define RGB_LIGHT_GREEN			CString(RGB_LIGHT_GREEN_TXT)
#define RGB_LIGHT_PINK			CString(RGB_LIGHT_PINK_TXT)
#define RGB_LIGHT_SALMON		CString(RGB_LIGHT_SALMON_TXT)
#define RGB_LIGHT_SKY_BLUE		CString(RGB_LIGHT_SKY_BLUE_TXT)
#define RGB_LIGHT_SEA_GREEN		CString(RGB_LIGHT_SEA_GREEN_TXT)
#define RGB_LIGHT_YELLOW		CString(RGB_LIGHT_YELLOW_TXT)
#define RGB_LIGHTER_GREEN		CString(RGB_LIGHTER_GREEN_TXT)
#define RGB_LIGHTER_SKY_BLUE	CString(RGB_LIGHTER_SKY_BLUE_TXT)
#define RGB_LIME				CString(RGB_LIME_TXT)
#define RGB_MAGENTA				CString(RGB_MAGENTA_TXT)
#define RGB_MAROON				CString(RGB_MAROON_TXT)
#define RGB_MEDIUM_BLUE			CString(RGB_MEDIUM_BLUE_TXT)
#define RGB_MEDIUM_GREEN		CString(RGB_MEDIUM_GREEN_TXT)
#define RGB_MEDIUM_ORCHID		CString(RGB_MEDIUM_ORCHID_TXT)
#define RGB_MEDIUM_PURPLE		CString(RGB_MEDIUM_PURPLE_TXT)
#define RGB_MEDIUM_RED			CString(RGB_MEDIUM_RED_TXT)
#define RGB_MEDIUM_SEA_GREEN	CString(RGB_MEDIUM_SEA_GREEN_TXT)
#define RGB_MEDIUM_VIOLET_RED	CString(RGB_MEDIUM_VIOLET_RED_TXT)
#define RGB_OLIVE_DRAB			CString(RGB_OLIVE_DRAB_TXT)
#define RGB_ORANGE				CString(RGB_ORANGE_TXT)
#define RGB_ORANGE_RED			CString(RGB_ORANGE_RED_TXT)
#define RGB_ORCHID				CString(RGB_ORCHID_TXT)
#define RGB_PALE_VIOLET_RED		CString(RGB_PALE_VIOLET_RED_TXT)
#define RGB_PERU				CString(RGB_PERU_TXT)
#define RGB_PINK				CString(RGB_PINK_TXT)
#define RGB_PLUM				CString(RGB_PLUM_TXT)
#define RGB_PURPLE				CString(RGB_PURPLE_TXT)
#define RGB_RED					CString(RGB_RED_TXT)
#define RGB_ROSE				CString(RGB_ROSE_TXT)
#define RGB_ROSY_BROWN			CString(RGB_ROSY_BROWN_TXT)
#define RGB_SALMON				CString(RGB_SALMON_TXT)
#define RGB_SANDY_BROWN			CString(RGB_SANDY_BROWN_TXT)
#define RGB_SIENNA				CString(RGB_SIENNA_TXT)
#define RGB_SPRING_GREEN		CString(RGB_SPRING_GREEN_TXT)
#define RGB_SLATE_BLUE			CString(RGB_SLATE_BLUE_TXT)
#define RGB_STEEL_BLUE			CString(RGB_STEEL_BLUE_TXT)
#define RGB_TAN					CString(RGB_TAN_TXT)
#define RGB_TOMATO				CString(RGB_TOMATO_TXT)
#define RGB_THISTLE				CString(RGB_THISTLE_TXT)
#define RGB_VIOLET				CString(RGB_VIOLET_TXT)
#define RGB_WHITE				CString(RGB_WHITE_TXT)
#define RGB_YELLOW				CString(RGB_YELLOW_TXT)

#define RGB_LOG_ERROR			RGB_RED
#define RGB_LOG_WARNING			RGB_DARKER_ORANGE
#define RGB_LOG_NOTICE			RGB_PLUM
#define RGB_LOG_DIMMED			RGB_DIM_GRAY
#define RGB_LOG_SUCCESS			RGB_DARKER_SEA_GREEN

#define RGB_LOG_ERROR_TXT		RGB_RED_TXT
#define RGB_LOG_WARNING_TXT		RGB_DARKER_ORANGE_TXT
#define RGB_LOG_NOTICE_TXT		RGB_PLUM_TXT
#define RGB_LOG_DIMMED_TXT		RGB_DIM_GRAY_TXT
#define RGB_LOG_SUCCESS_TXT		RGB_DARKER_SEA_GREEN_TXT

#define LOG_RGB_ERROR			LOG_RGB_RED
#define LOG_RGB_WARNING			LOG_RGB_DARKER_ORANGE
#define LOG_RGB_NOTICE			LOG_RGB_PLUM
#define LOG_RGB_DIMMED			LOG_RGB_DIM_GRAY
#define LOG_RGB_SUCCESS			LOG_RGB_DARKER_SEA_GREEN
@


1.11
log
@Dropped unused functionality [Aw3].
@
text
@a17 2
#include "types.h"

d21 2
a22 3
	static void AddLogLine(bool addtostatusbar, UINT nID, ...);
	static void AddLogLine(bool addtostatusbar, LPCTSTR line, ...);
	static void AddDebugLogLine(LPCTSTR line, ...);
d25 1
a25 1
	static void AddLogText(bool debug, bool addtostatusbar, LPCTSTR line, va_list argptr);
d28 6
d35 186
a220 161
#define RGB_DEFAULT_TXT				_T("<COLOR=Default>")
#define RGB_ALICE_BLUE_TXT			_T("<COLOR=240,248,255>")
#define RGB_ANTIQUE_WHITE_TXT		_T("<COLOR=250,235,215>")
#define RGB_AQUAMARINE_TXT			_T("<COLOR=127,255,212>")
#define RGB_AQUA_TXT				_T("<COLOR=51,204,204>")
#define RGB_AZURE_TXT				_T("<COLOR=240,255,255>")
#define RGB_BEIGE_TXT				_T("<COLOR=245,245,220>")
#define RGB_BLACK_TXT				_T("<COLOR=0,0,0>")
#define RGB_BLANCHEDALMOND_TXT		_T("<COLOR=255,235,205>")
#define RGB_BLUE_TXT				_T("<COLOR=0,0,255>")
#define RGB_BLUE_GRAY_TXT			_T("<COLOR=102,102,153>")
#define RGB_BLUE_VIOLET_TXT			_T("<COLOR=138,43,226>")
#define RGB_BRIGHT_GREEN_TXT		_T("<COLOR=0,255,0>")
#define RGB_BRIGHT_LAVENDER_TXT		_T("<COLOR=230,230,250>")
#define RGB_BRIGHT_PLUM_TXT			_T("<COLOR=221,160,221>")
#define RGB_BRIGHT_TAN_TXT			_T("<COLOR=255,204,153>")
#define RGB_BRIGHT_YELLOW_TXT		_T("<COLOR=255,255,224>")
#define RGB_BROWN_TXT				_T("<COLOR=153,51,0>")
#define RGB_BROWN_WOOD_TXT			_T("<COLOR=165,42,42>")
#define RGB_BISQUE_TXT				_T("<COLOR=255,228,196>")
#define RGB_BURLY_WOOD_TXT			_T("<COLOR=222,184,135>")
#define RGB_CADET_BLUE_TXT			_T("<COLOR=95,158,160>")
#define RGB_CHARTREUSE_TXT			_T("<COLOR=127,255,0>")
#define RGB_CHOCOLATE_TXT			_T("<COLOR=210,105,30>")
#define RGB_CORAL_TXT				_T("<COLOR=255,127,80>")
#define RGB_CORNFLOWER_BLUE_TXT		_T("<COLOR=100,149,237>")
#define RGB_CORNSILK_TXT			_T("<COLOR=255,248,220>")
#define RGB_CRIMSON_TXT				_T("<COLOR=220,20,60>")
#define RGB_CYAN_TXT				_T("<COLOR=0,255,255>")
#define RGB_DARK_BLUE_TXT			_T("<COLOR=0,0,128>")
#define RGB_DARK_CYAN_TXT			_T("<COLOR=0,128,128>")
#define RGB_DARK_GOLD_TXT			_T("<COLOR=255,204,0>")
#define RGB_DARK_GOLDEN_ROD_TXT		_T("<COLOR=184,134,11>")
#define RGB_DARK_GRAY_TXT			_T("<COLOR=169,169,169>")
#define RGB_DARK_GREEN_TXT			_T("<COLOR=0,100,0>")
#define RGB_DARK_KHAKI_TXT			_T("<COLOR=189,183,107>")
#define RGB_DARK_OLIVE_TXT			_T("<COLOR=85,107,47>")
#define RGB_DARK_ORANGE_TXT			_T("<COLOR=255,140,0>")
#define RGB_DARK_ORCHID_TXT			_T("<COLOR=153,50,204>")
#define RGB_DARK_RED_TXT			_T("<COLOR=128,0,0>")
#define RGB_DARK_SALMON_TXT			_T("<COLOR=233,150,122>")
#define RGB_DARK_SEA_GREEN_TXT		_T("<COLOR=143,188,143>")
#define RGB_DARK_SLATE_BLUE_TXT		_T("<COLOR=72,61,139>")
#define RGB_DARK_SLATE_GRAY_TXT		_T("<COLOR=47,79,79>")
#define RGB_DARK_TEAL_TXT			_T("<COLOR=0,51,102>")
#define RGB_DARK_TURQUOISE_TXT		_T("<COLOR=0,206,209>")
#define RGB_DARK_VIOLET_TXT			_T("<COLOR=148,0,211>")
#define RGB_DARK_YELLOW_TXT			_T("<COLOR=128,128,0>")
#define RGB_DARKER_GREEN_TXT		_T("<COLOR=0,51,0>")
#define RGB_DARKER_ORANGE_TXT		_T("<COLOR=255,102,0>")
#define RGB_DARKER_SEA_GREEN_TXT	_T("<COLOR=46,139,87>")
#define RGB_DEEP_PINK_TXT			_T("<COLOR=255,20,147>")
#define RGB_DEEP_SKY_BLUE_TXT		_T("<COLOR=0,191,255>")
#define RGB_DIM_GRAY_TXT			_T("<COLOR=105,105,105>")
#define RGB_DODGER_BLUE_TXT			_T("<COLOR=30,144,255>")
#define RGB_FIRE_BRICK_TXT			_T("<COLOR=178,34,34>")
#define RGB_FLORAL_WHITE_TXT		_T("<COLOR=255,250,240>")
#define RGB_FOREST_GREEN_TXT		_T("<COLOR=34,139,34>")
#define RGB_GAINSBORO_TXT			_T("<COLOR=220,220,220>")
#define RGB_GHOST_WHITE_TXT			_T("<COLOR=248,248,255>")
#define RGB_GOLD_TXT				_T("<COLOR=255,215,0>")
#define RGB_GOLDEN_ROD_TXT			_T("<COLOR=218,165,32>")
#define RGB_GRAY25_TXT				_T("<COLOR=192,192,192>")
#define RGB_GRAY40_TXT				_T("<COLOR=153,153,153>")
#define RGB_GRAY50_TXT				_T("<COLOR=128,128,128>")
#define RGB_GRAY80_TXT				_T("<COLOR=51,51,51>")
#define RGB_GREEN_TXT				_T("<COLOR=0,128,0>")
#define RGB_GREEN_YELLOW_TXT		_T("<COLOR=173,255,47>")
#define RGB_HONEY_DEW_TXT			_T("<COLOR=240,255,240>")
#define RGB_HOT_PINK_TXT			_T("<COLOR=255,105,180>")
#define RGB_INDIAN_RED_TXT			_T("<COLOR=205,92,92>")
#define RGB_INDIGO_TXT				_T("<COLOR=51,51,153>")
#define RGB_INDIGO_PURPLE_TXT		_T("<COLOR=75,0,130>")
#define RGB_IVORY_TXT				_T("<COLOR=255,255,240>")
#define RGB_KHAKI_TXT				_T("<COLOR=240,232,108>")
#define RGB_LAVENDER_TXT			_T("<COLOR=204,153,255>")
#define RGB_LAVENDER_BLUSH_TXT		_T("<COLOR=255,240,245>")
#define RGB_LAWN_GREEN_TXT			_T("<COLOR=124,252,0>")
#define RGB_LEMON_CHIFFON_TXT		_T("<COLOR=255,250,205>")
#define RGB_LIGHT_BLUE_TXT			_T("<COLOR=51,102,255>")
#define RGB_LIGHT_CORAL_TXT			_T("<COLOR=240,128,128>")
#define RGB_LIGHT_CYAN_TXT			_T("<COLOR=204,255,255>")
#define RGB_LIGHT_GOLDEN_ROD_TXT	_T("<COLOR=250,250,210>")
#define RGB_LIGHT_GRAY_TXT			_T("<COLOR=211,211,211>")
#define RGB_LIGHT_GREEN_TXT			_T("<COLOR=204,255,204>")
#define RGB_LIGHT_ORANGE_TXT		_T("<COLOR=255,153,0>")
#define RGB_LIGHT_PINK_TXT			_T("<COLOR=255,182,193>")
#define RGB_LIGHT_SALMON_TXT		_T("<COLOR=255,160,122>")
#define RGB_LIGHT_SKY_BLUE_TXT		_T("<COLOR=135,206,250>")
#define RGB_LIGHT_SEA_GREEN_TXT		_T("<COLOR=32,178,170>")
#define RGB_LIGHT_SLATE_GRAY_TXT	_T("<COLOR=119,136,153>")
#define RGB_LIGHT_STEEL_BLUE_TXT	_T("<COLOR=176,196,222>")
#define RGB_LIGHT_YELLOW_TXT		_T("<COLOR=255,255,153>")
#define RGB_LIGHTER_CYAN_TXT		_T("<COLOR=224,255,255>")
#define RGB_LIGHTER_GREEN_TXT		_T("<COLOR=144,238,144>")
#define RGB_LIGHTER_SKY_BLUE_TXT	_T("<COLOR=173,216,230>")
#define RGB_LIME_TXT				_T("<COLOR=153,204,0>")
#define RGB_LIME_GREEN_TXT			_T("<COLOR=50,205,50>")
#define RGB_LINEN_TXT				_T("<COLOR=250,240,230>")
#define RGB_MAGENTA_TXT				_T("<COLOR=255,0,255>")
#define RGB_MAROON_TXT				_T("<COLOR=128,0,0>")
#define RGB_MEDIUM_AQUAMARINE_TXT	_T("<COLOR=102,205,170>")
#define RGB_MEDIUM_BLUE_TXT			_T("<COLOR=0,0,205>")
#define RGB_MEDIUM_GREEN_TXT		_T("<COLOR=0,205,0>")
#define RGB_MEDIUM_ORCHID_TXT		_T("<COLOR=186,85,211>")
#define RGB_MEDIUM_PURPLE_TXT		_T("<COLOR=147,112,219>")
#define RGB_MEDIUM_RED_TXT			_T("<COLOR=205,0,0>")
#define RGB_MEDIUM_SEA_GREEN_TXT	_T("<COLOR=60,179,113>")
#define RGB_MEDIUM_SLATE_BLUE_TXT	_T("<COLOR=123,104,238>")
#define RGB_MEDIUM_SPRING_GREEN_TXT	_T("<COLOR=0,250,154>")
#define RGB_MEDIUM_TURQUOISE_TXT	_T("<COLOR=72,209,204>")
#define RGB_MEDIUM_VIOLET_RED_TXT	_T("<COLOR=199,21,133>")
#define RGB_MIDNIGHT_BLUE_TXT		_T("<COLOR=25,25,112>")
#define RGB_MINT_CREAM_TXT			_T("<COLOR=245,255,250>")
#define RGB_MISTY_ROSE_TXT			_T("<COLOR=255,228,225>")
#define RGB_MOCASSIN_TXT			_T("<COLOR=255,228,181>")
#define RGB_NAVAJO_WHITE_TXT		_T("<COLOR=255,222,173>")
#define RGB_OLD_LACE_TXT			_T("<COLOR=253,245,230>")
#define RGB_OLIVE_TXT				_T("<COLOR=51,51,0>")
#define RGB_OLIVE_DRAB_TXT			_T("<COLOR=107,142,35>")
#define RGB_ORANGE_TXT				_T("<COLOR=255,165,0>")
#define RGB_ORANGE_RED_TXT			_T("<COLOR=255,69,0>")
#define RGB_ORCHID_TXT				_T("<COLOR=218,112,214>")
#define RGB_PALE_BLUE_TXT			_T("<COLOR=153,204,255>")
#define RGB_PALE_GOLDEN_ROD_TXT		_T("<COLOR=238,232,170>")
#define RGB_PALE_GREEN_TXT			_T("<COLOR=152,251,152>")
#define RGB_PALE_TURQUOISE_TXT		_T("<COLOR=175,238,238>")
#define RGB_PALE_VIOLET_RED_TXT		_T("<COLOR=219,112,147>")
#define RGB_PAPAYA_WHIP_TXT			_T("<COLOR=255,239,213>")
#define RGB_PEACH_PUFF_TXT			_T("<COLOR=255,218,185>")
#define RGB_PERU_TXT				_T("<COLOR=205,133,63>")
#define RGB_PINK_TXT				_T("<COLOR=255,192,203>")
#define RGB_PLUM_TXT				_T("<COLOR=153,51,102>")
#define RGB_POWDER_BLUE_TXT			_T("<COLOR=176,224,230>")
#define RGB_PURPLE_TXT				_T("<COLOR=128,0,128>")
#define RGB_RED_TXT					_T("<COLOR=255,0,0>")
#define RGB_ROSE_TXT				_T("<COLOR=255,153,204>")
#define RGB_ROSY_BROWN_TXT			_T("<COLOR=188,143,143>")
#define RGB_ROYAL_BLUE_TXT			_T("<COLOR=65,105,225>")
#define RGB_SADDLE_BROWN_TXT		_T("<COLOR=139,69,19>")
#define RGB_SALMON_TXT				_T("<COLOR=250,128,114>")
#define RGB_SANDY_BROWN_TXT			_T("<COLOR=244,164,96>")
#define RGB_SEA_GREEN_TXT			_T("<COLOR=51,153,102>")
#define RGB_SEA_SHELL_TXT			_T("<COLOR=255,245,238>")
#define RGB_SIENNA_TXT				_T("<COLOR=160,82,45>")
#define RGB_SPRING_GREEN_TXT		_T("<COLOR=0,255,127>")
#define RGB_SKY_BLUE_TXT			_T("<COLOR=135,206,235>")
#define RGB_SLATE_BLUE_TXT			_T("<COLOR=106,90,205>")
#define RGB_SLATE_GRAY_TXT			_T("<COLOR=112,128,144>")
#define RGB_SNOW_TXT				_T("<COLOR=255,250,250>")
#define RGB_STEEL_BLUE_TXT			_T("<COLOR=70,130,180>")
#define RGB_TAN_TXT					_T("<COLOR=210,180,140>")
#define RGB_TOMATO_TXT				_T("<COLOR=255,99,71>")
#define RGB_TURQUOISE_TXT			_T("<COLOR=64,224,208>")
#define RGB_THISTLE_TXT				_T("<COLOR=216,191,216>")
#define RGB_VIOLET_TXT				_T("<COLOR=238,130,238>")
#define RGB_WHEAT_TXT				_T("<COLOR=245,222,179>")
#define RGB_WHITE_TXT				_T("<COLOR=255,255,255>")
#define RGB_WHITE_SMOKE_TXT			_T("<COLOR=245,245,245>")
#define RGB_YELLOW_TXT				_T("<COLOR=255,255,0>")
#define RGB_YELLOW_GREEN_TXT		_T("<COLOR=154,205,50>")
a222 3
#define RGB_ALICE_BLUE			CString(RGB_ALICE_BLUE_TXT)
#define RGB_ANTIQUE_WHITE		CString(RGB_ANTIQUE_WHITE_TXT)
#define RGB_AQUAMARINE			CString(RGB_AQUAMARINE_TXT)
a223 2
#define RGB_AZURE				CString(RGB_AZURE_TXT)
#define RGB_BEIGE				CString(RGB_BEIGE_TXT)
a224 1
#define RGB_BLANCHEDALMOND		CString(RGB_BLANCHEDALMOND_TXT)
a226 1
#define RGB_BLUE_VIOLET			CString(RGB_BLUE_VIOLET_TXT)
a227 1
#define RGB_BRIGHT_LAVENDER		CString(RGB_BRIGHT_LAVENDER_TXT)
a229 1
#define RGB_BRIGHT_YELLOW		CString(RGB_BRIGHT_YELLOW_TXT)
a230 3
#define RGB_BROWN_WOOD			CString(RGB_BROWN_WOOD_TXT)
#define RGB_BISQUE				CString(RGB_BISQUE_TXT)
#define RGB_BURLY_WOOD			CString(RGB_BURLY_WOOD_TXT)
a231 1
#define RGB_CHARTREUSE			CString(RGB_CHARTREUSE_TXT)
a234 1
#define RGB_CORNSILK			CString(RGB_CORNSILK_TXT)
a245 1
#define RGB_DARK_ORCHID			CString(RGB_DARK_ORCHID_TXT)
a249 3
#define RGB_DARK_SLATE_GRAY		CString(RGB_DARK_SLATE_GRAY_TXT)
#define RGB_DARK_TEAL			CString(RGB_DARK_TEAL_TXT)
#define RGB_DARK_TURQUOISE		CString(RGB_DARK_TURQUOISE_TXT)
a251 1
#define RGB_DARKER_GREEN		CString(RGB_DARKER_GREEN_TXT)
a257 2
#define RGB_FIRE_BRICK			CString(RGB_FIRE_BRICK_TXT)
#define RGB_FLORAL_WHITE		CString(RGB_FLORAL_WHITE_TXT)
a258 3
#define RGB_GAINSBORO			CString(RGB_GAINSBORO_TXT)
#define RGB_GHOST_WHITE			CString(RGB_GHOST_WHITE_TXT)
#define RGB_GOLD				CString(RGB_GOLD_TXT)
a264 2
#define RGB_GREEN_YELLOW		CString(RGB_GREEN_YELLOW_TXT)
#define RGB_HONEY_DEW			CString(RGB_HONEY_DEW_TXT)
a267 2
#define RGB_INDIGO_PURPLE		CString(RGB_INDIGO_PURPLE_TXT)
#define RGB_IVORY				CString(RGB_IVORY_TXT)
a269 1
#define RGB_LAVENDER_BLUSH		CString(RGB_LAVENDER_BLUSH_TXT)
a270 1
#define RGB_LEMON_CHIFFON		CString(RGB_LEMON_CHIFFON_TXT)
a272 3
#define RGB_LIGHT_CYAN			CString(RGB_LIGHT_CYAN_TXT)
#define RGB_LIGHT_GOLDEN_ROD	CString(RGB_LIGHT_GOLDEN_ROD_TXT)
#define RGB_LIGHT_GRAY			CString(RGB_LIGHT_GRAY_TXT)
a273 1
#define RGB_LIGHT_ORANGE		CString(RGB_LIGHT_ORANGE_TXT)
a277 2
#define RGB_LIGHT_SLATE_GRAY	CString(RGB_LIGHT_SLATE_GRAY_TXT)
#define RGB_LIGHT_STEEL_BLUE	CString(RGB_LIGHT_STEEL_BLUE_TXT)
a278 1
#define RGB_LIGHTER_CYAN		CString(RGB_LIGHTER_CYAN_TXT)
a281 2
#define RGB_LIME_GREEN			CString(RGB_LIME_GREEN_TXT)
#define RGB_LINEN				CString(RGB_LINEN_TXT)
a283 1
#define RGB_MEDIUM_AQUAMARINE	CString(RGB_MEDIUM_AQUAMARINE_TXT)
a289 3
#define RGB_MEDIUM_SLATE_BLUE	CString(RGB_MEDIUM_SLATE_BLUE_TXT)
#define RGB_MEDIUM_SPRING_GREEN	CString(RGB_MEDIUM_SPRING_GREEN_TXT)
#define RGB_MEDIUM_TURQUOISE	CString(RGB_MEDIUM_TURQUOISE_TXT)
a290 7
#define RGB_MIDNIGHT_BLUE		CString(RGB_MIDNIGHT_BLUE_TXT)
#define RGB_MINT_CREAM			CString(RGB_MINT_CREAM_TXT)
#define RGB_MISTY_ROSE			CString(RGB_MISTY_ROSE_TXT)
#define RGB_MOCASSIN			CString(RGB_MOCASSIN_TXT)
#define RGB_NAVAJO_WHITE		CString(RGB_NAVAJO_WHITE_TXT)
#define RGB_OLD_LACE			CString(RGB_OLD_LACE_TXT)
#define RGB_OLIVE				CString(RGB_OLIVE_TXT)
a294 4
#define RGB_PALE_BLUE			CString(RGB_PALE_BLUE_TXT)
#define RGB_PALE_GOLDEN_ROD		CString(RGB_PALE_GOLDEN_ROD_TXT)
#define RGB_PALE_GREEN			CString(RGB_PALE_GREEN_TXT)
#define RGB_PALE_TURQUOISE		CString(RGB_PALE_TURQUOISE_TXT)
a295 2
#define RGB_PAPAYA_WHIP			CString(RGB_PAPAYA_WHIP_TXT)
#define RGB_PEACH_PUFF			CString(RGB_PEACH_PUFF_TXT)
a298 1
#define RGB_POWDER_BLUE			CString(RGB_POWDER_BLUE_TXT)
a302 2
#define RGB_ROYAL_BLUE			CString(RGB_ROYAL_BLUE_TXT)
#define RGB_SADDLE_BROWN		CString(RGB_SADDLE_BROWN_TXT)
a304 2
#define RGB_SEA_GREEN			CString(RGB_SEA_GREEN_TXT)
#define RGB_SEA_SHELL			CString(RGB_SEA_SHELL_TXT)
a306 1
#define RGB_SKY_BLUE			CString(RGB_SKY_BLUE_TXT)
a307 2
#define RGB_SLATE_GRAY			CString(RGB_SLATE_GRAY_TXT)
#define RGB_SNOW				CString(RGB_SNOW_TXT)
a310 1
#define RGB_TURQUOISE			CString(RGB_TURQUOISE_TXT)
a312 1
#define RGB_WHEAT				CString(RGB_WHEAT_TXT)
a313 1
#define RGB_WHITE_SMOKE			CString(RGB_WHITE_SMOKE_TXT)
a314 1
#define RGB_YELLOW_GREEN		CString(RGB_YELLOW_GREEN_TXT)
d327 6
@


1.10
log
@Removed unused code.
@
text
@d1 15
a24 1
	static void AddDebugLogLine(UINT nID, ...);
@


1.9
log
@Moved all RGB_ to Loggable header
@
text
@d8 4
a11 4
	static void AddLogLine(bool addtostatusbar,UINT nID,...);
	static void AddLogLine(bool addtostatusbar,LPCTSTR line,...);
	static void AddDebugLogLine(UINT nID,...);
	static void AddDebugLogLine(LPCTSTR line,...);
d13 2
a14 5
	void PacketToDebugLogLine(LPCTSTR info, char * packet, uint32 size, byte opcode) const;
	void TagToDebugLogLine(LPCTSTR info, LPCTSTR tag, uint32 size, byte opcode) const;

private:	
	static void AddLogText(bool debug, bool addtostatusbar, LPCTSTR line, va_list argptr);	
@


1.8
log
@Removed AddDebugLogLine statusbar message option, added client transfer debug log option
@
text
@d19 337
@


1.7
log
@Changed uint32 to unsigned long from unsigned int and made necessary code changes. Got rid of _unsigned_ types int8,int16,int32,int64. Eliminated uint8 to avoid confusion. Use "byte".
@
text
@d10 2
a11 2
	static void AddDebugLogLine(bool addtostatusbar, UINT nID,...);
	static void AddDebugLogLine(bool addtostatusbar, LPCTSTR line,...);
@


1.6
log
@minor changes to DebugLog and remove some marks
@
text
@d13 2
a14 2
	void PacketToDebugLogLine(LPCTSTR info, char * packet, uint32 size, uint8 opcode) const;
	void TagToDebugLogLine(LPCTSTR info, LPCTSTR tag, uint32 size, uint8 opcode) const;
@


1.5
log
@unicode cleanup
@
text
@d12 1
a12 1
// DbT:Logging
d15 1
a15 1
// DbT:End
@


1.4
log
@FEATURE: data logging of unknown tags and packets [DoubleT]
@
text
@d13 2
a14 2
	void PacketToDebugLogLine(const char* info, const char* packet, uint32 size, uint8 opcode) const;
	void TagToDebugLogLine(const char* info, const char* tag, uint32 size, uint8 opcode) const;
@


1.3
log
@new helper methods
@
text
@d3 2
d12 4
@


1.2
log
@methods converted to static
@
text
@d6 6
a11 2
	static void AddLogLine(bool addtostatusbar,CString line,...);
	static void AddDebugLogLine(bool addtostatusbar,CString line,...);
@


1.1
log
@mixin class for adding logging functionality to other classes
@
text
@d6 2
a7 2
	void AddLogLine(bool addtostatusbar,CString line,...);
	void AddDebugLogLine(bool addtostatusbar,CString line,...);
@

