head	1.57;
access;
symbols
	PublicRelease_1_2e:1.56
	Interim_Release_1-2e_RC1:1.56
	PublicRelease_1_2d:1.56
	Interim_Release_1-2d_RC1:1.56
	Interim_Release_1-2d_beta1:1.56
	PublicRelease_1_2c:1.52
	Interim_Release_1-2c_RC1:1.52
	Interim_Release_1-2c_beta1:1.50
	PublicRelease_1_2b:1.50
	Interim_Release_1-2b_RC1:1.49
	PublicRelease_1_2a:1.49
	Interim_Release_1-2a_RC1:1.49
	Interim_Release_1-2a_beta2:1.46
	Interim_Release_1-2a_beta1:1.46
	PublicRelease_1_2:1.46
	Interim_Release_1-2_RC1:1.46
	Interim_Release_1-2_beta1:1.46
	PublicRelease_1_1g:1.46
	Interim_Release_1-1g_RC3:1.46
	Interim_Release_1-1g_RC2:1.46
	Interim_Release_1-1g_RC1:1.46
	Interim_Release_1-1g_beta2:1.46
	Interim_Release_1-1g_beta1:1.43
	PublicRelease_1_1f:1.43
	Interim_Release_1-1f_RC1:1.43
	PublicRelease_1_1e:1.43
	Interim_Release_1-1e_RC2:1.43
	Interim_Release_1-1e_RC1:1.43
	Interim_Release_1-1e_beta1:1.43
	PublicRelease_1_1d:1.41
	Interim_Release_1-1d_RC1:1.41
	PublicRelease_1_1c:1.41
	Interim_Release_1-1c_RC1:1.41
	Interim_Release_1-1c_beta2:1.41
	Interim_Release_1-1c_beta1:1.41
	PublicRelease_1_1b:1.39
	Interim_Release_1-1b_RC1:1.39
	PublicRelease_1_1a:1.39
	Interim_Release_1-1a_RC2:1.39
	Interim_Release_1-1a_RC1:1.38
	Interim_Release_1-1a_beta2:1.38
	Interim_Release_1-1a_beta1:1.38
	PublicRelease_1_1:1.37
	Interim_Release_1-1_beta1:1.37
	PublicRelease_1o:1.37
	Interim_Release_1o_RC1:1.37
	Interim_Release_1o_beta1:1.37
	PublicRelease_1n:1.37
	Interim_Release_1n_RC2:1.37
	Interim_Release_1n_RC1:1.37
	Interim_Release_1n_beta2:1.37
	Interim_Release_1n_beta1:1.37
	PublicRelease_1m:1.37
	Interim_Release_1m_beta1:1.37
	PublicRelease_1l:1.37
	Interim_Release_1l_RC3:1.37
	Interim_Release_1l_RC2:1.36
	Interim_Release_1l_RC1:1.35
	Interim_Release_1l_beta2:1.34
	Interim_Release_1l_beta1:1.34
	PublicRelease_1k:1.33
	Interim_Release_1k_RC4:1.33
	Interim_1k_RC3:1.33
	Interim_1k_RC2:1.33
	Interim_Release_1k_RC1:1.33
	Interim_Release_1k_beta5:1.33
	Intrerim_Release_1k_beta4:1.33
	Interim_Release_1k_beta1:1.30
	PublicRelease_1j:1.25
	Interim_Release_1J_RC3:1.25
	Interim_Release_1j_RC3:1.25
	Interim_Release_1j_RC2:1.25
	Interim_Release_1j_RC1:1.25
	Interim_Release_1j_beta2:1.24
	Interim_Release_1j_beta1:1.24
	PublicRelease_1i:1.24
	Interim_Release_1i_RC6:1.24
	Interim_Release_1i_RC3:1.23
	Interim_Release_1i_RC2:1.23
	Interim_Release_1i_RC1:1.23
	Interim_Release_1i_beta3:1.22
	Interim_Release_1i_beta2:1.20
	Interim_Release_1i_beta1:1.19
	PublicRelease_1h:1.17
	Interim_Release_1h_rc2:1.17
	Interim_Release_1h_RC1:1.17
	Interim_Release_1h_beta2:1.16
	Interim_Release_1h_beta1_now:1.15
	Interim_Release_1h_beta1:1.15
	PublicRelease_1g:1.15
	Interim_Release_1g_RC6_Final:1.15
	Interim_Release_1g_RC6:1.15
	Interim_Release_1g_RC5:1.15
	Interim_Release_1g_RC4:1.15
	Interim_Release_1g_RC3:1.14
	Interim_Release_1g_beta2:1.14
	Interim_Release_1g_beta1:1.14
	Interim_Release_1f_RC4:1.14
	Interim_Release_1f_RC3:1.14
	Interim_Release_1f_RC2:1.14
	Interim_Release_1f_RC:1.14
	Interim_Release_1f_beta2:1.13
	Interim_Release_1f_beta1:1.13
	PublicRelease_1e:1.13
	Interim_Release_1e_RC2:1.13
	Interim_Release_1e_RC:1.13
	Interim_Release_1e_beta3:1.12
	Interim_Release_1e_beta2:1.12
	Interim_Release_1e_beta2_before_kuchin:1.12
	Interim_Release_1e_beta1:1.11
	PublicRelease_1c:1.11
	featurestest:1.11.0.4
	Interim_Release_1c_RC:1.11
	Interim_Release_1c_beta2:1.11
	Interim_Release_1c_beta1:1.11
	threaded_downloadqueue:1.11.0.2
	PublicRelease_1b:1.9
	Interim_Release_1b_beta2:1.9
	Interim_Release_1b_beta1:1.8
	proxydeadlake:1.6.0.4
	PublicRelease_1a:1.6
	Interim_Release_1a_beta2:1.6
	BerkeleyDb:1.6.0.2
	Interim_Release_1a_beta1:1.6
	PublicRelease_1:1.6
	goldfish:1.6
	eMulePlus_1_RC2:1.6
	eMulePlus_26b_1RC1:1.5
	PreRelease_26b_i0e:1.5
	before_26d_merge:1.5
	Interim_Release_26b_i0d:1.2
	Interim_Release_26b_i0c:1.2
	Interim_Release_26b_i0b:1.2
	Interim_Release_26b_i0a:1.2
	systraydlg:1.2.0.4
	plus26based:1.2.0.2
	Interim_Release_25b_i0b:1.2
	Proxy_Dev:1.1
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@ * @;


1.57
date	2010.08.11.04.37.39;	author aw3;	state Exp;
branches;
next	1.56;

1.56
date	2007.12.08.09.18.15;	author eklmn;	state Exp;
branches;
next	1.55;

1.55
date	2007.11.16.20.36.37;	author eklmn;	state Exp;
branches;
next	1.54;

1.54
date	2007.11.10.23.16.33;	author eklmn;	state Exp;
branches;
next	1.53;

1.53
date	2007.10.11.18.08.35;	author fuxie-dk;	state Exp;
branches;
next	1.52;

1.52
date	2007.07.30.10.25.46;	author kush_eplus;	state Exp;
branches;
next	1.51;

1.51
date	2007.07.30.00.17.20;	author kush_eplus;	state Exp;
branches;
next	1.50;

1.50
date	2007.01.31.20.18.47;	author eklmn;	state Exp;
branches;
next	1.49;

1.49
date	2006.08.15.04.31.24;	author aw3;	state Exp;
branches;
next	1.48;

1.48
date	2006.08.14.02.38.44;	author aw3;	state Exp;
branches;
next	1.47;

1.47
date	2006.07.29.01.40.26;	author aw3;	state Exp;
branches;
next	1.46;

1.46
date	2005.09.23.10.56.08;	author eklmn;	state Exp;
branches;
next	1.45;

1.45
date	2005.09.19.22.14.59;	author eklmn;	state Exp;
branches;
next	1.44;

1.44
date	2005.08.29.03.08.07;	author aw3;	state Exp;
branches;
next	1.43;

1.43
date	2005.04.09.02.36.21;	author aw3;	state Exp;
branches;
next	1.42;

1.42
date	2005.04.04.04.36.18;	author aw3;	state Exp;
branches;
next	1.41;

1.41
date	2005.01.17.18.34.54;	author katsyonak;	state Exp;
branches;
next	1.40;

1.40
date	2005.01.06.01.16.17;	author katsyonak;	state Exp;
branches;
next	1.39;

1.39
date	2004.12.06.17.55.51;	author dongato;	state Exp;
branches;
next	1.38;

1.38
date	2004.10.29.03.26.10;	author aw3;	state Exp;
branches;
next	1.37;

1.37
date	2004.06.04.15.54.23;	author dongato;	state Exp;
branches;
next	1.36;

1.36
date	2004.06.02.18.27.35;	author kush_eplus;	state Exp;
branches;
next	1.35;

1.35
date	2004.05.25.03.17.59;	author kush_eplus;	state Exp;
branches;
next	1.34;

1.34
date	2004.05.03.08.24.59;	author katsyonak;	state Exp;
branches;
next	1.33;

1.33
date	2004.03.08.22.38.31;	author kush_eplus;	state Exp;
branches;
next	1.32;

1.32
date	2004.03.08.17.11.18;	author kush_eplus;	state Exp;
branches;
next	1.31;

1.31
date	2004.02.22.20.19.04;	author kush_eplus;	state Exp;
branches;
next	1.30;

1.30
date	2004.02.19.00.29.35;	author netwolf1;	state Exp;
branches;
next	1.29;

1.29
date	2004.02.18.23.20.55;	author kush_eplus;	state Exp;
branches;
next	1.28;

1.28
date	2004.02.18.16.25.11;	author kush_eplus;	state Exp;
branches;
next	1.27;

1.27
date	2004.02.04.19.06.00;	author morevit;	state Exp;
branches;
next	1.26;

1.26
date	2004.02.03.12.53.48;	author morevit;	state Exp;
branches;
next	1.25;

1.25
date	2004.01.10.00.07.49;	author dongato;	state Exp;
branches;
next	1.24;

1.24
date	2003.11.27.14.51.07;	author eklmn;	state Exp;
branches;
next	1.23;

1.23
date	2003.11.04.16.09.17;	author katsyonak;	state Exp;
branches;
next	1.22;

1.22
date	2003.10.31.06.47.00;	author eklmn;	state Exp;
branches;
next	1.21;

1.21
date	2003.10.26.15.57.56;	author morevit;	state Exp;
branches;
next	1.20;

1.20
date	2003.10.15.03.51.45;	author morevit;	state Exp;
branches;
next	1.19;

1.19
date	2003.09.23.16.52.50;	author morevit;	state Exp;
branches;
next	1.18;

1.18
date	2003.09.19.14.42.46;	author morevit;	state Exp;
branches;
next	1.17;

1.17
date	2003.09.05.11.12.13;	author dongato;	state Exp;
branches;
next	1.16;

1.16
date	2003.09.02.18.28.57;	author puritynn666;	state Exp;
branches;
next	1.15;

1.15
date	2003.07.08.19.35.47;	author emoulari;	state Exp;
branches;
next	1.14;

1.14
date	2003.05.11.11.37.48;	author kuchin;	state Exp;
branches;
next	1.13;

1.13
date	2003.04.26.16.28.39;	author ultras;	state Exp;
branches;
next	1.12;

1.12
date	2003.04.19.07.17.00;	author kuchin;	state Exp;
branches;
next	1.11;

1.11
date	2003.03.14.15.53.07;	author partyckip;	state Exp;
branches
	1.11.4.1;
next	1.10;

1.10
date	2003.03.13.21.16.35;	author partyckip;	state Exp;
branches;
next	1.9;

1.9
date	2003.03.08.19.27.12;	author dongato;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.05.11.23.44;	author recdvst;	state Exp;
branches;
next	1.7;

1.7
date	2003.02.28.21.00.39;	author dongato;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.19.20.53.08;	author cax2;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2003.02.16.14.31.05;	author dongato;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.16.03.21.43;	author cax2;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.14.15.32.16;	author dongato;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.02.16.46.57;	author cax2;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.18.21.22;	author cax2;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.01.28.16.54.25;	author cax2;	state Exp;
branches;
next	;

1.6.2.1
date	2003.03.01.20.59.36;	author obaldin;	state Exp;
branches;
next	;

1.11.4.1
date	2003.03.23.06.22.02;	author recdvst;	state Exp;
branches;
next	1.11.4.2;

1.11.4.2
date	2003.03.24.09.39.44;	author recdvst;	state Exp;
branches;
next	;


desc
@@


1.57
log
@Added search ed2k link support (from original) {eeeeh}; Minor renaming.
@
text
@//this file is part of eMule
//Copyright (C)2002 Merkur ( merkur-@@users.sourceforge.net / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the GNU General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#pragma once
#include "SearchListCtrl.h"
#include "IconStatic.h"
#include "ClosableTabCtrl.h"

class Packet;
class CCustomAutoComplete;

typedef struct
{
	CString sNotSearch;
	bool bDocumentSearch;
} SearchData;
typedef CMap<int, int, SearchData, SearchData> SearchMap;

class CSearchDlg : public CResizableDialog
{
	DECLARE_DYNAMIC(CSearchDlg)

public:
	CSearchDlg(CWnd* pParent = NULL);
	virtual ~CSearchDlg();

	afx_msg void OnBnClickedStart();
	afx_msg void OnTimer(UINT nIDEvent);
	afx_msg void OnBnClickedCancel();
	afx_msg void OnBnClickedSdownload();
	afx_msg void OnBnClickedClearall();
	afx_msg void OnChangeMax();
	afx_msg void OnChangeMin();
	afx_msg void OnSearchKeyDown();
	afx_msg void OnBnClickedMore();

	enum { IDD = IDD_SEARCH };

	void	Localize();
	void	DownloadSelected(bool bPaused = false);
	void	LocalSearchEnd(uint16 count, bool LocalSearchEnd);
	void	AddGlobalEd2kSearchResults(uint16 count);
	void	DeleteSearch(uint32 nSearchID);
	void	DeleteAllSearches();
	void	CreateNewTab(const CString &strSearchString, uint32 nSearchID);
	void	UpdateCatTabs();
	void	OnChangeSize(bool changedMin);
	void	SearchClipBoard();
	void	IgnoreClipBoardLinks(const CString &strLink)		{m_strLastClipBoard = strLink; }
	void	AddEd2kLinksToDownload(CString strLink,EnumCategories eCatID);
	void	AddEd2kLinksToDownload(CString strLink)		{AddEd2kLinksToDownload(strLink,CCat::GetCatIDByIndex(m_ctrlCatTabs.GetCurSel()));}
	void	DoNewEd2kSearch(const CString &strSearch, const CString &strTypeText, uint64 qwMinSize, uint64 qwMaxSize,
							 uint32 dwAvailability, const CString &strExtension, bool bDoGlobal, const CString &strSearchExclusion, uint16 nSearchID = 0);
	CString	GetNotSearch(int nSearchId);
	bool	IsDocumentSearch(int nSearchId);
	void	SaveSearchStrings();
	void	ShowSearchTabs(int iCmdShow);
	bool	IsLastSearchCanceled() const {return m_bCancelled;}
	bool	IsMoreEnabled() const {return m_bMoreEnabled;}
	void	KeepHistoryChanged();
	void	ProcessEd2kSearchLinkRequest(const TCHAR *pcSearchTerm);

public:
	CSearchListCtrl m_ctlSearchList;
	CClosableTabCtrl m_ctlSearchTabs;
	CPPToolTip m_ttip;

protected:
	void StartNewSearch();
	LRESULT OnCloseTab(WPARAM wparam, LPARAM lparam);
	LRESULT OnShowWindow(WPARAM wparam, LPARAM lparam);
	CString	CreateWebQuery();
	virtual BOOL OnNotify(WPARAM wParam, LPARAM lParam, LRESULT* pResult);

	virtual void DoDataExchange(CDataExchange* pDX);
	virtual BOOL OnInitDialog();
	virtual BOOL PreTranslateMessage(MSG* pMsg);
	afx_msg void OnNMDblclkSearchlist(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void OnTcnSelchangeTab1(NMHDR *pNMHDR, LRESULT *pResult);
	afx_msg void OnEnChangeSearchname();
	afx_msg void OnEnChangeMethod();
	afx_msg void OnBnClickedSearchReset();
	afx_msg void OnBnClickedDownloadAllEd2k();
	afx_msg void OnDestroy();

	DECLARE_MESSAGE_MAP()

private:
	Packet		*m_pGlobSearchPck;
	Packet		*m_pGlobSearchPck2;
	UINT_PTR	global_search_timer;
	CProgressCtrl m_ctlGlobalSearchProgress;
	bool		m_bCancelled;
	bool		m_bGlobalSearch;
	bool		m_bMoreEnabled;
	bool		m_bGuardCBPrompt;
	uint32		m_nSearchID;
	CComboBoxEx	methodbox;
	CComboBox	Stypebox;
	CTabCtrl	m_ctrlCatTabs;
	CString		m_strLastClipBoard;
	CImageList	m_BoxImageList;
	CIconStatic	m_ctrlSearchFrm;
	CIconStatic	m_ctrlDirectDlFrm;
	CCustomAutoComplete* m_pacSearchString;

	HICON		oldSearchLstIcon;
	SearchMap	m_SearchMap;

	uint32		m_nMoreRequestCount;
	uint16		m_uServerCount;
	bool		m_b64BitSearchPacket;

private:
	CStatic*	GetSearchLstStatic() const		{ return (CStatic*)GetDlgItem(IDC_SEARCHLST_ICO); }
	HICON		GetSearchLstIcon() const		{ return (HICON)::LoadImage(AfxGetInstanceHandle(), MAKEINTRESOURCE(IDI_SEARCHRESULTS), IMAGE_ICON, 16, 16, 0); }
	void 		GetInfo4ToolTip(NM_PPTOOLTIP_DISPLAY	*pNotify);
};
@


1.56
log
@removed the function ToQueryString()
@
text
@a17 1

a18 1
#include "types.h"
d40 1
a40 1
	afx_msg void OnBnClickedStarts();
d42 1
a42 1
	afx_msg void OnBnClickedCancels();
d48 1
a48 1
	afx_msg void OnBnClickedMores();
a64 2
	CSearchListCtrl m_ctlSearchList;
	CClosableTabCtrl m_ctlSearchTabs;
d74 5
@


1.55
log
@improved optimization (thanks Aw3)
@
text
@a126 1
	CString		ToQueryString(const CString& strQuery);
@


1.54
log
@optimization: get encoded string with minimal reallocation
@
text
@d127 1
a127 1
	CString		ToQueryString(CString strQuery);
@


1.53
log
@Added 'Keep search history' setting to preserve or not search history [Aw3];
Reduced #include dependency [Aw3].
@
text
@d127 1
a127 1
	CString		ToQueryString(const CString &str);
@


1.52
log
@Reverted back #include was moved to C-file.
@
text
@d17 1
a18 1
#pragma once
a19 2
#include "afxcmn.h"
#include "packets.h"
a20 1
#include "afxwin.h"
a22 1
#include "Loggable.h"
d24 1
d34 1
a34 1
class CSearchDlg : public CResizableDialog, public CLoggable
d73 1
a73 1
	BOOL	SaveSearchStrings();
d77 1
@


1.51
log
@#include was moved to C-file.
Suppressed level 4 warnings.
@
text
@d24 1
a28 1
class CIconStatic;
@


1.50
log
@tiny optimization
@
text
@a23 1
#include "IconStatic.h"
d28 1
a36 1
// CSearchDlg dialog
d42 1
a42 1
	CSearchDlg(CWnd* pParent = NULL);   // standard constructor
@


1.49
log
@Large file size support preparations.
@
text
@d68 1
a68 1
	void	IgnoreClipBoardLinks(CString strLink)		{m_strLastClipBoard = strLink; }
@


1.48
log
@Large file size support preparations.
@
text
@d127 1
@


1.47
log
@Renamed AddUDPResult -> AddGlobalEd2kSearchResults (original).
@
text
@d63 1
a63 1
	void	DeleteAllSearchs();
d73 1
a73 1
	void	DoNewSearch(const CString &strSearch, const CString &strTypeText, uint32 dwMinSize, uint32 dwMaxSize,
@


1.46
log
@correction for string processing by tooltip notify. thanks Aw3
@
text
@d61 1
a61 1
	void	AddUDPResult(uint16 count);
@


1.45
log
@fixed hanging tooltip by focus switch; the "OnToolTipNotify" replaced over OnNotify because it works faster as using ON_NOTIFY_EX_RANGE(...)
@
text
@d132 1
a132 1
	CString 		GetInfo4ToolTip(NM_PPTOOLTIP_DISPLAY	*pNotify);
@


1.44
log
@Modified preparation of the server search request packet to make it clearer;
Arranged class members for better alignment; Improved string processing.
@
text
@d88 1
a96 1
	afx_msg BOOL OnToolTipNotify(UINT id, NMHDR *pNMH, LRESULT *pResult);
d132 1
@


1.43
log
@Removed some unused method.
@
text
@d73 2
a74 2
	void	DoNewSearch(CString strSearch, CString strTypeText, unsigned long dwMinSize, unsigned long dwMaxSize,
							 int iAvailability, CString strExtension, bool bDoGlobal, CString strSearchExclusion, uint16 nSearchID = 0);
d104 2
a105 1
	Packet*		m_pGlobalSearchPacket;
a108 1
	uint16		m_uServerCount;
d111 1
a116 1
	bool		m_bGuardCBPrompt;
d122 2
a123 2
	HICON oldSearchLstIcon;
	SearchMap m_SearchMap;
d125 2
a126 16
	uint32	m_nMoreRequestCount;

//	Constants definition
	static const long SEARCH_PARAMID_TYPE = 0x00030001;
	static const long SEARCH_PARAMID_EXTENSION = 0x00040001;
	static const long SEARCH_PARAMID_AVAILABILITY = 0x15000101;
	static const long SEARCH_PARAMID_MINSIZE = 0x02000101;
	static const long SEARCH_PARAMID_MAXSIZE = 0x02000102;

	static const byte SEARCH_PARAMTYPE_STRING = 1;
	static const byte SEARCH_PARAMTYPE_TYPE = 2;
	static const byte SEARCH_PARAMTYPE_NUMERIC = 3;

	static const uint16 SEARCH_OPPARAM_AND = 0x0000;
	static const uint16 SEARCH_OPPARAM_OR  = 0x0100;
	static const uint16 SEARCH_OPPARAM_NOT = 0x0200;
@


1.42
log
@Improved string processing; Minor reorganization.
@
text
@a97 1
	afx_msg void OnStnClickedSearchextensionLbl();
@


1.41
log
@Moved GetItemUnderMouse to otherfunctions.
@
text
@a17 1

d19 1
a19 1
#include "searchlistctrl.h"
a72 1
	CString	ToQueryString(CString str);
d97 4
d119 2
a120 2
	CIconStatic m_ctrlSearchFrm;
	CIconStatic m_ctrlDirectDlFrm;
a123 2
	CStatic* GetSearchLstStatic() const { return (CStatic*)GetDlgItem(IDC_SEARCHLST_ICO); }
	HICON GetSearchLstIcon() const { return (HICON)::LoadImage(AfxGetInstanceHandle(), MAKEINTRESOURCE(IDI_SEARCHRESULTS), IMAGE_ICON, 16, 16, 0); }
d126 2
d142 1
a142 5
public:
	afx_msg void OnBnClickedSearchReset();
	afx_msg void OnStnClickedSearchextensionLbl();
	afx_msg void OnBnClickedDownloadAllEd2k();
	afx_msg void OnDestroy();
d144 3
a146 1
	uint32	m_nMoreRequestCount;
@


1.40
log
@Added tooltips to the Search & Shared Files lists.
@
text
@a93 1
	int	GetItemUnderMouse(CListCtrl* ctrl);
@


1.39
log
@Changes to last features
@
text
@d83 1
d94 1
d99 1
@


1.38
log
@Removed unused closable tab stuff to reduce used memory and GDI resources;
Improved string processing.
@
text
@d71 1
a71 1
	void	AddEd2kLinksToDownload(CString strLink)	{AddEd2kLinksToDownload(strLink,CCat::GetCatIDByIndex(m_ctrlCatTabs.GetCurSel()));}
d90 1
a90 1
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
d118 1
a118 1
	//Resources cleanup - [TwoBottle Mod]
d124 1
a124 1
	// constants definition
@


1.37
log
@Moved FinSharedFiles to a timer to fix issues with hashing hung on start
Fixed Search buttons activation issues and More not working
@
text
@d25 2
a26 2
#include "iconstatic.h"
#include "closabletabctrl.h"
d65 1
a65 1
	void	CreateNewTab(CString searchString,uint32 nSearchID);
d74 1
a74 1
	CString	ToQueryString(CString str); //Cax2
d77 1
a77 1
    CString	GetNotSearch(int nSearchId);
a110 1
	CImageList	m_pImageList;
@


1.36
log
@updated MobileMule up to 0.8a
@
text
@d82 1
d107 1
@


1.35
log
@fix for searches added to no tab
updated the previous "Only one Search at a time can be done now" fix by EC to handle a return in one of the search edit control
@
text
@d76 1
a76 1
							 int iAvailability, CString strExtension, bool bDoGlobal, CString strSearchExclusion);
@


1.34
log
@added 'Download (Paused)' to Searchlist context menu
@
text
@d81 1
@


1.33
log
@removed old search code (forgotted this one, thanks to Syrus for pointed out)
@
text
@d60 1
a60 1
	void	DownloadSelected();
@


1.32
log
@removed old search code + some fix and changes
@
text
@a60 1
#ifdef NEW_SEARCH_ENABLED
a61 3
#else
	void	LocalSearchEnd(uint16 count);
#endif // NEW_SEARCH_ENABLED
a140 1
#ifdef NEW_SEARCH_ENABLED
a142 1
#endif NEW_SEARCH_ENABLED
@


1.31
log
@formatting;
more button code comitted but not compiled as default
@
text
@a54 1
#ifdef NEW_SEARCH_ENABLED
a55 1
#endif // NEW_SEARCH_ENABLED
@


1.30
log
@added "Watch clipboard for ed2k links"
@
text
@d55 3
d63 3
d67 1
d147 4
@


1.29
log
@formatting;
removed duplicate code for Starting a Search and Creates ED2KLinks;
first few changes in both code and gui to implement the new search method (ED2KProtocol), don't worry :)
@
text
@d66 5
a70 3
	void	OnChangeSize(bool changedMin);		//Cax2
	void	AddEd2kLinksToDownload(CString strlink,EnumCategories eCatID);
	void	AddEd2kLinksToDownload(CString strlink)	{AddEd2kLinksToDownload(strlink,CCat::GetCatIDByIndex(m_ctrlCatTabs.GetCurSel()));}
d109 2
@


1.28
log
@formatting;
minor change in LanCast preferences loading;
changed the SearchDlg code to not duplicate the code
@
text
@d77 1
d124 3
a126 3
	static const byte SEARCH_PARAMTYPE_STRING=1;
	static const byte SEARCH_PARAMTYPE_TYPE=2;
	static const byte SEARCH_PARAMTYPE_NUMERIC=3;
@


1.27
log
@Formatting, comments, and name changes.
@
text
@d31 1
a31 1
typedef struct 
d46 1
a46 1
	
d72 2
a73 2
	void	DoNewSearch(CString searchString, CString typeText, unsigned long min, unsigned long max, 
			int availability, CString extension, bool doGlobal);
d77 1
a77 1
	
d95 1
a95 1
	Packet*		m_pGlobalSearchPacket;		
@


1.26
log
@Formatting, comments, and name changes.
@
text
@d95 1
a95 1
	Packet*		pSearchPacket;		
d97 1
a97 1
	CProgressCtrl searchprogress;
d100 1
a100 1
	bool		globsearch;
d117 5
a121 5
	static const long typeNemonic = 0x00030001;
	static const long extensionNemonic = 0x00040001;
	static const long availabilityNemonic = 0x15000101;
	static const long minNemonic = 0x02000101;
	static const long maxNemonic = 0x02000102;
d123 3
a125 3
	static const byte stringParameter=1;
	static const byte typeParameter=2;
	static const byte numericParameter=3;
d127 3
a129 2
	static const uint16 andParameter=0x0000;
	static const uint16 orParameter=0x0100;
@


1.25
log
@Fixed documents search
@
text
@d98 2
a99 2
	bool		canceled;
	uint16		servercount;
@


1.24
log
@fixed search by "Any" type & some optimization
@
text
@d72 2
a73 2
	void	DoNewSearch(CString searchString, CString typeText,unsigned long min, unsigned long max, 
			int avaibility,CString extension,bool doGlobal );
d98 1
a98 1
	bool		canceld;
d119 1
a119 1
	static const long avaibilityNemonic = 0x15000101;
@


1.23
log
@added auto-complete for search text (search history) from official v0.30c
@
text
@d115 14
@


1.22
log
@1) compession support within communicatio client<->server
2) extended UDP file search support
@
text
@d29 2
d54 2
d74 1
a74 1
	CString	GetNotSearch(int nSearchId);
d76 1
d89 1
a89 1
	//afx_msg void OnEnChangeSearchname(); // EC 08.07.03
d109 1
@


1.21
log
@Formatting, comments, and name changes.
Fixed a couple of sorting related bugs in SearchListCtrl.
@
text
@d90 1
a90 1
	Packet*		searchpacket;		
@


1.20
log
@DownloadListCtrl rewrite.
Changed Category ID types to an enumeration.
More async update work.
The usual formatting, comments, and name changes.
@
text
@d65 2
a66 2
	CSearchListCtrl searchlistctrl;
	CClosableTabCtrl searchselect;
@


1.19
log
@Category rewrite with predefined status/media type categories.
@
text
@d63 2
a64 2
	void	AddEd2kLinksToDownload(CString strlink,uint8 cat);
	void	AddEd2kLinksToDownload(CString strlink)	{AddEd2kLinksToDownload(strlink,m_ctrlCatTabs.GetCurSel());}
@


1.18
log
@Second batch of name changes
@
text
@d64 1
a64 1
	void	AddEd2kLinksToDownload(CString strlink)	{AddEd2kLinksToDownload(strlink,m_cattabs.GetCurSel());}
d100 1
a100 1
	CTabCtrl	m_cattabs;
@


1.17
log
@Added Category missing feature in Search Window.
@
text
@d99 1
a99 1
	CImageList	m_ImageList;
@


1.16
log
@merging category code for webserver
@
text
@d61 1
@


1.15
log
@BUGFIX for  0000304
@
text
@d62 2
a63 1
	void	AddEd2kLinksToDownload(CString strlink);
d99 1
a100 1

@


1.14
log
@documents search and 'NOT' search filter
@
text
@d82 1
a82 1
	afx_msg void OnEnChangeSearchname();
@


1.13
log
@#0000160
feature
When opening the search window make the Name field active automatically
@
text
@d29 7
d68 2
d106 1
@


1.12
log
@Upgrade to webserver official 0.28a
@
text
@d65 1
@


1.11
log
@converted to new logging method
@
text
@d55 1
d59 2
@


1.11.4.1
log
@27a partial merge
@
text
@a57 2
	void	SearchClipBoard();
	void	AddEd2kLinksToDownload(CString strlink);
a85 2
	CString		m_lastclpbrd;
	bool		m_guardCBPrompt;
@


1.11.4.2
log
@27c
@
text
@a59 1
	void	IgnoreClipBoardLinks(CString strlink)		{m_lastclpbrd = strlink; }
@


1.10
log
@fixed resource leak
@
text
@d27 1
d30 1
a30 1
class CSearchDlg : public CResizableDialog
@


1.9
log
@Last changes to context menues and Fakecheck code removal.
@
text
@d88 4
a91 1

d96 1
@


1.8
log
@enkeydev stuff
@
text
@a52 1
	void	ed2kfilesFakecheck(); // DonGato
a89 1
	afx_msg void OnBnClickedFakecheck();
@


1.7
log
@Paused files shown in grey and Selected search methos stored between sessions.
@
text
@d94 1
@


1.6
log
@minor graphic improvements. search bugfix
@
text
@d70 1
@


1.6.2.1
log
@keeping in sync with the main cvs line
@
text
@a69 1
	afx_msg void OnEnChangeMethod();
@


1.5
log
@Chnages to position of controls on Search and SysTray.
@
text
@d81 1
a81 1
	CComboBox	typebox;
d84 1
@


1.4
log
@added jigle parameters to search code
@
text
@d91 1
@


1.3
log
@Updates to Search, System Tray tooltip and System Tray Menu.
@
text
@d42 2
d54 1
d57 1
@


1.2
log
@stopped files bugfix & updated search dialog
@
text
@a81 1
	CIconStatic m_ctrlWebSearchFrm;
@


1.1
log
@*** empty log message ***
@
text
@d87 1
@


1.1.4.1
log
@updating this branch...
@
text
@@

