head	1.52;
access;
symbols
	PublicRelease_1_2e:1.52
	Interim_Release_1-2e_RC1:1.52
	PublicRelease_1_2d:1.52
	Interim_Release_1-2d_RC1:1.52
	Interim_Release_1-2d_beta1:1.52
	PublicRelease_1_2c:1.49
	Interim_Release_1-2c_RC1:1.49
	Interim_Release_1-2c_beta1:1.48
	PublicRelease_1_2b:1.48
	Interim_Release_1-2b_RC1:1.48
	PublicRelease_1_2a:1.48
	Interim_Release_1-2a_RC1:1.48
	Interim_Release_1-2a_beta2:1.48
	Interim_Release_1-2a_beta1:1.48
	PublicRelease_1_2:1.48
	Interim_Release_1-2_RC1:1.48
	Interim_Release_1-2_beta1:1.48
	PublicRelease_1_1g:1.48
	Interim_Release_1-1g_RC3:1.48
	Interim_Release_1-1g_RC2:1.48
	Interim_Release_1-1g_RC1:1.48
	Interim_Release_1-1g_beta2:1.46
	Interim_Release_1-1g_beta1:1.46
	PublicRelease_1_1f:1.45
	Interim_Release_1-1f_RC1:1.45
	PublicRelease_1_1e:1.45
	Interim_Release_1-1e_RC2:1.45
	Interim_Release_1-1e_RC1:1.45
	Interim_Release_1-1e_beta1:1.45
	PublicRelease_1_1d:1.45
	Interim_Release_1-1d_RC1:1.45
	PublicRelease_1_1c:1.45
	Interim_Release_1-1c_RC1:1.45
	Interim_Release_1-1c_beta2:1.45
	Interim_Release_1-1c_beta1:1.45
	PublicRelease_1_1b:1.45
	Interim_Release_1-1b_RC1:1.45
	PublicRelease_1_1a:1.45
	Interim_Release_1-1a_RC2:1.45
	Interim_Release_1-1a_RC1:1.45
	Interim_Release_1-1a_beta2:1.45
	Interim_Release_1-1a_beta1:1.45
	PublicRelease_1_1:1.45
	Interim_Release_1-1_beta1:1.45
	PublicRelease_1o:1.45
	Interim_Release_1o_RC1:1.45
	Interim_Release_1o_beta1:1.45
	PublicRelease_1n:1.45
	Interim_Release_1n_RC2:1.45
	Interim_Release_1n_RC1:1.45
	Interim_Release_1n_beta2:1.45
	Interim_Release_1n_beta1:1.45
	PublicRelease_1m:1.44
	Interim_Release_1m_beta1:1.44
	PublicRelease_1l:1.42
	Interim_Release_1l_RC3:1.42
	Interim_Release_1l_RC2:1.41
	Interim_Release_1l_RC1:1.40
	Interim_Release_1l_beta2:1.40
	Interim_Release_1l_beta1:1.40
	PublicRelease_1k:1.38
	Interim_Release_1k_RC4:1.38
	Interim_1k_RC3:1.38
	Interim_1k_RC2:1.38
	Interim_Release_1k_RC1:1.38
	Interim_Release_1k_beta5:1.37
	Intrerim_Release_1k_beta4:1.37
	Interim_Release_1k_beta1:1.33
	PublicRelease_1j:1.29
	Interim_Release_1J_RC3:1.29
	Interim_Release_1j_RC3:1.29
	Interim_Release_1j_RC2:1.29
	Interim_Release_1j_RC1:1.29
	Interim_Release_1j_beta2:1.29
	Interim_Release_1j_beta1:1.29
	PublicRelease_1i:1.29
	Interim_Release_1i_RC6:1.29
	Interim_Release_1i_RC3:1.29
	Interim_Release_1i_RC2:1.29
	Interim_Release_1i_RC1:1.29
	Interim_Release_1i_beta3:1.29
	Interim_Release_1i_beta2:1.29
	Interim_Release_1i_beta1:1.25
	PublicRelease_1h:1.19
	Interim_Release_1h_rc2:1.19
	Interim_Release_1h_RC1:1.19
	Interim_Release_1h_beta2:1.18
	Interim_Release_1h_beta1_now:1.15
	Interim_Release_1h_beta1:1.15
	PublicRelease_1g:1.13
	Interim_Release_1g_RC6_Final:1.13
	Interim_Release_1g_RC6:1.13
	Interim_Release_1g_RC5:1.13
	Interim_Release_1g_RC4:1.13
	Interim_Release_1g_RC3:1.13
	Interim_Release_1g_beta2:1.11
	Interim_Release_1g_beta1:1.11
	Interim_Release_1f_RC4:1.9
	Interim_Release_1f_RC3:1.9
	Interim_Release_1f_RC2:1.9
	Interim_Release_1f_RC:1.9
	Interim_Release_1f_beta2:1.9
	Interim_Release_1f_beta1:1.9
	PublicRelease_1e:1.9
	Interim_Release_1e_RC2:1.9
	Interim_Release_1e_RC:1.9
	Interim_Release_1e_beta3:1.9
	Interim_Release_1e_beta2:1.9
	Interim_Release_1e_beta2_before_kuchin:1.9
	Interim_Release_1e_beta1:1.9
	PublicRelease_1c:1.9
	featurestest:1.9.0.4
	Interim_Release_1c_RC:1.9
	Interim_Release_1c_beta2:1.9
	Interim_Release_1c_beta1:1.9
	threaded_downloadqueue:1.9.0.2
	PublicRelease_1b:1.9
	Interim_Release_1b_beta2:1.9
	Interim_Release_1b_beta1:1.8
	proxydeadlake:1.7.0.2
	PublicRelease_1a:1.7
	Interim_Release_1a_beta2:1.7
	BerkeleyDb:1.6.0.2
	Interim_Release_1a_beta1:1.6
	PublicRelease_1:1.6
	goldfish:1.6
	eMulePlus_1_RC2:1.6
	eMulePlus_26b_1RC1:1.5
	PreRelease_26b_i0e:1.5
	before_26d_merge:1.5
	Interim_Release_26b_i0d:1.4
	Interim_Release_26b_i0c:1.4
	Interim_Release_26b_i0b:1.4
	Interim_Release_26b_i0a:1.4
	systraydlg:1.4.0.4
	plus26based:1.4.0.2
	Interim_Release_25b_i0b:1.4
	Proxy_Dev:1.3
	Interim_Release_25b_i0a:1.2.2.1
	proxytest:1.2.2.1.0.2
	official_sockets:1.2.0.2
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@// @;


1.52
date	2008.02.10.05.00.30;	author aw3;	state Exp;
branches;
next	1.51;

1.51
date	2007.12.30.04.43.31;	author aw3;	state Exp;
branches;
next	1.50;

1.50
date	2007.10.11.18.07.55;	author fuxie-dk;	state Exp;
branches;
next	1.49;

1.49
date	2007.04.02.23.14.14;	author kush_eplus;	state Exp;
branches;
next	1.48;

1.48
date	2005.11.27.22.11.48;	author eklmn;	state Exp;
branches;
next	1.47;

1.47
date	2005.11.27.20.31.05;	author eklmn;	state Exp;
branches;
next	1.46;

1.46
date	2005.08.20.22.42.01;	author aw3;	state Exp;
branches;
next	1.45;

1.45
date	2004.07.12.14.10.42;	author katsyonak;	state Exp;
branches;
next	1.44;

1.44
date	2004.06.20.19.15.24;	author katsyonak;	state Exp;
branches;
next	1.43;

1.43
date	2004.06.19.05.34.24;	author aw3;	state Exp;
branches;
next	1.42;

1.42
date	2004.06.07.16.36.40;	author katsyonak;	state Exp;
branches;
next	1.41;

1.41
date	2004.05.31.20.02.34;	author aw3;	state Exp;
branches;
next	1.40;

1.40
date	2004.04.25.02.33.04;	author dongato;	state Exp;
branches;
next	1.39;

1.39
date	2004.04.23.22.13.50;	author katsyonak;	state Exp;
branches;
next	1.38;

1.38
date	2004.03.27.19.39.45;	author dongato;	state Exp;
branches;
next	1.37;

1.37
date	2004.03.17.23.09.13;	author aw3;	state Exp;
branches;
next	1.36;

1.36
date	2004.03.15.21.32.34;	author syrus77;	state Exp;
branches;
next	1.35;

1.35
date	2004.03.11.05.07.43;	author aw3;	state Exp;
branches;
next	1.34;

1.34
date	2004.03.09.22.58.54;	author syrus77;	state Exp;
branches;
next	1.33;

1.33
date	2004.02.15.11.55.57;	author morevit;	state Exp;
branches;
next	1.32;

1.32
date	2004.02.05.11.56.06;	author morevit;	state Exp;
branches;
next	1.31;

1.31
date	2004.02.05.00.00.00;	author kush_eplus;	state Exp;
branches;
next	1.30;

1.30
date	2004.02.04.13.40.58;	author kush_eplus;	state Exp;
branches;
next	1.29;

1.29
date	2003.10.15.03.51.45;	author morevit;	state Exp;
branches;
next	1.28;

1.28
date	2003.10.08.15.39.48;	author morevit;	state Exp;
branches;
next	1.27;

1.27
date	2003.10.07.11.36.32;	author dongato;	state Exp;
branches;
next	1.26;

1.26
date	2003.10.06.13.24.11;	author dongato;	state Exp;
branches;
next	1.25;

1.25
date	2003.09.23.17.21.24;	author morevit;	state Exp;
branches;
next	1.24;

1.24
date	2003.09.23.16.52.49;	author morevit;	state Exp;
branches;
next	1.23;

1.23
date	2003.09.23.13.50.35;	author dongato;	state Exp;
branches;
next	1.22;

1.22
date	2003.09.22.16.40.49;	author morevit;	state Exp;
branches;
next	1.21;

1.21
date	2003.09.20.15.39.31;	author morevit;	state Exp;
branches;
next	1.20;

1.20
date	2003.09.19.00.13.38;	author morevit;	state Exp;
branches;
next	1.19;

1.19
date	2003.09.10.20.39.22;	author dongato;	state Exp;
branches;
next	1.18;

1.18
date	2003.09.04.03.53.30;	author dongato;	state Exp;
branches;
next	1.17;

1.17
date	2003.08.21.00.56.03;	author dongato;	state Exp;
branches;
next	1.16;

1.16
date	2003.08.19.17.32.46;	author dongato;	state Exp;
branches;
next	1.15;

1.15
date	2003.08.12.19.56.15;	author partyckip;	state Exp;
branches;
next	1.14;

1.14
date	2003.07.29.09.09.04;	author dongato;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.28.01.23.44;	author dongato;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.14.13.05.58;	author partyckip;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.01.10.08.44;	author partyckip;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.31.15.38.57;	author partyckip;	state Exp;
branches;
next	1.9;

1.9
date	2003.03.08.12.09.42;	author recdvst;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.01.12.48.30;	author dongato;	state Exp;
branches;
next	1.7;

1.7
date	2003.02.25.15.36.07;	author dongato;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.18.22.38.35;	author obaldin;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2003.02.16.22.01.48;	author lord_kiron;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.02.13.27.42;	author kuchin;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.02.03.39.55;	author cax2;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.26.23.10.22;	author pooz;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2003.01.21.18.21.21;	author cax2;	state Exp;
branches;
next	;

1.2.2.1
date	2003.01.28.16.54.23;	author cax2;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2003.02.02.02.36.27;	author cax2;	state Exp;
branches;
next	;

1.6.2.1
date	2003.02.28.22.44.55;	author obaldin;	state Exp;
branches;
next	1.6.2.2;

1.6.2.2
date	2003.03.01.20.59.36;	author obaldin;	state Exp;
branches;
next	;


desc
@@


1.52
log
@Suppressed compiler warnings; Formatting.
@
text
@//	this file is part of eMule Plus
//
//	This program is free software; you can redistribute it and/or
//	modify it under the terms of the GNU General Public License
//	as published by the Free Software Foundation; either
//	version 2 of the License, or (at your option) any later version.
//
//	This program is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU General Public License for more details.
//
//	You should have received a copy of the GNU General Public License
//	along with this program; if not, write to the Free Software
//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

#include "stdafx.h"
#include "emule.h"
#include "PPgWindow.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

IMPLEMENT_DYNAMIC(CPPgWindow, CPropertyPage)
CPPgWindow::CPPgWindow()
	: CPropertyPage(CPPgWindow::IDD)
	, m_bStartMin(FALSE)
	, m_bMinTray(FALSE)
	, m_bCloseToTray(FALSE)
	, m_bPromptOnExit(FALSE)
	, m_bPromptOnDisconnect(FALSE)
	, m_bPromptOnFriendDel(FALSE)
	, m_bBringToForeground(FALSE)
	, m_bShowRateOnTitle(FALSE)
	, m_bShowSpeedMeterOnToolbar(FALSE)
{
}

CPPgWindow::~CPPgWindow()
{
}

void CPPgWindow::DoDataExchange(CDataExchange* pDX)
{
	CPropertyPage::DoDataExchange(pDX);
	DDX_Check(pDX, IDC_STARTMIN, m_bStartMin);
	DDX_Check(pDX, IDC_MINTRAY, m_bMinTray);
	DDX_Check(pDX, IDC_CB_TBN_CLOSETOTRAY, m_bCloseToTray);
	DDX_Check(pDX, IDC_EXIT, m_bPromptOnExit);
	DDX_Check(pDX, IDC_COMFIRM_DISCONNECT, m_bPromptOnDisconnect);
	DDX_Check(pDX, IDC_COMFIRM_FRIENDDEL, m_bPromptOnFriendDel);
	DDX_Check(pDX, IDC_BRINGTOFOREGROUND, m_bBringToForeground);
	DDX_Check(pDX, IDC_SHOWRATEONTITLE, m_bShowRateOnTitle);
	DDX_Check(pDX, IDC_TBSPEEDMETER, m_bShowSpeedMeterOnToolbar);
	DDX_Check(pDX, IDC_KEEP_SEARCH_HISTORY, m_bKeepSearchHistory);
	DDX_Control(pDX, IDC_USEDFONT, fontPreviewCombo);
	DDX_Control(pDX, IDC_USEDFONTSIZE, fontSizeCombo);
}

BEGIN_MESSAGE_MAP(CPPgWindow, CPropertyPage)
	ON_BN_CLICKED(IDC_STARTMIN, OnSettingsChange)
	ON_BN_CLICKED(IDC_MINTRAY, OnSettingsChange)
	ON_BN_CLICKED(IDC_EXIT, OnSettingsChange)
	ON_BN_CLICKED(IDC_COMFIRM_DISCONNECT, OnSettingsChange)
	ON_BN_CLICKED(IDC_COMFIRM_FRIENDDEL, OnSettingsChange)
	ON_BN_CLICKED(IDC_BRINGTOFOREGROUND, OnSettingsChange)
	ON_BN_CLICKED(IDC_CB_TBN_CLOSETOTRAY, OnSettingsChange)
	ON_CBN_SELCHANGE(IDC_USEDFONT, OnSettingsChange)
	ON_CBN_SELCHANGE(IDC_USEDFONTSIZE, OnSettingsChange)
	ON_BN_CLICKED(IDC_SHOWRATEONTITLE, OnSettingsChange)
	ON_BN_CLICKED(IDC_TBSPEEDMETER, OnSettingsChange)
	ON_BN_CLICKED(IDC_KEEP_SEARCH_HISTORY, OnSettingsChange)
END_MESSAGE_MAP()

BOOL CPPgWindow::OnInitDialog()
{
	CPropertyPage::OnInitDialog();

	fontPreviewCombo.m_style = CFontPreviewCombo::NAME_ONLY;
	fontPreviewCombo.Init();

	fontSizeCombo.AddString(_T("8"));
	fontSizeCombo.AddString(_T("10"));
	fontSizeCombo.AddString(_T("12"));
	LoadSettings();
	Localize();

	return TRUE;
}

void CPPgWindow::LoadSettings(void)
{
	m_bStartMin = m_pPrefs->GetStartMinimized();
	m_bMinTray = m_pPrefs->DoMinToTray();
	m_bPromptOnExit = m_pPrefs->IsConfirmExitEnabled();
	m_bPromptOnDisconnect = m_pPrefs->IsConfirmDisconnectEnabled();
	m_bPromptOnFriendDel = m_pPrefs->IsConfirmFriendDelEnabled();
	m_bBringToForeground = m_pPrefs->IsBringToFront();
	m_bCloseToTray = m_pPrefs->GetCloseToTray();
	m_bShowRateOnTitle = m_pPrefs->ShowRatesOnTitle();
	m_bShowSpeedMeterOnToolbar = m_pPrefs->GetShowToolbarSpeedMeter();
	m_bKeepSearchHistory = m_pPrefs->GetKeepSearchHistory();

	int iFontIdx = fontPreviewCombo.FindStringExact(0, m_pPrefs->GetUsedFont());

	if (iFontIdx == LB_ERR)
		iFontIdx = 0;
	fontPreviewCombo.SetCurSel(iFontIdx);
	fontSizeCombo.SetCurSel(0);
	if (m_pPrefs->GetFontSize())
		fontSizeCombo.SetCurSel((int)((m_pPrefs->GetFontSize()-80)/20));

	UpdateData(FALSE);

	SetModified(FALSE);
}

BOOL CPPgWindow::OnApply()
{
	if(m_bModified)
	{
		UpdateData(TRUE);

		byte mintotray_old = m_pPrefs->DoMinToTray();

		m_pPrefs->SetStartMinimized(B2b(m_bStartMin));
		m_pPrefs->SetMinToTray(B2b(m_bMinTray));
		m_pPrefs->SetConfirmExitEnabled(B2b(m_bPromptOnExit));
		m_pPrefs->SetConfirmDisconnectEnabled(B2b(m_bPromptOnDisconnect));
		m_pPrefs->SetConfirmFriendDelEnabled(B2b(m_bPromptOnFriendDel));
		m_pPrefs->SetBringToFront(B2b(m_bBringToForeground));
		m_pPrefs->SetCloseToTray(B2b(m_bCloseToTray));
		m_pPrefs->SetRatesOnTitle(B2b(m_bShowRateOnTitle));
		m_pPrefs->SetShowToolbarSpeedMeter(B2b(m_bShowSpeedMeterOnToolbar));
		if (B2b(m_bKeepSearchHistory) != m_pPrefs->GetKeepSearchHistory())
		{
			m_pPrefs->SetKeepSearchHistory(B2b(m_bKeepSearchHistory));
			if (!m_bKeepSearchHistory)	//reset current history
				g_App.m_pMDlg->m_dlgSearch.KeepHistoryChanged();
		}

		if (mintotray_old != (byte)m_pPrefs->DoMinToTray())
		{
			g_App.m_pMDlg->TraySetMinimizeToTray(m_pPrefs->GetMinTrayPTR());
			g_App.m_pMDlg->TrayMinimizeToTrayChanged();
		}

		CString buffer;
		fontPreviewCombo.GetWindowText(buffer);
		m_pPrefs->SetUsedFont(buffer);
		m_pPrefs->SetFontSize(static_cast<byte>(fontSizeCombo.GetCurSel() * 20 + 80));
		// Font update
		g_App.m_pMDlg->m_fontDefault.DeleteObject();
		g_App.m_pMDlg->m_fontDefault.CreatePointFont(m_pPrefs->GetFontSize(),buffer);
		g_App.m_pMDlg->m_wndServer.InitFont();
		g_App.m_pMDlg->m_wndIRC.UpdateFont();
		g_App.m_pMDlg->m_wndChat.m_ctlChatSelector.UpdateFont();

		g_App.m_pMDlg->m_wndTransfer.m_ctlDownloadList.SetStyle();
		g_App.m_pMDlg->m_ctlToolBar.ShowSpeedMeter(m_pPrefs->GetShowToolbarSpeedMeter());

		SetModified(FALSE);

		if (!g_App.m_pPrefs->ShowRatesOnTitle())
			g_App.m_pMDlg->SetWindowText(CLIENT_NAME_WITH_VER);
	}

	return CPropertyPage::OnApply();
}

void CPPgWindow::Localize(void)
{
	static const uint16 s_auResTbl[][2] =
	{
		{ IDC_STARTMIN, IDS_PREF_STARTMIN },
		{ IDC_MINTRAY, IDS_MINIMIZE_TO_SYSTRAY },
		{ IDC_EXIT, IDS_PW_PROMPT },
		{ IDC_COMFIRM_DISCONNECT, IDS_PW_PROMPT_DISCONNECT },
		{ IDC_COMFIRM_FRIENDDEL, IDS_PW_PROMPT_FRIENDDEL },
		{ IDC_BRINGTOFOREGROUND, IDS_PW_FRONT },
		{ IDC_CB_TBN_CLOSETOTRAY, IDS_PW_TBN_CLOSETOTRAY },
		{ IDC_SHOWRATEONTITLE, IDS_SHOWRATEONTITLE },
		{ IDC_TBSPEEDMETER, IDS_PW_SHOWTOOLBARSPEEDMETER },
		{ IDC_USEDFONT_LBL, IDS_USEDFONT_LBL },
		{ IDC_KEEP_SEARCH_HISTORY, IDS_KEEP_SEARCH_HISTORY }
	};

	if (::IsWindow(m_hWnd))
	{
		CString	strRes;

		for (uint32 i = 0; i < ARRSIZE(s_auResTbl); i++)
		{
			::GetResString(&strRes, static_cast<UINT>(s_auResTbl[i][1]));
			SetDlgItemText(s_auResTbl[i][0], strRes);
		}
	}
}
@


1.51
log
@Removed old not used localization.
@
text
@d30 9
a38 9
	, startMin(FALSE)
	, minTray(FALSE)
	, closeToTray(FALSE)
	, bPromptOnExit(FALSE)
	, bPromptOnDisconnect(FALSE)
	, bPromptOnFriendDel(FALSE)
	, bringToForeground(FALSE)
	, showRateOnTitle(FALSE)
	, showSpeedMeterOnToolbar(FALSE)
d49 9
a57 9
	DDX_Check(pDX, IDC_STARTMIN, startMin);
	DDX_Check(pDX, IDC_MINTRAY, minTray);
	DDX_Check(pDX, IDC_CB_TBN_CLOSETOTRAY, closeToTray);
	DDX_Check(pDX, IDC_EXIT, bPromptOnExit);
	DDX_Check(pDX, IDC_COMFIRM_DISCONNECT, bPromptOnDisconnect);
	DDX_Check(pDX, IDC_COMFIRM_FRIENDDEL, bPromptOnFriendDel);
	DDX_Check(pDX, IDC_BRINGTOFOREGROUND, bringToForeground);
	DDX_Check(pDX, IDC_SHOWRATEONTITLE, showRateOnTitle);
	DDX_Check(pDX, IDC_TBSPEEDMETER, showSpeedMeterOnToolbar);
d96 9
a104 9
	startMin = m_pPrefs->GetStartMinimized();
	minTray = m_pPrefs->DoMinToTray();
	bPromptOnExit = m_pPrefs->IsConfirmExitEnabled();
	bPromptOnDisconnect = m_pPrefs->IsConfirmDisconnectEnabled();
	bPromptOnFriendDel = m_pPrefs->IsConfirmFriendDelEnabled();
	bringToForeground = m_pPrefs->IsBringToFront();
	closeToTray = m_pPrefs->GetCloseToTray();
	showRateOnTitle = m_pPrefs->ShowRatesOnTitle();
	showSpeedMeterOnToolbar = m_pPrefs->GetShowToolbarSpeedMeter();
d129 10
a138 10
		m_pPrefs->SetStartMinimized(startMin);
		m_pPrefs->SetMinToTray(minTray);
		m_pPrefs->SetConfirmExitEnabled(bPromptOnExit);
		m_pPrefs->SetConfirmDisconnectEnabled(bPromptOnDisconnect);
		m_pPrefs->SetConfirmFriendDelEnabled(bPromptOnFriendDel);
		m_pPrefs->SetBringToFront(bringToForeground);
		m_pPrefs->SetCloseToTray(closeToTray);
		m_pPrefs->SetRatesOnTitle(showRateOnTitle);
		m_pPrefs->SetShowToolbarSpeedMeter(showSpeedMeterOnToolbar);
		if (static_cast<bool>(m_bKeepSearchHistory) != m_pPrefs->GetKeepSearchHistory())
d140 1
a140 1
			m_pPrefs->SetKeepSearchHistory(m_bKeepSearchHistory);
d154 1
a154 1
		m_pPrefs->SetFontSize(fontSizeCombo.GetCurSel()*20 + 80);
@


1.50
log
@Added 'Keep search history' setting to preserve or not search history [Aw3];
Faster dialog localization; Reduced #include dependency [Aw3].
@
text
@a194 2
		::GetResString(&strRes, IDS_PW_WINDOW);
		SetWindowText(strRes);
@


1.49
log
@Removed unneeded CString initializations.
@
text
@d1 1
a1 1
// PPgWindow.cpp : implementation file
d3 13
a26 2
// CPPgWindow dialog

d58 1
a58 1
	DDX_Text(pDX, IDC_USEDFONT_LBL, usedFontDesc);
a60 9
	DDX_Control(pDX, IDC_STARTMIN, startMinCheck);
	DDX_Control(pDX, IDC_MINTRAY, minTrayCheck);
	DDX_Control(pDX, IDC_CB_TBN_CLOSETOTRAY, closeToTrayCheck);
	DDX_Control(pDX, IDC_EXIT, promptOnExitCheck);
	DDX_Control(pDX, IDC_COMFIRM_DISCONNECT, promptOnDisconnectCheck);
	DDX_Control(pDX, IDC_COMFIRM_FRIENDDEL, promptOnFriendDelCheck);
	DDX_Control(pDX, IDC_BRINGTOFOREGROUND, bringToForegroundCheck);
	DDX_Control(pDX, IDC_SHOWRATEONTITLE, showRateOnTitleCheck);
	DDX_Control(pDX, IDC_TBSPEEDMETER, showSpeedMeterOnToolbarCheck);
d75 1
d105 1
d138 6
d176 1
a176 1
	if(::IsWindow(m_hWnd))
d178 12
a189 11
		SetWindowText(GetResString(IDS_PW_WINDOW));
		startMinCheck.SetWindowText(GetResString(IDS_PREF_STARTMIN));
		minTrayCheck.SetWindowText(GetResString(IDS_MINIMIZE_TO_SYSTRAY));
		promptOnExitCheck.SetWindowText(GetResString(IDS_PW_PROMPT));
		promptOnDisconnectCheck.SetWindowText(GetResString(IDS_PW_PROMPT_DISCONNECT));
		promptOnFriendDelCheck.SetWindowText(GetResString(IDS_PW_PROMPT_FRIENDDEL));
		bringToForegroundCheck.SetWindowText(GetResString(IDS_PW_FRONT));
		closeToTrayCheck.SetWindowText(GetResString(IDS_PW_TBN_CLOSETOTRAY));
		GetResString(&usedFontDesc, IDS_USEDFONT_LBL);
		showRateOnTitleCheck.SetWindowText(GetResString(IDS_SHOWRATEONTITLE));
		showSpeedMeterOnToolbarCheck.SetWindowText(GetResString(IDS_PW_SHOWTOOLBARSPEEDMETER));
d191 11
a201 1
		UpdateData(FALSE);
@


1.48
log
@renamed g_pPrefs->m_pPrefs (f... paste & copy :( )
@
text
@a27 1
	, usedFontDesc(_T(""))
@


1.47
log
@renamed 3 variables
@
text
@d158 1
a158 1
		if (!g_App.g_pPrefs->ShowRatesOnTitle())
@


1.46
log
@IDS_MINIMIZE_TO_SYSTRAY substitutes IDS_PW_TRAY (used in pref/window).
@
text
@d138 2
a139 2
			g_eMuleApp.m_pdlgEmule->TraySetMinimizeToTray(m_pPrefs->GetMinTrayPTR());
			g_eMuleApp.m_pdlgEmule->TrayMinimizeToTrayChanged();
d147 5
a151 5
		g_eMuleApp.m_pdlgEmule->m_fontDefault.DeleteObject();
		g_eMuleApp.m_pdlgEmule->m_fontDefault.CreatePointFont(m_pPrefs->GetFontSize(),buffer);
		g_eMuleApp.m_pdlgEmule->m_wndServer.InitFont();
		g_eMuleApp.m_pdlgEmule->m_wndIRC.UpdateFont();
		g_eMuleApp.m_pdlgEmule->m_wndChat.m_ctlChatSelector.UpdateFont();
d153 2
a154 2
		g_eMuleApp.m_pdlgEmule->m_wndTransfer.m_ctlDownloadList.SetStyle();
		g_eMuleApp.m_pdlgEmule->m_ctlToolBar.ShowSpeedMeter(m_pPrefs->GetShowToolbarSpeedMeter());
d158 2
a159 2
		if (!g_eMuleApp.m_pGlobPrefs->ShowRatesOnTitle())
			g_eMuleApp.m_pdlgEmule->SetWindowText(CLIENT_NAME_WITH_VER);
@


1.45
log
@Fixed a GUI glitch in Messages window when multiple tabs are open and windows is themed;
Name changes, formatting etc.
@
text
@d171 1
a171 1
		minTrayCheck.SetWindowText(GetResString(IDS_PW_TRAY));
@


1.44
log
@Removed CPreparedRTFText class
@
text
@d151 1
a151 1
		g_eMuleApp.m_pdlgEmule->m_wndChat.chatselector.UpdateFont();
@


1.43
log
@Improved preferences localization.
@
text
@d150 2
a151 2
		g_eMuleApp.m_pdlgEmule->m_wndIRC.InitFont();
		g_eMuleApp.m_pdlgEmule->m_wndChat.chatselector.chatout.SetFont(&g_eMuleApp.m_pdlgEmule->m_fontDefault);
@


1.42
log
@Updated tray dialog code from official v0.42g
@
text
@d177 1
a177 1
		usedFontDesc = GetResString(IDS_USEDFONT_LBL);
@


1.41
log
@Unified definitions for client name.
@
text
@d138 1
a138 1
			g_eMuleApp.m_pdlgEmule->TraySetMinimizeToTray((byte)m_pPrefs->DoMinToTray());
@


1.40
log
@Preferences reorganization
@
text
@d159 1
a159 1
			g_eMuleApp.m_pdlgEmule->SetWindowText(_T("eMule Plus v") CURRENT_VERSION_LONG);
@


1.39
log
@added IP to Country from MorphXT (Please extract ip-to-country.rar in your config dir in order for this to work)
@
text
@a6 1
#include "IP2Country.h"
a27 1
	, showCountryFlag(FALSE)
a47 1
	DDX_Check(pDX, IDC_TBSSHOWCOUNTRYFLAG, showCountryFlag);
a59 1
	DDX_Control(pDX, IDC_TBSSHOWCOUNTRYFLAG, showCountryFlagCheck);
a73 1
	ON_BN_CLICKED(IDC_TBSSHOWCOUNTRYFLAG, OnSettingsChange)
a102 1
	showCountryFlag = m_pPrefs->GetShowCountryFlag();
a134 1
		m_pPrefs->SetShowCountryFlag(showCountryFlag);
a155 6
		if (m_pPrefs->GetShowCountryFlag())
			g_eMuleApp.m_pIP2Country->Load();
		else
			g_eMuleApp.m_pIP2Country->Unload();
		g_eMuleApp.m_pIP2Country->Refresh();

a179 1
		showCountryFlagCheck.SetWindowText(GetResString(IDS_PW_SHOWCOUNTRYFLAG));
@


1.38
log
@Updated preferences dialogs.
Added upload log file (should be tested).
@
text
@d7 1
d29 1
d50 1
d63 1
d78 1
d108 1
d141 1
d163 6
d193 1
@


1.37
log
@Improved string processing
@
text
@a27 8
	, showA4AF(FALSE)
	, showA4AFCount(FALSE)
	, showAvgDataRate(FALSE)
	, showFileTypeIcons(FALSE)
	, showTransferredOnCompleted(FALSE)
	, showDownloadPercentage(FALSE)
	, showPausedGray(FALSE)
	, showFileStatusIcons(FALSE)
a28 3
	, strSmartFilterDesc(_T(""))
	, strSmartFilterMaxQR(_T(""))
	, bSmartFilterShowSourcesOQ(FALSE)
a47 8
	DDX_Check(pDX, IDC_A4AF, showA4AF);
	DDX_Check(pDX, IDC_A4AFCOUNT, showA4AFCount);
	DDX_Check(pDX, IDC_SHOWAVGDATARATE, showAvgDataRate);
	DDX_Check(pDX, IDC_SHOWFTYPE, showFileTypeIcons);
	DDX_Check(pDX, IDC_SHOWTRANFONCMPLT, showTransferredOnCompleted);
	DDX_Check(pDX, IDC_SHOWDWLPERCENTAGE, showDownloadPercentage);
	DDX_Check(pDX, IDC_SHOWGRAY, showPausedGray);
	DDX_Check(pDX, IDC_STATUSICONS, showFileStatusIcons);
a59 14
	DDX_Control(pDX, IDC_A4AF, showA4AFCheck);
	DDX_Control(pDX, IDC_A4AFCOUNT, showA4AFCountCheck);
	DDX_Control(pDX, IDC_SHOWAVGDATARATE, showAvgDataRateCheck);
	DDX_Control(pDX, IDC_SHOWFTYPE, showFileTypeIconsCheck);
	DDX_Control(pDX, IDC_SHOWTRANFONCMPLT, showTransferredOnCompletedCheck);
	DDX_Control(pDX, IDC_SHOWDWLPERCENTAGE, showDownloadPercentageCheck);
	DDX_Control(pDX, IDC_SHOWGRAY, showPausedGrayCheck);
	DDX_Control(pDX, IDC_STATUSICONS, showFileStatusIconsCheck);
	DDX_Text(pDX, IDC_SMARTFILTERGROUPBOX, strSmartFilterDesc);
	DDX_Control(pDX, IDC_SMARTFILTERMAXQRLBL, SmartFilterMaxQRLabel);
	DDX_Text(pDX, IDC_SMARTFILTERMAXQR, strSmartFilterMaxQR);
	DDX_Control(pDX, IDC_SMARTFILTERMAXQR, SmartFilterMaxQREdit);
	DDX_Check(pDX, IDC_SMARTFILTERSHOWOQ, bSmartFilterShowSourcesOQ);
	DDX_Control(pDX, IDC_SMARTFILTERSHOWOQ, SmartFilterShowSourcesOQCheck);
a73 10
	ON_BN_CLICKED(IDC_A4AF, OnSettingsChange)
	ON_BN_CLICKED(IDC_A4AFCOUNT, OnSettingsChange)
	ON_BN_CLICKED(IDC_SHOWAVGDATARATE, OnSettingsChange)
	ON_BN_CLICKED(IDC_SHOWFTYPE, OnSettingsChange)
	ON_BN_CLICKED(IDC_SHOWTRANFONCMPLT, OnSettingsChange)
	ON_BN_CLICKED(IDC_SHOWDWLPERCENTAGE, OnSettingsChange)
	ON_BN_CLICKED(IDC_SHOWGRAY, OnSettingsChange)
	ON_BN_CLICKED(IDC_STATUSICONS, OnSettingsChange)
	ON_EN_CHANGE(IDC_SMARTFILTERMAXQR, OnSettingsChange)
	ON_BN_CLICKED(IDC_SMARTFILTERSHOWOQ, OnSettingsChange)
a102 10
	showA4AF = m_pPrefs->IsA4AFStringEnabled();
	showA4AFCount = m_pPrefs->IsA4AFCountEnabled();
	showAvgDataRate = m_pPrefs->GetShowAverageDataRate();
	showFileTypeIcons = m_pPrefs->ShowFileTypeIcon();
	showTransferredOnCompleted = m_pPrefs->IsTransferredOnCompleted();
	showDownloadPercentage = m_pPrefs->GetUseDwlPercentage();
	showPausedGray = m_pPrefs->ShowPausedGray();
	showFileStatusIcons = m_pPrefs->ShowFullFileStatusIcons();
	strSmartFilterMaxQR.Format(_T("%u"), m_pPrefs->GetSmartFilterMaxQueueRank());
	bSmartFilterShowSourcesOQ = m_pPrefs->GetSmartFilterShowOnQueue();
a124 1
		byte ShowFileTypeIcon_old = m_pPrefs->ShowFileTypeIcon();
a134 10
		m_pPrefs->SetA4AFStringEnabled(showA4AF);
		m_pPrefs->SetA4AFCountEnabled(showA4AFCount);
		m_pPrefs->SetShowAverageDataRate(showAvgDataRate);
		m_pPrefs->SetShowFileTypeIcon(showFileTypeIcons);
		m_pPrefs->SetTransferredOnCompleted(showTransferredOnCompleted);
		m_pPrefs->SetUseDwlPercentage(showDownloadPercentage);
		m_pPrefs->SetShowPausedGray(showPausedGray);
		m_pPrefs->SetShowFullFileStatusIcons(showFileStatusIcons);
		m_pPrefs->SetSmartFilterMaxQueueRank(_tstoi(strSmartFilterMaxQR));
		m_pPrefs->SetSmartFilterShowOnQueue(bSmartFilterShowSourcesOQ);
a141 6
		if (ShowFileTypeIcon_old != (byte)m_pPrefs->ShowFileTypeIcon())
		{
			g_eMuleApp.m_pdlgEmule->m_wndTransfer.m_ctlDownloadList.Invalidate();
			g_eMuleApp.m_pdlgEmule->m_wndSharedFiles.m_ctlSharedFilesList.Invalidate();
		}

a179 11
		showA4AFCheck.SetWindowText(GetResString(IDS_A4AF));
		showA4AFCountCheck.SetWindowText(GetResString(IDS_A4AFCOUNT));
		showAvgDataRateCheck.SetWindowText(GetResString(IDS_SHOWAVGDATARATE));
		showFileTypeIconsCheck.SetWindowText(GetResString(IDS_SHOWFTYPE));
		showTransferredOnCompletedCheck.SetWindowText(GetResString(IDS_SHOWTRANFONCMPLT));
		showDownloadPercentageCheck.SetWindowText(GetResString(IDS_SHOWDWLPERCENTAGE));
		showPausedGrayCheck.SetWindowText(GetResString(IDS_SHOWGRAY));
		showFileStatusIconsCheck.SetWindowText(GetResString(IDS_STATUSICONS));
		SmartFilterShowSourcesOQCheck.SetWindowText(GetResString(IDS_SMARTFILTER_SHOWOQ));
		SmartFilterMaxQRLabel.SetWindowText(GetResString(IDS_SMARTFILTER_MAXQR));
		strSmartFilterDesc = GetResString(IDS_SRCFILTERMENU_SMARTFILTER);
@


1.36
log
@smartfilter preference translation/resource change
@
text
@d228 2
a229 5
		if (!g_eMuleApp.m_pGlobPrefs->ShowRatesOnTitle()) {
			CString buffer;
			buffer.Format(_T("eMule Plus v%s"),CURRENT_VERSION_LONG);
			g_eMuleApp.m_pdlgEmule->SetWindowText(buffer);
		}
@


1.35
log
@Added optional confirmations for disconnect and friend deletion
@
text
@d261 1
a261 2
		strSmartFilterDesc.Format(GetResString(IDS_SMARTFILTER_SHOWOQ), GetResString(IDS_ONQUEUE));	//strSmartFilterDesc temporary abused
		SmartFilterShowSourcesOQCheck.SetWindowText(strSmartFilterDesc);
@


1.34
log
@smartfilter preferences "gui"
@
text
@d22 3
a24 1
	, promptOnExit(FALSE)
d53 3
a55 1
	DDX_Check(pDX, IDC_EXIT, promptOnExit);
d74 2
d99 2
d139 3
a141 1
	promptOnExit = m_pPrefs->IsConfirmExitEnabled();
d154 1
a154 1
	strSmartFilterMaxQR.Format(_T("%d"), m_pPrefs->GetSmartFilterMaxQueueRank());
d157 5
a161 5
	int FontIdx = fontPreviewCombo.FindStringExact(0,m_pPrefs->GetUsedFont());
	if(FontIdx == LB_ERR)
		fontPreviewCombo.SetCurSel(0);
	else
		fontPreviewCombo.SetCurSel(FontIdx);
d182 3
a184 1
		m_pPrefs->SetConfirmExitEnabled(promptOnExit);
d246 2
@


1.33
log
@Changed uint32 to unsigned long from unsigned int and made necessary code changes. Got rid of _unsigned_ types int8,int16,int32,int64. Eliminated uint8 to avoid confusion. Use "byte".
@
text
@d35 3
d81 6
d90 19
a108 17
	ON_BN_CLICKED(IDC_STARTMIN, OnEnChangeStartMin)
	ON_BN_CLICKED(IDC_MINTRAY, OnBnClickedMintray)
	ON_BN_CLICKED(IDC_EXIT, OnBnClickedExit)
	ON_BN_CLICKED(IDC_BRINGTOFOREGROUND, OnBnClickedBringtoforeground)
	ON_BN_CLICKED(IDC_CB_TBN_CLOSETOTRAY, OnBnClickedCbTbnClosetotray)
	ON_CBN_SELCHANGE(IDC_USEDFONT, OnCbnSelchangeUsedFont)
	ON_CBN_SELCHANGE(IDC_USEDFONTSIZE, OnCbnSelchangeUsedfontsize)
	ON_BN_CLICKED(IDC_SHOWRATEONTITLE, OnBnClickedShowRateOnTitle)
	ON_BN_CLICKED(IDC_TBSPEEDMETER, OnBnClickedSpeedMeter)
	ON_BN_CLICKED(IDC_A4AF, OnBnClickedA4AF)
	ON_BN_CLICKED(IDC_A4AFCOUNT, OnBnClickedA4AFCount)
	ON_BN_CLICKED(IDC_SHOWAVGDATARATE, OnBnClickedAvgDataRate)
	ON_BN_CLICKED(IDC_SHOWFTYPE, OnBnClickedShowFileType)
	ON_BN_CLICKED(IDC_SHOWTRANFONCMPLT, OnBnClickedTransferredOnCompleted)
	ON_BN_CLICKED(IDC_SHOWDWLPERCENTAGE, OnBnClickedDownloadPercentage)
	ON_BN_CLICKED(IDC_SHOWGRAY, OnBnClickedShowPausedGray)
	ON_BN_CLICKED(IDC_STATUSICONS, OnBnClickedShowFileStatusIcons)
d144 2
d154 1
a154 1
		fontSizeCombo.SetCurSel((int)((m_pPrefs->GetFontSize()-80)/20)); // FontSize Cax2
d158 1
a158 1
	SetModified(FALSE);	// FoRcHa
d167 2
a168 2
		byte mintotray_old = m_pPrefs->DoMinToTray(); // #zegzav (add)
		byte ShowFileTypeIcon_old = m_pPrefs->ShowFileTypeIcon(); // DonGato
d185 2
a187 1
		// #zegzav
a193 1
		// DonGato
d203 2
a204 2
		m_pPrefs->SetFontSize(fontSizeCombo.GetCurSel()*20 + 80);	// FontSize Cax2
		// Cax2 - Font update
d247 5
@


1.32
log
@Formatting, comments, and name changes.
@
text
@d154 2
a155 2
		int8 mintotray_old = m_pPrefs->DoMinToTray(); // #zegzav (add)
		int8 ShowFileTypeIcon_old = m_pPrefs->ShowFileTypeIcon(); // DonGato
d174 1
a174 1
		if (mintotray_old != (int8)m_pPrefs->DoMinToTray())
d176 1
a176 1
			g_eMuleApp.m_pdlgEmule->TraySetMinimizeToTray((int8)m_pPrefs->DoMinToTray());
d181 1
a181 1
		if (ShowFileTypeIcon_old != (int8)m_pPrefs->ShowFileTypeIcon())
@


1.31
log
@Formatting, name changes and deleting spaces and tabs at end of lines
@
text
@d174 1
a174 1
	        if (mintotray_old != (int8)m_pPrefs->DoMinToTray())
d177 2
a178 2
	    		g_eMuleApp.m_pdlgEmule->TrayMinimizeToTrayChanged();
        	}
d181 1
a181 1
	        if (ShowFileTypeIcon_old != (int8)m_pPrefs->ShowFileTypeIcon())
d185 1
a185 1
        	}
d194 3
a196 3
	      	g_eMuleApp.m_pdlgEmule->m_wndServer.InitFont();
      		g_eMuleApp.m_pdlgEmule->m_wndIRC.InitFont();
	      	g_eMuleApp.m_pdlgEmule->m_wndChat.chatselector.chatout.SetFont(&g_eMuleApp.m_pdlgEmule->m_fontDefault);
@


1.30
log
@changed A4AF sources count display as an option + minor cosmetic changes
@
text
@d118 1
a118 1
	startMin = m_pPrefs->GetStartMinimized();		
d122 2
a123 2
	closeToTray = m_pPrefs->GetCloseToTray();	
	showRateOnTitle = m_pPrefs->ShowRatesOnTitle();		
d133 1
a133 1
	
d136 1
a136 1
       fontPreviewCombo.SetCurSel(0);
d138 1
a138 1
       fontPreviewCombo.SetCurSel(FontIdx);
d153 1
a153 1
		
d174 1
a174 1
        if (mintotray_old != (int8)m_pPrefs->DoMinToTray())
d176 4
a179 4
            g_eMuleApp.m_pdlgEmule->TraySetMinimizeToTray((int8)m_pPrefs->DoMinToTray());
    		g_eMuleApp.m_pdlgEmule->TrayMinimizeToTrayChanged();
        }
   
d181 1
a181 1
        if (ShowFileTypeIcon_old != (int8)m_pPrefs->ShowFileTypeIcon())
d183 3
a185 3
            g_eMuleApp.m_pdlgEmule->m_wndTransfer.m_ctlDownloadList.Invalidate();
            g_eMuleApp.m_pdlgEmule->m_wndSharedFiles.m_ctlSharedFilesList.Invalidate();
        }
d192 5
a196 5
		g_eMuleApp.m_pdlgEmule->m_fontDefault.DeleteObject(); 
		g_eMuleApp.m_pdlgEmule->m_fontDefault.CreatePointFont(m_pPrefs->GetFontSize(),buffer); 
      	g_eMuleApp.m_pdlgEmule->m_wndServer.InitFont(); 
      	g_eMuleApp.m_pdlgEmule->m_wndIRC.InitFont(); 
      	g_eMuleApp.m_pdlgEmule->m_wndChat.chatselector.chatout.SetFont(&g_eMuleApp.m_pdlgEmule->m_fontDefault); 
d218 1
a218 1
		startMinCheck.SetWindowText(GetResString(IDS_PREF_STARTMIN));	
@


1.29
log
@DownloadListCtrl rewrite.
Changed Category ID types to an enumeration.
More async update work.
The usual formatting, comments, and name changes.
@
text
@d27 1
d53 1
d71 1
d91 1
d126 1
d165 1
d227 1
@


1.28
log
@Formatting, comments, and name changes. Factored various UI update methods out and modified to use async. messaging instead of sync. call.
@
text
@d177 1
a177 1
            g_eMuleApp.m_pdlgEmule->m_wndTransfer.m_wndDownloadList.Invalidate();
d192 1
a192 1
		g_eMuleApp.m_pdlgEmule->m_wndTransfer.m_wndDownloadList.SetStyle();
@


1.27
log
@Reinstated ShowFileStatusIcons
@
text
@d178 1
a178 1
            g_eMuleApp.m_pdlgEmule->m_wndSharedFiles.sharedfilesctrl.Invalidate();
@


1.26
log
@Removed option to disable File Status icons
Added old actions to new File Status icons
Removed spamming log from Source Saver
Removed old non used icons from resources
Updated +/- icons with Psy suggestion
@
text
@d1 1
a1 1
 // PPgWindow.cpp : implementation file
d32 1
d57 1
d74 1
d93 1
d127 1
d165 1
d226 1
@


1.25
log
@Now where'd _that_ come from?
@
text
@a31 1
	, showFileStatusIcons(FALSE)
a55 1
	DDX_Check(pDX, IDC_STATUSICONS, showFileStatusIcons);
a71 1
	DDX_Control(pDX, IDC_STATUSICONS, showFileStatusIconsCheck);
a89 1
	ON_BN_CLICKED(IDC_STATUSICONS, OnBnClickedShowFileStatusIcons)
a122 1
	showFileStatusIcons = m_pPrefs->ShowFullFileStatusIcons();
a159 1
		m_pPrefs->SetShowFullFileStatusIcons(showFileStatusIcons);
a219 1
		showFileStatusIconsCheck.SetWindowText(GetResString(IDS_STATUSICONS));
@


1.24
log
@Category rewrite with predefined status/media type categories.
@
text
@a229 6

void CPPgWindow::OnBnClickedEd2kfix()
{
	Ask4RegFix();
	ed2kFixButton.EnableWindow(!CheckIsRegistrySet());
}
@


1.23
log
@Changed preferences (added some missing ones)
Updated unpause/clearcomplete when using FileStatus icons
@
text
@d230 6
@


1.22
log
@Formatting, comments, and name changes.
@
text
@a23 1
	, autoTakeEd2kLinks(FALSE)
d31 2
a48 1
	DDX_Check(pDX, IDC_AUTOTAKEED2KLINKS, autoTakeEd2kLinks);
d56 2
a58 1
	DDX_Control(pDX, IDC_ED2KFIX, ed2kFixButton);
a65 1
	DDX_Control(pDX, IDC_AUTOTAKEED2KLINKS, autoTakeEd2kLinksCheck);
d73 2
a84 2
	ON_BN_CLICKED(IDC_ED2KFIX, OnBnClickedEd2kfix)
	ON_BN_CLICKED(IDC_AUTOTAKEED2KLINKS, OnBnClickedAutoTakeED2KLinks)
d92 2
a105 1
	ed2kFixButton.EnableWindow(!CheckIsRegistrySet());
a118 1
	autoTakeEd2kLinks = m_pPrefs->AutoTakeED2KLinks();
d126 2
a156 1
		m_pPrefs->SetAutoTakeED2KLinks(autoTakeEd2kLinks); // DonGato
d164 2
a217 2
		ed2kFixButton.SetWindowText(GetResString(IDS_ED2KLINKFIX));
		autoTakeEd2kLinksCheck.SetWindowText(GetResString(IDS_AUTOTAKEED2KLINKS));
d225 2
a228 6
}

void CPPgWindow::OnBnClickedEd2kfix()
{
	Ask4RegFix();
	ed2kFixButton.EnableWindow(!CheckIsRegistrySet());
@


1.21
log
@More name changes, reinstated CMuleCtrlItem class, moved srcsarevisible from CPartFile to CMuleCtrlItem (where it belongs), added "Show Full Status Icons" and "Show Gray Paused" features with corresponding preferences, modified "SmartOpen" code to make it sticky and to make it work with sources with changing states.
@
text
@d113 13
a125 13
	startMin = app_prefs->GetStartMinimized();		
	minTray = app_prefs->DoMinToTray();
	promptOnExit = app_prefs->IsConfirmExitEnabled();
	bringToForeground = app_prefs->IsBringToFront();
	closeToTray = app_prefs->GetCloseToTray();	
	autoTakeEd2kLinks = app_prefs->AutoTakeED2KLinks();
	showRateOnTitle = app_prefs->ShowRatesOnTitle();		
	showSpeedMeterOnToolbar = app_prefs->GetShowToolbarSpeedMeter();
	showA4AF = app_prefs->IsA4AFStringEnabled();
	showAvgDataRate = app_prefs->GetShowAverageDataRate();
	showFileTypeIcons = app_prefs->ShowFileTypeIcon();
	showTransferredOnCompleted = app_prefs->IsTransferredOnCompleted();
	showDownloadPercentage = app_prefs->GetUseDwlPercentage();
d127 1
a127 1
	int FontIdx = fontPreviewCombo.FindStringExact(0,app_prefs->GetUsedFont());
d133 2
a134 2
	if (app_prefs->GetFontSize())
		fontSizeCombo.SetCurSel((int)((app_prefs->GetFontSize()-80)/20)); // FontSize Cax2
d147 2
a148 2
		int8 mintotray_old = app_prefs->DoMinToTray(); // #zegzav (add)
		int8 ShowFileTypeIcon_old = app_prefs->ShowFileTypeIcon(); // DonGato
d150 13
a162 13
		app_prefs->SetStartMinimized(startMin);
		app_prefs->SetMinToTray(minTray);
		app_prefs->SetConfirmExitEnabled(promptOnExit);
		app_prefs->SetBringToFront(bringToForeground);
		app_prefs->SetCloseToTray(closeToTray);
		app_prefs->SetAutoTakeED2KLinks(autoTakeEd2kLinks); // DonGato
		app_prefs->SetRatesOnTitle(showRateOnTitle);
		app_prefs->SetShowToolbarSpeedMeter(showSpeedMeterOnToolbar);
		app_prefs->SetA4AFStringEnabled(showA4AF);
		app_prefs->SetShowAverageDataRate(showAvgDataRate);
		app_prefs->SetShowFileTypeIcon(showFileTypeIcons);
		app_prefs->SetTransferredOnCompleted(showTransferredOnCompleted);
		app_prefs->SetUseDwlPercentage(showDownloadPercentage);
d165 1
a165 1
        if (mintotray_old != (int8)app_prefs->DoMinToTray())
d167 1
a167 1
            g_eMuleApp.m_pdlgEmule->TraySetMinimizeToTray((int8)app_prefs->DoMinToTray());
d172 1
a172 1
        if (ShowFileTypeIcon_old != (int8)app_prefs->ShowFileTypeIcon())
d180 2
a181 2
		app_prefs->SetUsedFont(buffer);
		app_prefs->SetFontSize(fontSizeCombo.GetCurSel()*20 + 80);	// FontSize Cax2
d184 1
a184 1
		g_eMuleApp.m_pdlgEmule->m_fontDefault.CreatePointFont(app_prefs->GetFontSize(),buffer); 
d190 1
a190 1
		g_eMuleApp.m_pdlgEmule->m_ctlToolBar.ShowSpeedMeter(app_prefs->GetShowToolbarSpeedMeter());
@


1.20
log
@First batch of the threatened name changes. Shouldn't be any logic changes here.
@
text
@d167 2
a168 2
            theApp.emuledlg->TraySetMinimizeToTray((int8)app_prefs->DoMinToTray());
    		theApp.emuledlg->TrayMinimizeToTrayChanged();
d174 2
a175 2
            theApp.emuledlg->transferwnd.m_wndDownloadList.Invalidate();
            theApp.emuledlg->sharedfileswnd.sharedfilesctrl.Invalidate();
d183 5
a187 5
		theApp.emuledlg->m_DefaultFont.DeleteObject(); 
		theApp.emuledlg->m_DefaultFont.CreatePointFont(app_prefs->GetFontSize(),buffer); 
      	theApp.emuledlg->serverwnd.InitFont(); 
      	theApp.emuledlg->ircwnd.InitFont(); 
      	theApp.emuledlg->chatwnd.chatselector.chatout.SetFont(&theApp.emuledlg->m_DefaultFont); 
d189 2
a190 2
		theApp.emuledlg->transferwnd.m_wndDownloadList.SetStyle();
		theApp.emuledlg->toolbar.ShowSpeedMeter(app_prefs->GetShowToolbarSpeedMeter());
d194 1
a194 1
		if (!theApp.glob_prefs->ShowRatesOnTitle()) {
d197 1
a197 1
			theApp.emuledlg->SetWindowText(buffer);
@


1.19
log
@Last template changes and fix for realtime update of FileTypeIcons when option changed.
@
text
@d28 1
a28 1
	, showAvgDatarate(FALSE)
d52 1
a52 1
	DDX_Check(pDX, IDC_SHOWAVGDATARATE, showAvgDatarate);
d69 1
a69 1
	DDX_Control(pDX, IDC_SHOWAVGDATARATE, showAvgDatarateCheck);
d88 1
a88 1
	ON_BN_CLICKED(IDC_SHOWAVGDATARATE, OnBnClickedAvgDatarate)
d122 1
a122 1
	showAvgDatarate = app_prefs->GetShowAverageDatarate();
d159 1
a159 1
		app_prefs->SetShowAverageDatarate(showAvgDatarate);
d220 1
a220 1
		showAvgDatarateCheck.SetWindowText(GetResString(IDS_SHOWAVGDATARATE));
@


1.18
log
@Fixes and updates (read forum to know)
@
text
@d147 2
a148 1
		int8 mintotray_old = app_prefs->DoMinToTray(); // #zegzav (add)  
d165 2
a166 1
        if (mintotray_old != (int8)app_prefs->DoMinToTray()) {
d171 7
@


1.17
log
@Updates (Paused Progress Bar/Statistic)
@
text
@d180 3
@


1.16
log
@Show transferred data on Complete column
@
text
@d31 1
d55 1
d72 1
d91 1
d125 1
d161 1
d211 1
@


1.15
log
@converted to use DDX framework
@
text
@d30 1
d53 1
d69 1
a69 1
	
d87 1
d120 1
a120 1
		
d155 1
d204 1
@


1.14
log
@Option to disable filetype icons.
@
text
@d19 12
d41 27
a67 2
	DDX_Control(pDX, IDC_USEDFONT, m_FontCombo);
	DDX_Control(pDX, IDC_USEDFONTSIZE, m_FontSize);
d91 2
a92 2
	m_FontCombo.m_style = CFontPreviewCombo::NAME_ONLY;
	m_FontCombo.Init();
d94 4
a97 4
	m_FontSize.AddString(_T("8"));
	m_FontSize.AddString(_T("10"));
	m_FontSize.AddString(_T("12"));
	GetDlgItem(IDC_ED2KFIX)->EnableWindow(!CheckIsRegistrySet());
d106 12
a117 55
	if(app_prefs->GetStartMinimized())
		CheckDlgButton(IDC_STARTMIN,1);
	else
		CheckDlgButton(IDC_STARTMIN,0);

	if(app_prefs->DoMinToTray())
		CheckDlgButton(IDC_MINTRAY,1);
	else
		CheckDlgButton(IDC_MINTRAY,0);

	if(app_prefs->IsConfirmExitEnabled())
		CheckDlgButton(IDC_EXIT,1);
	else
		CheckDlgButton(IDC_EXIT,0);

	if(app_prefs->IsBringToFront())
		CheckDlgButton(IDC_BRINGTOFOREGROUND,1);
	else
		CheckDlgButton(IDC_BRINGTOFOREGROUND,0);

	if(app_prefs->GetCloseToTray())
		CheckDlgButton(IDC_CB_TBN_CLOSETOTRAY,1);
	else
		CheckDlgButton(IDC_CB_TBN_CLOSETOTRAY,0);

	// Barry
	if(app_prefs->AutoTakeED2KLinks())
		CheckDlgButton(IDC_AUTOTAKEED2KLINKS,1);
	else
		CheckDlgButton(IDC_AUTOTAKEED2KLINKS,0);

	if(app_prefs->ShowRatesOnTitle())
		CheckDlgButton(IDC_SHOWRATEONTITLE,1);
	else
		CheckDlgButton(IDC_SHOWRATEONTITLE,0);

	if(app_prefs->GetShowToolbarSpeedMeter())
		CheckDlgButton(IDC_TBSPEEDMETER,1);
	else
		CheckDlgButton(IDC_TBSPEEDMETER,0);

	if(app_prefs->IsA4AFStringEnabled())
		CheckDlgButton(IDC_A4AF,1);
	else
		CheckDlgButton(IDC_A4AF,0);

	if(app_prefs->GetShowAverageDatarate())
		CheckDlgButton(IDC_SHOWAVGDATARATE,1);
	else
		CheckDlgButton(IDC_SHOWAVGDATARATE,0);

	if(app_prefs->ShowFileTypeIcon())
		CheckDlgButton(IDC_SHOWFTYPE,1);
	else
		CheckDlgButton(IDC_SHOWFTYPE,0);
d119 1
a119 1
	int FontIdx = m_FontCombo.FindStringExact(0,app_prefs->GetUsedFont());
d121 1
a121 1
       m_FontCombo.SetCurSel(0);
d123 2
a124 2
       m_FontCombo.SetCurSel(FontIdx);
	m_FontSize.SetCurSel(0);
d126 3
a128 1
		m_FontSize.SetCurSel((int)((app_prefs->GetFontSize()-80)/20)); // FontSize Cax2
a134 2
//	CSingleLock PrefLock(&(app_prefs->m_Pref_Mutex),TRUE); 

d137 2
a138 1

d141 11
a151 11
		app_prefs->SetStartMinimized((int8)IsDlgButtonChecked(IDC_STARTMIN));
		app_prefs->SetMinToTray((int8)IsDlgButtonChecked(IDC_MINTRAY));
		app_prefs->SetConfirmExitEnabled((int8)IsDlgButtonChecked(IDC_EXIT));
		app_prefs->SetBringToFront((int8)IsDlgButtonChecked(IDC_BRINGTOFOREGROUND));
		app_prefs->SetCloseToTray((int8)IsDlgButtonChecked(IDC_CB_TBN_CLOSETOTRAY));
		app_prefs->SetAutoTakeED2KLinks((int8)IsDlgButtonChecked(IDC_AUTOTAKEED2KLINKS)); // DonGato
		app_prefs->SetRatesOnTitle(IsDlgButtonChecked(IDC_SHOWRATEONTITLE));
		app_prefs->SetShowToolbarSpeedMeter(IsDlgButtonChecked(IDC_TBSPEEDMETER));
		app_prefs->SetA4AFStringEnabled(IsDlgButtonChecked(IDC_A4AF));
		app_prefs->SetShowAverageDatarate(IsDlgButtonChecked(IDC_SHOWAVGDATARATE));
		app_prefs->SetShowFileTypeIcon(IsDlgButtonChecked(IDC_SHOWFTYPE));
d160 1
a160 1
		m_FontCombo.GetWindowText(buffer);
d162 1
a162 1
		app_prefs->SetFontSize(m_FontSize.GetCurSel()*20 + 80);	// FontSize Cax2
d184 1
a184 1
	if(m_hWnd)
d187 14
a200 13
		GetDlgItem(IDC_STARTMIN)->SetWindowText(GetResString(IDS_PREF_STARTMIN));	
		GetDlgItem(IDC_MINTRAY)->SetWindowText(GetResString(IDS_PW_TRAY));
		GetDlgItem(IDC_EXIT)->SetWindowText(GetResString(IDS_PW_PROMPT));
		GetDlgItem(IDC_BRINGTOFOREGROUND)->SetWindowText(GetResString(IDS_PW_FRONT));
		GetDlgItem(IDC_CB_TBN_CLOSETOTRAY)->SetWindowText(GetResString(IDS_PW_TBN_CLOSETOTRAY));
		GetDlgItem(IDC_USEDFONT_LBL)->SetWindowText(GetResString(IDS_USEDFONT_LBL));
		GetDlgItem(IDC_ED2KFIX)->SetWindowText(GetResString(IDS_ED2KLINKFIX));
		GetDlgItem(IDC_AUTOTAKEED2KLINKS)->SetWindowText(GetResString(IDS_AUTOTAKEED2KLINKS));
		GetDlgItem(IDC_SHOWRATEONTITLE)->SetWindowText(GetResString(IDS_SHOWRATEONTITLE));
		GetDlgItem(IDC_TBSPEEDMETER)->SetWindowText(GetResString(IDS_PW_SHOWTOOLBARSPEEDMETER));
		GetDlgItem(IDC_A4AF)->SetWindowText(GetResString(IDS_A4AF));
		GetDlgItem(IDC_SHOWAVGDATARATE)->SetWindowText(GetResString(IDS_SHOWAVGDATARATE));
		GetDlgItem(IDC_SHOWFTYPE)->SetWindowText(GetResString(IDS_SHOWFTYPE));
d207 1
a207 1
	GetDlgItem(IDC_ED2KFIX)->EnableWindow(!CheckIsRegistrySet());
@


1.13
log
@Added Show Average Datarate option.
@
text
@d45 3
d109 15
d154 3
d202 3
@


1.12
log
@unicode cleanup
@
text
@d1 1
a1 1
// PPgWindow.cpp : implementation file
d44 1
d102 5
d135 1
d180 1
@


1.11
log
@code cleanup
@
text
@d53 3
a55 3
	m_FontSize.AddString("8");
	m_FontSize.AddString("10");
	m_FontSize.AddString("12");
d151 1
a151 1
			buffer.Format("eMule Plus v%s",CURRENT_VERSION_LONG);
@


1.10
log
@code cleanup
@
text
@d150 2
a151 2
			char buffer[50];
			sprintf(buffer,"eMule Plus v%s",CURRENT_VERSION_LONG);
@


1.9
log
@all my stable changes and some minor fixes (refer to changelog)
@
text
@d56 1
a56 1
	GetDlgItem(IDC_ED2KFIX)->EnableWindow(Ask4RegFix(true));
d178 2
a179 2
	Ask4RegFix(false);
	GetDlgItem(IDC_ED2KFIX)->EnableWindow(Ask4RegFix(true));
@


1.8
log
@file buffer size, autotake ed2k links and some preferences reorganization.
@
text
@d43 1
d96 5
d128 1
d130 1
a130 1
   		// #zegzav
d148 6
d172 1
@


1.7
log
@Added again Confirm on exit. :-)
@
text
@d41 2
d55 1
d89 6
d121 1
d157 2
d160 6
@


1.6
log
@Minimize to tray fix
@
text
@d36 1
d71 5
d109 1
a109 1
		//app_prefs->SetConfirmExitEnabled((int8)IsDlgButtonChecked(IDC_EXIT));
d143 1
a143 1
		//GetDlgItem(IDC_EXIT)->SetWindowText(GetResString(IDS_PW_PROMPT));
@


1.6.2.1
log
@v1a upgrade
@
text
@a35 1
	ON_BN_CLICKED(IDC_EXIT, OnBnClickedExit)
a69 5
	if(app_prefs->IsConfirmExitEnabled())
		CheckDlgButton(IDC_EXIT,1);
	else
		CheckDlgButton(IDC_EXIT,0);

d103 1
a103 1
		app_prefs->SetConfirmExitEnabled((int8)IsDlgButtonChecked(IDC_EXIT));
d137 1
a137 1
		GetDlgItem(IDC_EXIT)->SetWindowText(GetResString(IDS_PW_PROMPT));
@


1.6.2.2
log
@keeping in sync with the main cvs line
@
text
@a40 2
	ON_BN_CLICKED(IDC_ED2KFIX, OnBnClickedEd2kfix)
	ON_BN_CLICKED(IDC_AUTOTAKEED2KLINKS, OnBnClickedAutoTakeED2KLinks)
a52 1
	GetDlgItem(IDC_ED2KFIX)->EnableWindow(Ask4RegFix(true));
a85 6
	// Barry
	if(app_prefs->AutoTakeED2KLinks())
		CheckDlgButton(IDC_AUTOTAKEED2KLINKS,1);
	else
		CheckDlgButton(IDC_AUTOTAKEED2KLINKS,0);

a111 1
		app_prefs->SetAutoTakeED2KLinks((int8)IsDlgButtonChecked(IDC_AUTOTAKEED2KLINKS)); // DonGato
a146 2
		GetDlgItem(IDC_ED2KFIX)->SetWindowText(GetResString(IDS_ED2KLINKFIX));
		GetDlgItem(IDC_AUTOTAKEED2KLINKS)->SetWindowText(GetResString(IDS_AUTOTAKEED2KLINKS));
a147 6
}

void CPPgWindow::OnBnClickedEd2kfix()
{
	Ask4RegFix(false);
	GetDlgItem(IDC_ED2KFIX)->EnableWindow(Ask4RegFix(true));
@


1.5
log
@Added instrumentation for debugging memory leaks :
#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

To all .cpp files (I hope I didn't miss any one)
@
text
@d108 4
a111 2
		if (mintotray_old != (int8)app_prefs->DoMinToTray())
    			theApp.emuledlg->TrayMinimizeToTrayChanged();
@


1.4
log
@Removed SingleLock - no need there.
@
text
@d8 5
@


1.3
log
@bugfixes & control panel updates
@
text
@d89 1
a89 1
	CSingleLock PrefLock(&(app_prefs->m_Pref_Mutex),TRUE); 
@


1.2
log
@Fixed some memory leaks.
@
text
@d25 1
a30 1
	ON_BN_CLICKED(IDC_EXIT, OnBnClickedExit)
d34 1
d44 3
a64 5
	if(app_prefs->IsConfirmExitEnabled())
		CheckDlgButton(IDC_EXIT,1);
	else
		CheckDlgButton(IDC_EXIT,0);

d80 3
d98 1
a98 1
		app_prefs->SetConfirmExitEnabled((int8)IsDlgButtonChecked(IDC_EXIT));
d109 1
d112 1
a112 1
		theApp.emuledlg->m_DefaultFont.CreatePointFont(80,buffer); 
d130 1
a130 1
		GetDlgItem(IDC_EXIT)->SetWindowText(GetResString(IDS_PW_PROMPT));
@


1.2.2.1
log
@updating this branch...
@
text
@@


1.2.2.2
log
@updated control panes, and assorted bugfixes
@
text
@a24 1
	DDX_Control(pDX, IDC_USEDFONTSIZE, m_FontSize);
d30 1
a33 1
	ON_CBN_SELCHANGE(IDC_USEDFONTSIZE, OnCbnSelchangeUsedfontsize)
a42 3
	m_FontSize.AddString("8");
	m_FontSize.AddString("10");
	m_FontSize.AddString("12");
d61 5
a80 3
	m_FontSize.SetCurSel(0);
	if (app_prefs->GetFontSize())
		m_FontSize.SetCurSel((int)((app_prefs->GetFontSize()-80)/20)); // FontSize Cax2
d96 1
a96 1
		//app_prefs->SetConfirmExitEnabled((int8)IsDlgButtonChecked(IDC_EXIT));
a106 1
		app_prefs->SetFontSize(m_FontSize.GetCurSel()*20 + 80);	// FontSize Cax2
d109 1
a109 1
		theApp.emuledlg->m_DefaultFont.CreatePointFont(app_prefs->GetFontSize(),buffer); 
d127 1
a127 1
		//GetDlgItem(IDC_EXIT)->SetWindowText(GetResString(IDS_PW_PROMPT));
@


1.1
log
@*** empty log message ***
@
text
@d108 1
@

