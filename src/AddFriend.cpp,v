head	1.8;
access;
symbols
	PublicRelease_1_2e:1.8
	Interim_Release_1-2e_RC1:1.8
	PublicRelease_1_2d:1.8
	Interim_Release_1-2d_RC1:1.8
	Interim_Release_1-2d_beta1:1.7
	PublicRelease_1_2c:1.7
	Interim_Release_1-2c_RC1:1.7
	Interim_Release_1-2c_beta1:1.7
	PublicRelease_1_2b:1.7
	Interim_Release_1-2b_RC1:1.7
	PublicRelease_1_2a:1.7
	Interim_Release_1-2a_RC1:1.7
	Interim_Release_1-2a_beta2:1.7
	Interim_Release_1-2a_beta1:1.7
	PublicRelease_1_2:1.7
	Interim_Release_1-2_RC1:1.7
	Interim_Release_1-2_beta1:1.7
	PublicRelease_1_1g:1.7
	Interim_Release_1-1g_RC3:1.7
	Interim_Release_1-1g_RC2:1.7
	Interim_Release_1-1g_RC1:1.7
	Interim_Release_1-1g_beta2:1.6
	Interim_Release_1-1g_beta1:1.6
	PublicRelease_1_1f:1.6
	Interim_Release_1-1f_RC1:1.6
	PublicRelease_1_1e:1.6
	Interim_Release_1-1e_RC2:1.6
	Interim_Release_1-1e_RC1:1.6
	Interim_Release_1-1e_beta1:1.6
	PublicRelease_1_1d:1.6
	Interim_Release_1-1d_RC1:1.6
	PublicRelease_1_1c:1.6
	Interim_Release_1-1c_RC1:1.6
	Interim_Release_1-1c_beta2:1.6
	Interim_Release_1-1c_beta1:1.6
	PublicRelease_1_1b:1.6
	Interim_Release_1-1b_RC1:1.6
	PublicRelease_1_1a:1.6
	Interim_Release_1-1a_RC2:1.6
	Interim_Release_1-1a_RC1:1.6
	Interim_Release_1-1a_beta2:1.6
	Interim_Release_1-1a_beta1:1.6
	PublicRelease_1_1:1.6
	Interim_Release_1-1_beta1:1.6
	PublicRelease_1o:1.6
	Interim_Release_1o_RC1:1.6
	Interim_Release_1o_beta1:1.6
	PublicRelease_1n:1.6
	Interim_Release_1n_RC2:1.6
	Interim_Release_1n_RC1:1.6
	Interim_Release_1n_beta2:1.6
	Interim_Release_1n_beta1:1.6
	PublicRelease_1m:1.6
	Interim_Release_1m_beta1:1.6
	PublicRelease_1l:1.6
	Interim_Release_1l_RC3:1.6
	Interim_Release_1l_RC2:1.6
	Interim_Release_1l_RC1:1.6
	Interim_Release_1l_beta2:1.6
	Interim_Release_1l_beta1:1.6
	PublicRelease_1k:1.6
	Interim_Release_1k_RC4:1.6
	Interim_1k_RC3:1.6
	Interim_1k_RC2:1.6
	Interim_Release_1k_RC1:1.6
	Interim_Release_1k_beta5:1.6
	Intrerim_Release_1k_beta4:1.6
	Interim_Release_1k_beta1:1.5
	PublicRelease_1j:1.5
	Interim_Release_1J_RC3:1.5
	Interim_Release_1j_RC3:1.5
	Interim_Release_1j_RC2:1.5
	Interim_Release_1j_RC1:1.5
	Interim_Release_1j_beta2:1.5
	Interim_Release_1j_beta1:1.5
	PublicRelease_1i:1.5
	Interim_Release_1i_RC6:1.5
	Interim_Release_1i_RC3:1.5
	Interim_Release_1i_RC2:1.5
	Interim_Release_1i_RC1:1.5
	Interim_Release_1i_beta3:1.5
	Interim_Release_1i_beta2:1.5
	Interim_Release_1i_beta1:1.5
	PublicRelease_1h:1.4
	Interim_Release_1h_rc2:1.4
	Interim_Release_1h_RC1:1.4
	Interim_Release_1h_beta2:1.4
	Interim_Release_1h_beta1_now:1.4
	Interim_Release_1h_beta1:1.4
	PublicRelease_1g:1.4
	Interim_Release_1g_RC6_Final:1.4
	Interim_Release_1g_RC6:1.4
	Interim_Release_1g_RC5:1.4
	Interim_Release_1g_RC4:1.4
	Interim_Release_1g_RC3:1.4
	Interim_Release_1g_beta2:1.2
	Interim_Release_1g_beta1:1.2
	Interim_Release_1f_RC4:1.2
	Interim_Release_1f_RC3:1.2
	Interim_Release_1f_RC2:1.2
	Interim_Release_1f_RC:1.2
	Interim_Release_1f_beta2:1.2
	Interim_Release_1f_beta1:1.2
	PublicRelease_1e:1.2
	Interim_Release_1e_RC2:1.2
	Interim_Release_1e_RC:1.2
	Interim_Release_1e_beta3:1.2
	Interim_Release_1e_beta2:1.2
	Interim_Release_1e_beta2_before_kuchin:1.2
	Interim_Release_1e_beta1:1.2
	PublicRelease_1c:1.2
	featurestest:1.2.0.8
	Interim_Release_1c_RC:1.2
	Interim_Release_1c_beta2:1.2
	Interim_Release_1c_beta1:1.2
	threaded_downloadqueue:1.2.0.6
	PublicRelease_1b:1.2
	Interim_Release_1b_beta2:1.2
	Interim_Release_1b_beta1:1.2
	proxydeadlake:1.2.0.4
	PublicRelease_1a:1.2
	Interim_Release_1a_beta2:1.2
	BerkeleyDb:1.2.0.2
	Interim_Release_1a_beta1:1.2
	PublicRelease_1:1.2
	goldfish:1.2
	eMulePlus_1_RC2:1.2
	eMulePlus_26b_1RC1:1.2
	PreRelease_26b_i0e:1.2
	before_26d_merge:1.2
	Interim_Release_26b_i0d:1.1
	Interim_Release_26b_i0c:1.1
	Interim_Release_26b_i0b:1.1
	Interim_Release_26b_i0a:1.1
	systraydlg:1.1.0.8
	plus26based:1.1.0.6
	Interim_Release_25b_i0b:1.1
	Proxy_Dev:1.1
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@// @;


1.8
date	2008.03.03.04.38.38;	author aw3;	state Exp;
branches;
next	1.7;

1.7
date	2005.11.27.20.31.04;	author eklmn;	state Exp;
branches;
next	1.6;

1.6
date	2004.03.22.05.06.54;	author aw3;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.20.15.39.30;	author morevit;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.19.16.48.04;	author partyckip;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.15.09.10.04;	author partyckip;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.16.22.01.45;	author lord_kiron;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.17.59.08;	author cax2;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.01.28.16.53.54;	author cax2;	state Exp;
branches;
next	;


desc
@@


1.8
log
@ELEMENT_COUNT -> ARRSIZE.
@
text
@//this file is part of eMule
//Copyright (C)2002 Merkur ( merkur-@@users.sourceforge.net / http://www.emule-project.net )
//
//This program is free software; you can redistribute it and/or
//modify it under the terms of the GNU General Public License
//as published by the Free Software Foundation; either
//version 2 of the License, or (at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with this program; if not, write to the Free Software
//Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

#include "stdafx.h"
#include "emule.h"
#include "AddFriend.h"
#include "Friend.h"
#include "otherfunctions.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

IMPLEMENT_DYNAMIC(CAddFriend, CDialog)
CAddFriend::CAddFriend()
	: CDialog(CAddFriend::IDD, 0)
{
}

CAddFriend::~CAddFriend()
{
}

void CAddFriend::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
}

BOOL CAddFriend::OnInitDialog()
{
	CDialog::OnInitDialog();
	Localize();

//	Limit maximal number of input characters
	reinterpret_cast<CEdit*>(GetDlgItem(IDC_USERNAME))->SetLimitText(MAX_NICK_LENGTH);
	reinterpret_cast<CEdit*>(GetDlgItem(IDC_PORT))->SetLimitText(5);

	return true;
}

BEGIN_MESSAGE_MAP(CAddFriend, CDialog)
	ON_BN_CLICKED(IDC_ADD, OnAddBtn)
END_MESSAGE_MAP()


// CAddFriend message handlers
void CAddFriend::Localize()
{
	static const uint16 s_auResTbl[][2] =
	{
		{ IDC_INFO1, IDS_PAF_REQINFO },
		{ IDC_INFO2, IDS_PAF_MOREINFO },
		{ IDC_ADD, IDS_ADD },
		{ IDCANCEL, IDS_CANCEL },
		{ IDC_STATIC31, IDS_CD_UNAME },
		{ IDC_STATIC34, IDS_CD_UIP }
	};

	SetWindowText(GetResString(IDS_ADDAFRIEND));

	for (uint32 i = 0; i < ARRSIZE(s_auResTbl); i++)
		SetDlgItemText(s_auResTbl[i][0], GetResString(static_cast<UINT>(s_auResTbl[i][1])));

	SetDlgItemText(IDC_STATIC35, GetResString(IDS_PORT) + _T(':'));
}

void CAddFriend::OnAddBtn()
{
	uint32		dwIP, dwByte1, dwByte2, dwByte3, dwByte4;
	bool		bInvalidInput;
	CString		strTemp;
	int			iPort;

	GetDlgItemText(IDC_PORT, strTemp);
	bInvalidInput = (strTemp.IsEmpty() || ((iPort = _tstoi(strTemp)) > 0xffff));

	GetDlgItemText(IDC_IP, strTemp);
	if ( bInvalidInput ||
		(_stscanf(strTemp, _T("%u.%u.%u.%u"), &dwByte1, &dwByte2, &dwByte3, &dwByte4) != 4) ||
		(dwByte1 > 255) || (dwByte2 > 255) || (dwByte3 > 255) || (dwByte4 > 255) )
	{
		MessageBox(GetResString(IDS_ERR_NOVALIDFRIENDINFO));
	}
	else
	{
		dwIP = dwByte1 | (dwByte2 << 8) | (dwByte3 << 16) | (dwByte4 << 24);

		GetDlgItemText(IDC_USERNAME, strTemp);

		g_App.m_pFriendList->AddFriend(NULL, 0, dwIP, static_cast<uint16>(iPort), 0, strTemp, 0);
	
		OnCancel();
	}
}
@


1.7
log
@renamed 3 variables
@
text
@a17 3
// AddFriend.cpp : implementation file
//

a29 2
// CAddFriend dialog

d65 1
a65 1
	static const int s_aiResTbl[][2] =
d77 2
a78 2
	for (uint32 i = 0; i < ELEMENT_COUNT(s_aiResTbl); i++)
		SetDlgItemText(s_aiResTbl[i][0], GetResString(static_cast<UINT>(s_aiResTbl[i][1])));
@


1.6
log
@Fixed input value checks; optimization;
Added max. value limits; Unified localization.
@
text
@d111 1
a111 1
		g_eMuleApp.m_pFriendList->AddFriend(NULL, 0, dwIP, static_cast<uint16>(iPort), 0, strTemp, 0);
@


1.5
log
@More name changes, reinstated CMuleCtrlItem class, moved srcsarevisible from CPartFile to CMuleCtrlItem (where it belongs), added "Show Full Status Icons" and "Show Gray Paused" features with corresponding preferences, modified "SmartOpen" code to make it sticky and to make it work with sources with changing states.
@
text
@d50 2
a51 1
BOOL CAddFriend::OnInitDialog(){
d54 4
a57 1
	
d68 12
a79 1
void CAddFriend::Localize(){
a80 2
	GetDlgItem(IDC_INFO1)->SetWindowText(GetResString(IDS_PAF_REQINFO));
	GetDlgItem(IDC_INFO2)->SetWindowText(GetResString(IDS_PAF_MOREINFO));
d82 2
a83 2
	GetDlgItem(IDC_ADD)->SetWindowText(GetResString(IDS_ADD));
	GetDlgItem(IDCANCEL)->SetWindowText(GetResString(IDS_CANCEL));
d85 1
a85 4
	GetDlgItem(IDC_STATIC31)->SetWindowText(GetResString(IDS_CD_UNAME));
	GetDlgItem(IDC_STATIC32)->SetWindowText(GetResString(IDS_CD_UHASH));
	GetDlgItem(IDC_STATIC34)->SetWindowText(GetResString(IDS_CD_UIP));
	GetDlgItem(IDC_STATIC35)->SetWindowText(GetResString(IDS_PORT)+_T(":"));
d88 15
a102 24
void CAddFriend::OnAddBtn() {


//	if( GetDlgItem(IDC_USERNAME)->GetWindowTextLength()==0
//		|| GetDlgItem(IDC_USERHASH)->GetWindowTextLength()!=32	){
//		
//			MessageBox(GetResString(IDS_ERR_NOVALIDFRIENDINFO));
//			return;
//	}

	TCHAR buffer[256];
	CString name,userhash, fullip;
	uint32 ip;
	uint16 port;
	ip=port=0;
	if( GetDlgItem(IDC_USERNAME)->GetWindowTextLength() ){
		GetDlgItem(IDC_USERNAME)->GetWindowText(buffer,255);
		name.Format(_T("%s"),buffer);
	}
	if(GetDlgItem(IDC_IP)->GetWindowTextLength()){
		GetDlgItem(IDC_IP)->GetWindowText(buffer,20);
		fullip.Format(_T("%s"), buffer);
	}
	else{
a103 1
		return;
d105 1
a105 1
	if(GetDlgItem(IDC_PORT)->GetWindowTextLength())
d107 7
a113 2
		GetDlgItem(IDC_PORT)->GetWindowText(buffer,20);
		port = (_tstoi(buffer)) ? _tstoi(buffer) : 0;
d115 1
a115 23
	else{
		MessageBox(GetResString(IDS_ERR_NOVALIDFRIENDINFO));
		return;
	}
	int counter = 0;
	CString temp;
	for( int i = 0; i < 4; i++){
		fullip.Tokenize(_T("."),counter);
		if( counter == -1 ){
			MessageBox(GetResString(IDS_ERR_NOVALIDFRIENDINFO));
			return;
		}
	}
	counter=0;
	for(int i=0; i<4; i++){ 
		temp = fullip.Tokenize(_T("."),counter);
		ip += _tstoi(temp) * pow(256,i);
	}
	
	g_eMuleApp.m_pFriendList->AddFriend(NULL, 0, ip, port, 0, name, 0 );
	
	OnCancel();
}@


1.4
log
@unicode cleanup
@
text
@d129 1
a129 1
	theApp.friendlist->AddFriend(NULL, 0, ip, port, 0, name, 0 );
@


1.3
log
@unicode cleanup
@
text
@d75 1
a75 1
	GetDlgItem(IDC_STATIC35)->SetWindowText(GetResString(IDS_PORT)+":");
d88 1
a88 1
	char buffer[256];
d95 1
a95 1
		name.Format("%s",buffer);
d99 1
a99 1
		fullip.Format("%s", buffer);
d117 1
a117 1
		fullip.Tokenize(".",counter);
d125 1
a125 1
		temp = fullip.Tokenize(".",counter);
@


1.2
log
@Added instrumentation for debugging memory leaks :
#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

To all .cpp files (I hope I didn't miss any one)
@
text
@d108 1
a108 1
		port = (atoi(buffer)) ? atoi(buffer) : 0;
d126 1
a126 1
		ip += atoi(temp) * pow(256,i);
@


1.1
log
@*** empty log message ***
@
text
@d27 5
@


1.1.4.1
log
@updating this branch...
@
text
@@

