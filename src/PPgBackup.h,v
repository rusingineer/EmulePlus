head	1.7;
access;
symbols
	PublicRelease_1_2e:1.7
	Interim_Release_1-2e_RC1:1.7
	PublicRelease_1_2d:1.7
	Interim_Release_1-2d_RC1:1.7
	Interim_Release_1-2d_beta1:1.7
	PublicRelease_1_2c:1.5
	Interim_Release_1-2c_RC1:1.5
	Interim_Release_1-2c_beta1:1.5
	PublicRelease_1_2b:1.5
	Interim_Release_1-2b_RC1:1.5
	PublicRelease_1_2a:1.5
	Interim_Release_1-2a_RC1:1.5
	Interim_Release_1-2a_beta2:1.5
	Interim_Release_1-2a_beta1:1.5
	PublicRelease_1_2:1.5
	Interim_Release_1-2_RC1:1.5
	Interim_Release_1-2_beta1:1.5
	PublicRelease_1_1g:1.5
	Interim_Release_1-1g_RC3:1.5
	Interim_Release_1-1g_RC2:1.5
	Interim_Release_1-1g_RC1:1.5
	Interim_Release_1-1g_beta2:1.5
	Interim_Release_1-1g_beta1:1.5
	PublicRelease_1_1f:1.5
	Interim_Release_1-1f_RC1:1.5
	PublicRelease_1_1e:1.5
	Interim_Release_1-1e_RC2:1.5
	Interim_Release_1-1e_RC1:1.5
	Interim_Release_1-1e_beta1:1.5
	PublicRelease_1_1d:1.5
	Interim_Release_1-1d_RC1:1.5
	PublicRelease_1_1c:1.5
	Interim_Release_1-1c_RC1:1.5
	Interim_Release_1-1c_beta2:1.5
	Interim_Release_1-1c_beta1:1.5
	PublicRelease_1_1b:1.5
	Interim_Release_1-1b_RC1:1.5
	PublicRelease_1_1a:1.5
	Interim_Release_1-1a_RC2:1.5
	Interim_Release_1-1a_RC1:1.5
	Interim_Release_1-1a_beta2:1.5
	Interim_Release_1-1a_beta1:1.5
	PublicRelease_1_1:1.5
	Interim_Release_1-1_beta1:1.5
	PublicRelease_1o:1.5
	Interim_Release_1o_RC1:1.5
	Interim_Release_1o_beta1:1.5
	PublicRelease_1n:1.5
	Interim_Release_1n_RC2:1.5
	Interim_Release_1n_RC1:1.5
	Interim_Release_1n_beta2:1.5
	Interim_Release_1n_beta1:1.4
	PublicRelease_1m:1.4
	Interim_Release_1m_beta1:1.4
	PublicRelease_1l:1.4
	Interim_Release_1l_RC3:1.4
	Interim_Release_1l_RC2:1.4
	Interim_Release_1l_RC1:1.4
	Interim_Release_1l_beta2:1.4
	Interim_Release_1l_beta1:1.4
	PublicRelease_1k:1.3
	Interim_Release_1k_RC4:1.3
	Interim_1k_RC3:1.3
	Interim_1k_RC2:1.3
	Interim_Release_1k_RC1:1.3
	Interim_Release_1k_beta5:1.3
	Intrerim_Release_1k_beta4:1.3
	Interim_Release_1k_beta1:1.3
	PublicRelease_1j:1.3
	Interim_Release_1J_RC3:1.3
	Interim_Release_1j_RC3:1.3
	Interim_Release_1j_RC2:1.3
	Interim_Release_1j_RC1:1.3
	Interim_Release_1j_beta2:1.3
	Interim_Release_1j_beta1:1.3
	PublicRelease_1i:1.3
	Interim_Release_1i_RC6:1.3
	Interim_Release_1i_RC3:1.3
	Interim_Release_1i_RC2:1.3
	Interim_Release_1i_RC1:1.3
	Interim_Release_1i_beta3:1.3
	Interim_Release_1i_beta2:1.3
	Interim_Release_1i_beta1:1.3
	PublicRelease_1h:1.2
	Interim_Release_1h_rc2:1.2
	Interim_Release_1h_RC1:1.2
	Interim_Release_1h_beta2:1.2
	Interim_Release_1h_beta1_now:1.1
	Interim_Release_1h_beta1:1.1;
locks; strict;
comment	@ * @;


1.7
date	2008.02.20.05.15.51;	author aw3;	state Exp;
branches;
next	1.6;

1.6
date	2007.10.31.18.25.07;	author fuxie-dk;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.05.01.25.32;	author aw3;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.03.10.57.14;	author netwolf1;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.22.16.37.31;	author morevit;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.25.19.45.07;	author partyckip;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.28.02.33.12;	author dongato;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Select current backup directory on backup directory browsing;
Optimized dialog regarding required memory and speed;
Removed old not used localization; Removed old not working code;
Suppressed compiler warnings; Formatting.
@
text
@//	This file is part of eMule Plus
//
//	This program is free software; you can redistribute it and/or
//	modify it under the terms of the GNU General Public License
//	as published by the Free Software Foundation; either
//	version 2 of the License, or (at your option) any later version.
//
//	This program is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU General Public License for more details.
//
//	You should have received a copy of the GNU General Public License
//	along with this program; if not, write to the Free Software
//	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#pragma once

class CPreferences;

class CPPgBackup : public CPropertyPage
{
	DECLARE_DYNAMIC(CPPgBackup)

public:
	CPPgBackup();
	virtual ~CPPgBackup();

	void SetPrefs(CPreferences* in_prefs) { m_pPrefs = in_prefs;}

	// Dialog Data
	enum { IDD = IDD_PPG_BACKUP };

	virtual BOOL OnInitDialog();
	virtual BOOL OnApply();
	void Localize(void);

	DECLARE_MESSAGE_MAP()
	afx_msg void OnBnClickedBackupnow();
	afx_msg void OnBnClickedCommon();
	afx_msg void OnBnClickedPart();
	afx_msg void OnBnClickedSelectall();
	afx_msg void OnBnClickedBrowse();
	afx_msg void OnBnClickedScheduledBackupCheck();
	afx_msg void OnSettingsChange()						{ SetModified(); }

protected:
	void SetModified(BOOL bChanged = TRUE)
	{
		m_bModified = bChanged;
		CPropertyPage::SetModified(bChanged);
	}

	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support

private:
	void LoadSettings();
	void CheckBackupNowButton();
	BOOL SelectDir(const TCHAR *pcInDir, TCHAR *outdir, const CString &titletext);

protected:
	CPreferences *m_pPrefs;
	BOOL	m_bModified;
	BOOL	m_bDatFiles;
	BOOL	m_bMetFiles;
	BOOL	m_bIniFiles;
	BOOL	m_bPartFiles;
	BOOL	m_bPartMetFiles;
	BOOL	m_bTxtsrcFiles;
	BOOL	m_bAutoBackup;
	BOOL	m_bOverwriteFiles;
	BOOL	m_bScheduledBackup;
	CString	m_strBackupDir;
	CString	m_strScheduledBackupInterval;
};
@


1.6
log
@Suppressed compiler warnings; Reduced H-file dependency [Aw3].
@
text
@d32 1
a32 11
protected:
	BOOL	m_bModified;
	void SetModified(BOOL bChanged = TRUE)
	{
		m_bModified = bChanged;
		CPropertyPage::SetModified(bChanged);
	}
	CPreferences *m_pPrefs;
protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
public:
a36 6
private:
	void LoadSettings();
	void CheckBackupNowButton();
	bool guardian;
	bool SelectDir(TCHAR* outdir, CString titletext);
public:
a41 2
	afx_msg void OnBnClickedAutobackup();
	afx_msg void OnBnClickedOverwrite();
a42 2
	afx_msg void OnEnChangeBackupDir();
	afx_msg void OnBnClickedBackupAuto();
d44 2
a45 1
	afx_msg void OnEnChangeScheduledBackupInterval()			{ SetModified(); };
d47 8
a54 11
	BOOL datFiles;
	BOOL metFiles;
	BOOL iniFiles;
	BOOL partFiles;
	BOOL partMetFiles;
	BOOL partTxtsrcFiles;
	BOOL autoBackup;
	BOOL overwriteFiles;
	CString backupDir;
	BOOL scheduledBackup;
	CString scheduledBackupInterval;
d56 18
a73 12
	CString backupTypeDesc;
	CButton selectAllButton;
	CButton backupNowButton;
	CString backupOptionDesc;
	CString backupDirDesc;
	CButton autoBackupCheck;
	CButton overwriteFilesCheck;
	CEdit	backupDirEdit;
	CButton backupBrowseButton;
	CButton scheduledBackupCheck;
	CEdit	scheduledBackupEdit;
	CString hours;
@


1.5
log
@Possibility to backup .part.txtsrc files.
@
text
@d1 15
d18 1
a18 4
#include "Preferences.h"
#include "afxwin.h"

// CPPgBackup dialog
d28 1
a28 1
	void SetPrefs(CPreferences* in_prefs) {	m_pPrefs = in_prefs;}
d33 1
a33 1
	bool m_bModified;
@


1.4
log
@added Scheduled Backup feature
@
text
@d3 1
a3 1
#include "preferences.h"
d6 1
a6 1
// CPPgTweaks dialog
d43 1
a43 3
	afx_msg void OnBnClickedDat();
	afx_msg void OnBnClickedMet();
	afx_msg void OnBnClickedIni();
a44 1
	afx_msg void OnBnClickedPartMet();
d59 1
@


1.3
log
@Formatting, comments, and name changes.
@
text
@d54 2
d65 2
d75 1
a75 1
	CEdit backupDirEdit;
d77 3
@


1.2
log
@converted to use DDX framework
@
text
@d16 1
a16 1
	void SetPrefs(CPreferences* in_prefs) {	app_prefs = in_prefs;}
d27 1
a27 1
	CPreferences *app_prefs;
@


1.1
log
@BackUp feature [n@@boleo]
@
text
@d54 19
@

