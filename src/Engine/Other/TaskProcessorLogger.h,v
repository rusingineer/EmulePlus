head	1.5;
access;
symbols
	PublicRelease_1_2e:1.5
	Interim_Release_1-2e_RC1:1.5
	PublicRelease_1_2d:1.5
	Interim_Release_1-2d_RC1:1.5
	Interim_Release_1-2d_beta1:1.5
	PublicRelease_1_2c:1.5
	Interim_Release_1-2c_RC1:1.5
	Interim_Release_1-2c_beta1:1.5
	PublicRelease_1_2b:1.5
	Interim_Release_1-2b_RC1:1.5
	PublicRelease_1_2a:1.5
	Interim_Release_1-2a_RC1:1.5
	Interim_Release_1-2a_beta2:1.5
	Interim_Release_1-2a_beta1:1.5
	PublicRelease_1_2:1.5
	Interim_Release_1-2_RC1:1.5
	Interim_Release_1-2_beta1:1.5
	PublicRelease_1_1g:1.5
	Interim_Release_1-1g_RC3:1.5
	Interim_Release_1-1g_RC2:1.5
	Interim_Release_1-1g_RC1:1.5
	Interim_Release_1-1g_beta2:1.5
	Interim_Release_1-1g_beta1:1.5
	PublicRelease_1_1f:1.5
	Interim_Release_1-1f_RC1:1.5
	PublicRelease_1_1e:1.5
	Interim_Release_1-1e_RC2:1.5
	Interim_Release_1-1e_RC1:1.5
	Interim_Release_1-1e_beta1:1.5
	PublicRelease_1_1d:1.4
	Interim_Release_1-1d_RC1:1.4
	PublicRelease_1_1c:1.4
	Interim_Release_1-1c_RC1:1.4
	Interim_Release_1-1c_beta2:1.3
	Interim_Release_1-1c_beta1:1.3
	PublicRelease_1_1b:1.2
	Interim_Release_1-1b_RC1:1.2
	PublicRelease_1_1a:1.2
	Interim_Release_1-1a_RC2:1.2
	Interim_Release_1-1a_RC1:1.2
	Interim_Release_1-1a_beta2:1.2
	Interim_Release_1-1a_beta1:1.2
	PublicRelease_1_1:1.2
	Interim_Release_1-1_beta1:1.2
	PublicRelease_1o:1.2
	Interim_Release_1o_RC1:1.2
	Interim_Release_1o_beta1:1.2
	PublicRelease_1n:1.2
	Interim_Release_1n_RC2:1.2
	Interim_Release_1n_RC1:1.2
	PublicRelease_1m:1.2
	Interim_Release_1m_beta1:1.2
	PublicRelease_1l:1.2
	Interim_Release_1l_RC3:1.2
	Interim_Release_1l_RC2:1.2
	Interim_Release_1l_RC1:1.2
	Interim_Release_1l_beta2:1.2
	Interim_Release_1l_beta1:1.2
	PublicRelease_1k:1.2
	Interim_Release_1k_RC4:1.2
	Interim_1k_RC3:1.2
	Interim_1k_RC2:1.2
	Interim_Release_1k_RC1:1.2
	Interim_Release_1k_beta5:1.2
	Intrerim_Release_1k_beta4:1.2
	Interim_Release_1k_beta1:1.2
	PublicRelease_1j:1.1
	Interim_Release_1J_RC3:1.1
	Interim_Release_1j_RC3:1.1;
locks; strict;
comment	@ * @;


1.5
date	2005.03.22.22.02.09;	author kuchin;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.23.18.57.48;	author kuchin;	state Exp;
branches;
next	1.3;

1.3
date	2004.12.29.16.04.22;	author kuchin;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.06.20.50.07;	author kuchin;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.16.14.51.00;	author kuchin;	state Exp;
branches;
next	;


desc
@@


1.5
log
@v2 - enhancing logging subsystem
@
text
@// Logger.h: interface for the CTaskProcessor_Logger class.
//
//////////////////////////////////////////////////////////////////////

#pragma once

#include "../../Engine/TaskProcessor.h"
#include "../../Engine/Sockets/OpCode.h"

struct CTask_LogOpcode : public CTask {
	virtual bool Process();
	virtual LPCTSTR TaskName(){ return _T("LogOpCode"); }
	ULONG m_nIdProtoType;
	ULONG m_nClientID;
	BOOL m_bOut;
	DWORD m_dwSize;
	BYTE m_pBuf[0]; // variable-sized

	inline void* operator new(size_t nSize, DWORD dwSizeExtra) { return malloc(nSize + dwSizeExtra); }
	inline void operator delete(void* pPtr) { free(pPtr); }
};

class CTaskProcessor_Logger : public CTaskProcessor
{
	virtual bool Start();
	virtual void Stop();
	virtual void ProcessTimeout();

	HANDLE m_hFile;

public:
	CTaskProcessor_Logger() :
	  m_hFile(INVALID_HANDLE_VALUE)
	  {}

	void Post(const COpCode&, T_CLIENT_TYPE eType, ULONG nClientID, BOOL bOut);
	void Write(PCVOID, DWORD); // must be callied by CTask_LogOpcode only.
};

@


1.4
log
@v2 - updated protocol, debug features, bugfix for completion task, revert to default struct byte alignment
@
text
@a6 1
#include "../../Loggable.h"
@


1.3
log
@There can be only one engine :-)
@
text
@d13 1
@


1.2
log
@New engine - logging
@
text
@d12 1
a12 1
	virtual bool Process(CEmEngine&);
d32 1
a32 2
	CTaskProcessor_Logger(CEmEngine& stEngine) :
	  CTaskProcessor(stEngine),
@


1.1
log
@*** empty log message ***
@
text
@d13 1
a13 1
	T_CLIENT_TYPE m_eType;
@

