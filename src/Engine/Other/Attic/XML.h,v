head	1.2;
access;
symbols
	Interim_Release_1j_beta1:1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.01.03.11.19.55;	author kuchin;	state dead;
branches;
next	1.1;

1.1
date	2003.12.23.10.20.40;	author kuchin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@New engine - XML
@
text
@// XML.h: helper class.
//
//////////////////////////////////////////////////////////////////////

#pragma once

#import "msxml.dll"

class CMuleXml
{
public:
	bool Create()
	{
		try
		{
			m_spDoc = NULL;
			m_spDoc.CreateInstance(_T("msxml.domdocument"));
			m_spDoc->async = VARIANT_FALSE;
			return true;
		}
		catch(...)
		{
			return false;
		}
	}

	bool Load(LPCTSTR sXml)
	{
		try
		{
			if(!Create())
				return false;
			return (m_spDoc->loadXML(bstr_t(sXml)) == VARIANT_TRUE);
		}
		catch(...)
		{
			return false;
		}
	}

	bool SelectNode(LPCTSTR sNodeName)
	{
		try
		{
			m_spNode = NULL;
			MSXML::IXMLDOMNode *pResult;
			if(FAILED(m_spDoc->raw_selectSingleNode(bstr_t(sNodeName), &pResult)))
				return false;
			m_spNode = MSXML::IXMLDOMNodePtr(pResult);
			return true;
		}
		catch(...)
		{
			return false;
		}
	}

	CString GetAttribute(LPCTSTR sAttribName)
	{
		try
		{
			MSXML::IXMLDOMNodePtr spName = m_spNode->attributes->getNamedItem(bstr_t(sAttribName));
			if(spName == NULL)
				return _T("");
			bstr_t bsResult = spName->text;
			return (LPCTSTR)bsResult;
		}
		catch(...)
		{
			return _T("");
		}
	}

	bool CreateElement(LPCTSTR sElementName)
	{
		try
		{
/*			MSXML::IXMLDOMProcessingInstructionPtr spPI = 
				m_spDoc->createProcessingInstruction(bstr_t(_T("xml")), bstr_t(_T("version=\"1.0\"")));
			m_spDoc->appendChild(spPI);*/
			m_spNode = m_spDoc->createElement(bstr_t(sElementName));
			if(m_spNode != NULL)
				if(SUCCEEDED(m_spDoc->appendChild(m_spNode)))
					return true;
			return false;
		}
		catch(...)
		{
			return false;
		}
	}

	bool SetAttribute(LPCTSTR sAttribName, variant_t vtValue)
	{
		try
		{
			MSXML::IXMLDOMElementPtr spElem = m_spNode;
			return SUCCEEDED(spElem->setAttribute(bstr_t(sAttribName), vtValue));
		}
		catch(...)
		{
			return false;
		}
	}

	CString GetXml()
	{
		try
		{
			bstr_t bsXml = m_spDoc->xml;
			return (LPCTSTR)bsXml;
		}
		catch(...)
		{
			return _T("");
		}
	}

private:
	MSXML::IXMLDOMDocumentPtr	m_spDoc;
	MSXML::IXMLDOMNodePtr		m_spNode;
};@


1.1
log
@New engine - XML
@
text
@@

