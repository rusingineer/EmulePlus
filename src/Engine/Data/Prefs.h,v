head	1.5;
access;
symbols
	PublicRelease_1_2e:1.5
	Interim_Release_1-2e_RC1:1.5
	PublicRelease_1_2d:1.5
	Interim_Release_1-2d_RC1:1.5
	Interim_Release_1-2d_beta1:1.5
	PublicRelease_1_2c:1.5
	Interim_Release_1-2c_RC1:1.5
	Interim_Release_1-2c_beta1:1.5
	PublicRelease_1_2b:1.5
	Interim_Release_1-2b_RC1:1.5
	PublicRelease_1_2a:1.5
	Interim_Release_1-2a_RC1:1.5
	Interim_Release_1-2a_beta2:1.5
	Interim_Release_1-2a_beta1:1.5
	PublicRelease_1_2:1.5
	Interim_Release_1-2_RC1:1.5
	Interim_Release_1-2_beta1:1.5
	PublicRelease_1_1g:1.5
	Interim_Release_1-1g_RC3:1.5
	Interim_Release_1-1g_RC2:1.5
	Interim_Release_1-1g_RC1:1.5
	Interim_Release_1-1g_beta2:1.5
	Interim_Release_1-1g_beta1:1.5
	PublicRelease_1_1f:1.5
	Interim_Release_1-1f_RC1:1.5
	PublicRelease_1_1e:1.5
	Interim_Release_1-1e_RC2:1.5
	Interim_Release_1-1e_RC1:1.5
	Interim_Release_1-1e_beta1:1.5;
locks; strict;
comment	@ * @;


1.5
date	2005.04.17.05.16.20;	author kuchin;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.08.14.16.36;	author kuchin;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.08.11.09.34;	author kuchin;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.22.22.02.09;	author kuchin;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.22.15.54.09;	author kuchin;	state Exp;
branches;
next	;


desc
@@


1.5
log
@v2 - corrected protocol, tags
@
text
@// Prefs.h: interface for the CPrefs class.
//
//////////////////////////////////////////////////////////////////////

#include "../../Preferences.h"

class CPrefs : public CPreferences
{
public:
	CPrefs();
	virtual ~CPrefs();
	void LoadPrefs();
	void SavePrefs();

	// Connection
	__declspec(property(get=_GetPortXml))	USHORT	PortXml;
	__declspec(property(get=_GetXmlLocal))	bool	XmlLocalBind;

	USHORT	_GetPortXml()	const	{ return m_uPortXml; }
	bool	_GetXmlLocal()	const	{ return m_bXmlLocalBind; }

	// Upload
	__declspec(property(get=_GetMaxUpSlots,put=_PutMaxUpSlots))	USHORT MaxUploadSlots;

	USHORT _GetMaxUpSlots() const;

	void _PutMaxUpSlots(USHORT uSlots){ m_uMaxUploadSlots = uSlots; }

	// Debug
	__declspec(property(get=_GetAlertOnErrors))	bool AlertOnErrors;
	__declspec(property(get=_GetSaveLogsIO))		bool SaveLogsIO;

	bool _GetAlertOnErrors()	const	{ return m_bAlertOnErrors; }
	bool _GetSaveLogsIO()		const	{ return m_bSaveLogsIO; }

protected:
	// Connection
	USHORT	m_uPortXml;
	bool	m_bXmlLocalBind;

	// Upload
	USHORT	m_uMaxUploadSlots;

	// Debug
	bool	m_bAlertOnErrors;
	bool	m_bSaveLogsIO;
};@


1.4
log
@v2 - more abstraction + logic
@
text
@d11 1
d13 1
d16 2
a17 1
	__declspec(property(get=_GetPortXml))	USHORT PortXml;
d19 2
a20 1
	USHORT _GetPortXml()	const	{ return m_uPortXml; }
d39 1
@


1.3
log
@v2 - increased level of abstraction + minor improvements
@
text
@d13 5
d26 2
a27 2
	__declspec(property(get=_AlertOnErrors))	bool AlertOnErrors;
	__declspec(property(get=_SaveLogsIO))		bool SaveLogsIO;
d29 2
a30 2
	bool _AlertOnErrors() const	{ return m_bAlertOnErrors; }
	bool _SaveLogsIO() const	{ return m_bSaveLogsIO; }
d33 3
@


1.2
log
@v2 - enhancing logging subsystem
@
text
@d11 1
d13 1
d20 7
d28 1
d30 4
@


1.1
log
@v2 - more upload logic
@
text
@d9 11
@

