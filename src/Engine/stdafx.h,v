head	1.22;
access;
symbols
	PublicRelease_1_2e:1.22
	Interim_Release_1-2e_RC1:1.22
	PublicRelease_1_2d:1.22
	Interim_Release_1-2d_RC1:1.22
	Interim_Release_1-2d_beta1:1.22
	PublicRelease_1_2c:1.22
	Interim_Release_1-2c_RC1:1.22
	Interim_Release_1-2c_beta1:1.22
	PublicRelease_1_2b:1.22
	Interim_Release_1-2b_RC1:1.22
	PublicRelease_1_2a:1.22
	Interim_Release_1-2a_RC1:1.22
	Interim_Release_1-2a_beta2:1.22
	Interim_Release_1-2a_beta1:1.22
	PublicRelease_1_2:1.22
	Interim_Release_1-2_RC1:1.22
	Interim_Release_1-2_beta1:1.22
	PublicRelease_1_1g:1.22
	Interim_Release_1-1g_RC3:1.22
	Interim_Release_1-1g_RC2:1.22
	Interim_Release_1-1g_RC1:1.22
	Interim_Release_1-1g_beta2:1.22
	Interim_Release_1-1g_beta1:1.22
	PublicRelease_1_1f:1.22
	Interim_Release_1-1f_RC1:1.22
	PublicRelease_1_1e:1.22
	Interim_Release_1-1e_RC2:1.22
	Interim_Release_1-1e_RC1:1.22
	Interim_Release_1-1e_beta1:1.22
	PublicRelease_1_1d:1.18
	Interim_Release_1-1d_RC1:1.17
	PublicRelease_1_1c:1.16
	Interim_Release_1-1c_RC1:1.15
	Interim_Release_1-1c_beta2:1.14
	Interim_Release_1-1c_beta1:1.11
	PublicRelease_1_1b:1.7
	Interim_Release_1-1b_RC1:1.7
	PublicRelease_1_1a:1.7
	Interim_Release_1-1a_RC2:1.7
	Interim_Release_1-1a_RC1:1.7
	Interim_Release_1-1a_beta2:1.7
	Interim_Release_1-1a_beta1:1.7
	PublicRelease_1_1:1.7
	Interim_Release_1-1_beta1:1.7
	PublicRelease_1o:1.7
	Interim_Release_1o_RC1:1.7
	Interim_Release_1o_beta1:1.7
	PublicRelease_1n:1.7
	Interim_Release_1n_RC2:1.7
	Interim_Release_1n_RC1:1.7
	PublicRelease_1m:1.7
	Interim_Release_1m_beta1:1.7
	PublicRelease_1l:1.7
	Interim_Release_1l_RC3:1.6
	Interim_Release_1l_RC2:1.6
	Interim_Release_1l_RC1:1.6
	Interim_Release_1l_beta2:1.6
	Interim_Release_1l_beta1:1.6
	PublicRelease_1k:1.5
	Interim_Release_1k_RC4:1.5
	Interim_1k_RC3:1.5
	Interim_1k_RC2:1.5
	Interim_Release_1k_RC1:1.5
	Interim_Release_1k_beta5:1.5
	Intrerim_Release_1k_beta4:1.5
	Interim_Release_1k_beta1:1.5
	PublicRelease_1j:1.5
	Interim_Release_1J_RC3:1.5
	Interim_Release_1j_RC3:1.5
	Interim_Release_1j_RC2:1.5
	Interim_Release_1j_RC1:1.5
	Interim_Release_1j_beta2:1.5
	Interim_Release_1j_beta1:1.5;
locks; strict;
comment	@ * @;


1.22
date	2005.04.16.00.04.59;	author kuchin;	state Exp;
branches;
next	1.21;

1.21
date	2005.04.08.14.16.36;	author kuchin;	state Exp;
branches;
next	1.20;

1.20
date	2005.04.08.11.09.34;	author kuchin;	state Exp;
branches;
next	1.19;

1.19
date	2005.03.22.22.02.09;	author kuchin;	state Exp;
branches;
next	1.18;

1.18
date	2005.03.18.15.36.51;	author kuchin;	state Exp;
branches;
next	1.17;

1.17
date	2005.03.13.19.30.16;	author kuchin;	state Exp;
branches;
next	1.16;

1.16
date	2005.02.27.13.39.35;	author kuchin;	state Exp;
branches;
next	1.15;

1.15
date	2005.02.23.19.35.30;	author kuchin;	state Exp;
branches;
next	1.14;

1.14
date	2005.02.03.19.48.17;	author kuchin;	state Exp;
branches;
next	1.13;

1.13
date	2005.02.03.16.12.38;	author kuchin;	state Exp;
branches;
next	1.12;

1.12
date	2005.02.03.15.14.15;	author kuchin;	state Exp;
branches;
next	1.11;

1.11
date	2005.01.29.14.55.01;	author kuchin;	state Exp;
branches;
next	1.10;

1.10
date	2005.01.28.20.13.52;	author kuchin;	state Exp;
branches;
next	1.9;

1.9
date	2005.01.04.13.21.28;	author kuchin;	state Exp;
branches;
next	1.8;

1.8
date	2004.12.29.16.04.22;	author kuchin;	state Exp;
branches;
next	1.7;

1.7
date	2004.06.13.21.27.22;	author eklmn;	state Exp;
branches;
next	1.6;

1.6
date	2004.04.21.16.32.47;	author eklmn;	state Exp;
branches;
next	1.5;

1.5
date	2003.12.21.14.01.37;	author forcha;	state Exp;
branches;
next	1.4;

1.4
date	2003.12.15.14.47.32;	author kuchin;	state Exp;
branches;
next	1.3;

1.3
date	2003.12.11.15.26.01;	author kuchin;	state Exp;
branches;
next	1.2;

1.2
date	2003.12.11.14.32.48;	author kuchin;	state Exp;
branches;
next	1.1;

1.1
date	2003.12.10.14.49.58;	author kuchin;	state Exp;
branches;
next	;


desc
@@


1.22
log
@v2 - Xml events and other improvements
@
text
@// stdafx.h : include file for standard system include files,
//  or project specific include files that are used frequently, but
//      are changed infrequently
//

#pragma once

// Change these values to use different versions
#define WINVER			0x0400
#define _WIN32_WINNT	0x0400
#define _WIN32_IE		0x0500

/*
#define _RICHEDIT_VER	0x0100
#define _WTL_USE_CSTRING

#include <atlbase.h>
#include <atlapp.h>

extern CAppModule _Module;

#include <atlwin.h>

#include <atlmisc.h>

#define ASSERT ATLASSERT
#define VERIFY ATLVERIFY
#define TRACE ATLTRACE
#define TRACE2 ATLTRACE2
*/
#ifndef VC_EXTRALEAN
#define VC_EXTRALEAN		// Exclude rarely-used stuff from Windows headers
#endif
#define _ATL_CSTRING_EXPLICIT_CONSTRUCTORS	// some CString constructors will be explicit
#define _AFX_ALL_WARNINGS	// turns off MFC's hiding of some common and often safely ignored warning messages
#include <afxwin.h>         // MFC core and standard components
#include <afxext.h>         // MFC extensions
#include <afxdisp.h>        // MFC Automation classes
#include <afxdtctl.h>		// MFC support for Internet Explorer 4 Common Controls
#ifndef _AFX_NO_AFXCMN_SUPPORT
#include <afxcmn.h>			// MFC support for Windows Common Controls
#endif // _AFX_NO_AFXCMN_SUPPORT
#include <afxmt.h>
#include <afxpriv.h>
#include <afxtempl.h>

//////////////////////////
#define NEW_SOCKETS
#define NEW_SOCKETS_ENGINE
#define SUPPORT_CLIENT_PEER

#include <atlbase.h>
#include <comdef.h>
#include <locale.h>


#if defined(_DEBUG)
#define EMULE_TRY
#define EMULE_CATCH
#define EMULE_CATCH2
#else
#define EMULE_TRY try{
#define EMULE_CATCH } catch(...){}
/*	catch(CString &str){ try{g_eMuleApp.m_pdlgEmule->AddBugReport(__FUNCTION__,__FILE__, __LINE__,str);}catch(...){} }\
	catch(CException *err){ try{g_eMuleApp.m_pdlgEmule->AddBugReport(__FUNCTION__,__FILE__, __LINE__,GetErrorMessage(err));err->Delete();}catch(...){} }\
	catch(...){ try{g_eMuleApp.m_pdlgEmule->AddBugReport(__FUNCTION__,__FILE__, __LINE__,_T(""));}catch(...){} }*/
#define EMULE_CATCH2 } catch(...){}
#endif

//#define GetResString(id)  CString(_T("NOT IMPLEMENTED YET"))

#include <winsock2.h>
#include <ws2tcpip.h>
#define _WINSOCKAPI_
/*
#include "Other/atlwfile.h"

#include <atlcrack.h>
#include <atlddx.h>
*/
#define PROCESS_OPCODES

#include "EmEngine.h"
extern CEmEngine g_stEngine;
@


1.21
log
@v2 - more abstraction + logic
@
text
@d9 2
a10 2
#define WINVER			0x0500
#define _WIN32_WINNT	0x0500
@


1.20
log
@v2 - increased level of abstraction + minor improvements
@
text
@a55 21
#define PCTSTR LPCTSTR
#define PCVOID LPCVOID
#ifndef _countof
#	define _countof(string) (sizeof((string)) / sizeof((string)[0]))
#endif // _countof
#pragma warning (disable : 4200)
#pragma warning (disable : 4355)

enum T_CLIENT_TYPE {
	T_CLIENT_PEER,
	T_CLIENT_SERVER,
	T_CLIENT_PEER_SERVER,
	T_CLIENT_WEB,
	T_CLIENT_XML
};

#include <vector>
#include <map>
#include <queue>

using namespace std;
a82 3
#include "Other/Time.h"
#include "Other/Loggable2.h"

@


1.19
log
@v2 - enhancing logging subsystem
@
text
@d9 2
a10 2
#define WINVER			0x0400
#define _WIN32_WINNT	0x0400
@


1.18
log
@v2 - more upload logic
@
text
@d105 1
@


1.17
log
@v2 - little improvements
@
text
@d104 2
@


1.16
log
@v2 - fix for Release configuration
@
text
@d50 1
@


1.15
log
@v2 - updated protocol, need to fix packed protocol
@
text
@d83 1
a83 1
#define EMULE_CATCH }\
d85 2
a86 2
	catch(CException *err){ try{g_eMuleApp.m_pdlgEmule->AddBugReport(__FUNCTION__,__FILE__, __LINE__,GetErrorMessage(err));err->Delete();}catch(...){} }*/\
	catch(...){ /*try{g_eMuleApp.m_pdlgEmule->AddBugReport(__FUNCTION__,__FILE__, __LINE__,_T(""));}catch(...){}*/ }
@


1.14
log
@More ifdefs for v2
@
text
@d66 1
@


1.13
log
@Many ifdefs for v2
@
text
@d44 2
@


1.12
log
@Ideological switch (may be considered as temporary, but for long term) - ATL to MFC
Actually we don't need them both, but I want to work with our current KnownFile-based classes, which use MFC a lot
@
text
@d49 1
d51 1
d87 1
a87 1
#define GetResString(id)  _T("NOT IMPLEMENTED YET")
@


1.11
log
@Xml and database functionality
@
text
@d9 5
a13 3
#define WINVER		0x0400
//#define _WIN32_WINNT	0x0400
#define _WIN32_IE	0x0500
a14 1

a25 4
//////////////////////////
#define NEW_SOCKETS
#define NEW_SOCKETS_ENGINE

d30 18
d90 1
a90 1

d95 1
a95 1

@


1.10
log
@Corrected v2 defines, improved v2 webserver and database functionality
@
text
@d83 1
a83 2
//#include "EmEngine.h"
class CEmEngine;
@


1.9
log
@XML connecting, tray app
@
text
@a71 2
#include "../BerkeleyDb/build_win32/db_cxx.h"

d83 2
a84 1
#include "EmEngine.h"
@


1.8
log
@There can be only one engine :-)
@
text
@d47 2
a48 1
	T_CLIENT_WEB
@


1.7
log
@replaced macro ELEMENT_COUNT() over _countof()
@
text
@d81 5
@


1.6
log
@added ELEMENT_COUNT macro
@
text
@a68 2
#define ELEMENT_COUNT(X) (sizeof(X) / sizeof(X[0]))

@


1.5
log
@gui
@
text
@d69 2
@


1.4
log
@New engine - server classes, database
@
text
@d78 3
@


1.3
log
@New engine - database added
@
text
@d76 2
@


1.2
log
@New engine
@
text
@d71 2
@


1.1
log
@New engine
@
text
@d11 1
a11 1
#define _WIN32_IE	0x0400
d14 2
d22 52
@

