head	1.6;
access;
symbols
	PublicRelease_1_2e:1.6
	Interim_Release_1-2e_RC1:1.6
	PublicRelease_1_2d:1.6
	Interim_Release_1-2d_RC1:1.6
	Interim_Release_1-2d_beta1:1.6
	PublicRelease_1_2c:1.6
	Interim_Release_1-2c_RC1:1.6
	Interim_Release_1-2c_beta1:1.6
	PublicRelease_1_2b:1.6
	Interim_Release_1-2b_RC1:1.6
	PublicRelease_1_2a:1.6
	Interim_Release_1-2a_RC1:1.6
	Interim_Release_1-2a_beta2:1.6
	Interim_Release_1-2a_beta1:1.6
	PublicRelease_1_2:1.6
	Interim_Release_1-2_RC1:1.6
	Interim_Release_1-2_beta1:1.6
	PublicRelease_1_1g:1.6
	Interim_Release_1-1g_RC3:1.6
	Interim_Release_1-1g_RC2:1.6
	Interim_Release_1-1g_RC1:1.6
	Interim_Release_1-1g_beta2:1.6
	Interim_Release_1-1g_beta1:1.6
	PublicRelease_1_1f:1.6
	Interim_Release_1-1f_RC1:1.6
	PublicRelease_1_1e:1.6
	Interim_Release_1-1e_RC2:1.6
	Interim_Release_1-1e_RC1:1.6
	Interim_Release_1-1e_beta1:1.6
	PublicRelease_1_1d:1.6
	Interim_Release_1-1d_RC1:1.6
	PublicRelease_1_1c:1.5
	Interim_Release_1-1c_RC1:1.5
	Interim_Release_1-1c_beta2:1.1;
locks; strict;
comment	@ * @;


1.6
date	2005.03.13.19.30.16;	author kuchin;	state Exp;
branches;
next	1.5;

1.5
date	2005.02.23.18.57.47;	author kuchin;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.18.18.31.25;	author kuchin;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.18.16.19.50;	author kuchin;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.17.17.41.59;	author kuchin;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.13.57.14;	author kuchin;	state Exp;
branches;
next	;


desc
@@


1.6
log
@v2 - little improvements
@
text
@// TaskProcessorFiles.h: interface for the CTaskProcessor_Files class.
//
//////////////////////////////////////////////////////////////////////

#pragma once

#include "../../Engine/TaskProcessor.h"

class CPartFile;
class CKnownFile;

struct CTask_FileHashed : public CTask
{
	CTask_FileHashed(CPartFile* pPartFile, CKnownFile* pKnownFile);
	virtual bool Process();
	virtual LPCTSTR TaskName(){ return _T("FileHashed"); }

	CPartFile*	m_pPartFile;
	CKnownFile*	m_pKnownFile;
};

class CKnownFileList;
class CSharedFileList;
class CFileHashControl;

class CTaskProcessor_Files : public CTaskProcessor
{
	virtual bool Start();
	virtual void Stop();
	virtual void ProcessTimeout();

public:
	CTaskProcessor_Files();
	virtual ~CTaskProcessor_Files();

	__declspec(property(get=_GetKnownFiles)) CKnownFileList&	KnownFiles;
	__declspec(property(get=_GetSharedFiles)) CSharedFileList&	SharedFiles;
	__declspec(property(get=_GetFileHasher)) CFileHashControl&	FileHasher;

	CKnownFileList&		_GetKnownFiles()	const { if(!m_pKnownFiles) throw;	return *m_pKnownFiles; }
	CSharedFileList&	_GetSharedFiles()	const { if(!m_pSharedFiles)throw;	return *m_pSharedFiles; }
	CFileHashControl&	_GetFileHasher()	const { if(!m_pFileHasher) throw;	return *m_pFileHasher; }

private:
	CKnownFileList*		m_pKnownFiles;
	CSharedFileList*	m_pSharedFiles;
	CFileHashControl*	m_pFileHasher;
};

@


1.5
log
@v2 - updated protocol, debug features, bugfix for completion task, revert to default struct byte alignment
@
text
@d40 3
a42 3
	CKnownFileList&		_GetKnownFiles() { if(!m_pKnownFiles) throw;	return *m_pKnownFiles; }
	CSharedFileList&	_GetSharedFiles(){ if(!m_pSharedFiles)throw;	return *m_pSharedFiles; }
	CFileHashControl&	_GetFileHasher() { if(!m_pFileHasher) throw;	return *m_pFileHasher; }
@


1.4
log
@v2 - more minor rearrangements
@
text
@d16 1
@


1.3
log
@v2 - shared files
@
text
@d35 3
a37 2
	__declspec(property(get=_GetKnownFiles)) CKnownFileList& KnownFiles;
	CKnownFileList&		_GetKnownFiles(){ if(!m_pKnownFiles) throw; return *m_pKnownFiles; }
d39 3
a41 5
	__declspec(property(get=_GetSharedFiles)) CSharedFileList& SharedFiles;
	CSharedFileList&	_GetSharedFiles(){ if(!m_pSharedFiles) throw; return *m_pSharedFiles; }

	__declspec(property(get=_GetFileHasher)) CFileHashControl& FileHasher;
	CFileHashControl&	_GetFileHasher(){ if(!m_pFileHasher) throw; return *m_pFileHasher; }
@


1.2
log
@v2 - shared files
@
text
@d9 12
d35 6
@


1.1
log
@Connecting preferences and known/shared files
@
text
@d11 1
d23 3
d29 1
@

