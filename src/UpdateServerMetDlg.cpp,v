head	1.12;
access;
symbols
	PublicRelease_1_2e:1.12
	Interim_Release_1-2e_RC1:1.12
	PublicRelease_1_2d:1.12
	Interim_Release_1-2d_RC1:1.12
	Interim_Release_1-2d_beta1:1.12
	PublicRelease_1_2c:1.12
	Interim_Release_1-2c_RC1:1.12
	Interim_Release_1-2c_beta1:1.12
	PublicRelease_1_2b:1.12
	Interim_Release_1-2b_RC1:1.12
	PublicRelease_1_2a:1.12
	Interim_Release_1-2a_RC1:1.12
	Interim_Release_1-2a_beta2:1.12
	Interim_Release_1-2a_beta1:1.12
	PublicRelease_1_2:1.12
	Interim_Release_1-2_RC1:1.12
	Interim_Release_1-2_beta1:1.12
	PublicRelease_1_1g:1.12
	Interim_Release_1-1g_RC3:1.12
	Interim_Release_1-1g_RC2:1.12
	Interim_Release_1-1g_RC1:1.12
	Interim_Release_1-1g_beta2:1.10
	Interim_Release_1-1g_beta1:1.10
	PublicRelease_1_1f:1.10
	Interim_Release_1-1f_RC1:1.10
	PublicRelease_1_1e:1.10
	Interim_Release_1-1e_RC2:1.10
	Interim_Release_1-1e_RC1:1.10
	Interim_Release_1-1e_beta1:1.10
	PublicRelease_1_1d:1.10
	Interim_Release_1-1d_RC1:1.10
	PublicRelease_1_1c:1.10
	Interim_Release_1-1c_RC1:1.10
	Interim_Release_1-1c_beta2:1.10
	Interim_Release_1-1c_beta1:1.10
	PublicRelease_1_1b:1.10
	Interim_Release_1-1b_RC1:1.10
	PublicRelease_1_1a:1.10
	Interim_Release_1-1a_RC2:1.10
	Interim_Release_1-1a_RC1:1.10
	Interim_Release_1-1a_beta2:1.10
	Interim_Release_1-1a_beta1:1.10
	PublicRelease_1_1:1.10
	Interim_Release_1-1_beta1:1.10
	PublicRelease_1o:1.10
	Interim_Release_1o_RC1:1.10
	Interim_Release_1o_beta1:1.10
	PublicRelease_1n:1.10
	Interim_Release_1n_RC2:1.10
	Interim_Release_1n_RC1:1.10
	Interim_Release_1n_beta2:1.10
	Interim_Release_1n_beta1:1.10
	PublicRelease_1m:1.10
	Interim_Release_1m_beta1:1.10
	PublicRelease_1l:1.10
	Interim_Release_1l_RC3:1.10
	Interim_Release_1l_RC2:1.10
	Interim_Release_1l_RC1:1.10
	Interim_Release_1l_beta2:1.9
	Interim_Release_1l_beta1:1.9
	PublicRelease_1k:1.9
	Interim_Release_1k_RC4:1.9
	Interim_1k_RC3:1.9
	Interim_1k_RC2:1.9
	Interim_Release_1k_RC1:1.9
	Interim_Release_1k_beta5:1.8
	Intrerim_Release_1k_beta4:1.8
	Interim_Release_1k_beta1:1.8
	PublicRelease_1j:1.8
	Interim_Release_1J_RC3:1.8
	Interim_Release_1j_RC3:1.8
	Interim_Release_1j_RC2:1.8
	Interim_Release_1j_RC1:1.8
	Interim_Release_1j_beta2:1.8
	Interim_Release_1j_beta1:1.8
	PublicRelease_1i:1.8
	Interim_Release_1i_RC6:1.8
	Interim_Release_1i_RC3:1.8
	Interim_Release_1i_RC2:1.8
	Interim_Release_1i_RC1:1.8
	Interim_Release_1i_beta3:1.8
	Interim_Release_1i_beta2:1.8
	Interim_Release_1i_beta1:1.7
	PublicRelease_1h:1.5
	Interim_Release_1h_rc2:1.5
	Interim_Release_1h_RC1:1.5
	Interim_Release_1h_beta2:1.5
	Interim_Release_1h_beta1_now:1.5
	Interim_Release_1h_beta1:1.5
	PublicRelease_1g:1.5
	Interim_Release_1g_RC6_Final:1.5
	Interim_Release_1g_RC6:1.5
	Interim_Release_1g_RC5:1.5
	Interim_Release_1g_RC4:1.5
	Interim_Release_1g_RC3:1.5
	Interim_Release_1g_beta2:1.5
	Interim_Release_1g_beta1:1.5
	Interim_Release_1f_RC4:1.4
	Interim_Release_1f_RC3:1.2
	Interim_Release_1f_RC2:1.2
	Interim_Release_1f_RC:1.2
	Interim_Release_1f_beta2:1.2
	Interim_Release_1f_beta1:1.2
	PublicRelease_1e:1.2
	Interim_Release_1e_RC2:1.2
	Interim_Release_1e_RC:1.2
	Interim_Release_1e_beta3:1.2
	Interim_Release_1e_beta2:1.2
	Interim_Release_1e_beta2_before_kuchin:1.2
	Interim_Release_1e_beta1:1.2
	PublicRelease_1c:1.2
	featurestest:1.2.0.8
	Interim_Release_1c_RC:1.2
	Interim_Release_1c_beta2:1.2
	Interim_Release_1c_beta1:1.2
	threaded_downloadqueue:1.2.0.6
	PublicRelease_1b:1.2
	Interim_Release_1b_beta2:1.2
	Interim_Release_1b_beta1:1.2
	proxydeadlake:1.2.0.4
	PublicRelease_1a:1.2
	Interim_Release_1a_beta2:1.2
	BerkeleyDb:1.2.0.2
	Interim_Release_1a_beta1:1.2
	PublicRelease_1:1.2
	goldfish:1.2
	eMulePlus_1_RC2:1.2
	eMulePlus_26b_1RC1:1.2
	PreRelease_26b_i0e:1.2
	before_26d_merge:1.2
	Interim_Release_26b_i0d:1.1
	Interim_Release_26b_i0c:1.1
	Interim_Release_26b_i0b:1.1
	Interim_Release_26b_i0a:1.1
	systraydlg:1.1.0.8
	plus26based:1.1.0.6
	Interim_Release_25b_i0b:1.1
	Proxy_Dev:1.1
	Interim_Release_25b_i0a:1.1.4.1
	proxytest:1.1.4.1.0.2
	official_sockets:1.1.0.4
	eMulePlus_024b_5b:1.1.0.2;
locks; strict;
comment	@// @;


1.12
date	2005.11.27.22.11.50;	author eklmn;	state Exp;
branches;
next	1.11;

1.11
date	2005.11.27.20.31.05;	author eklmn;	state Exp;
branches;
next	1.10;

1.10
date	2004.05.22.19.39.41;	author dongato;	state Exp;
branches;
next	1.9;

1.9
date	2004.03.26.23.16.59;	author aw3;	state Exp;
branches;
next	1.8;

1.8
date	2003.10.24.01.21.20;	author morevit;	state Exp;
branches;
next	1.7;

1.7
date	2003.09.22.00.17.22;	author morevit;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.20.15.39.32;	author morevit;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.27.01.32.49;	author dongato;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.26.09.40.20;	author emoulari;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.26.09.04.50;	author kuchin;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.16.22.01.50;	author lord_kiron;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.21.18.21.24;	author cax2;	state Exp;
branches
	1.1.4.1;
next	;

1.1.4.1
date	2003.01.28.16.54.32;	author cax2;	state Exp;
branches;
next	;


desc
@@


1.12
log
@renamed g_pPrefs->m_pPrefs (f... paste & copy :( )
@
text
@// UpdateServerMetDlg.cpp : implementation file
//

#include "stdafx.h"
#include "emule.h"
#include "UpdateServerMetDlg.h"
#include "ServerWnd.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

// CUpdateServerMetDlg dialog

IMPLEMENT_DYNAMIC(CUpdateServerMetDlg, CDialog)
CUpdateServerMetDlg::CUpdateServerMetDlg(CWnd* pParent /*=NULL*/)
	: CDialog(CUpdateServerMetDlg::IDD, pParent)
	, m_strServerMetURL(_T(""))
{
	m_cpPosition.x = 0;
	m_cpPosition.y = 0;

	m_iCorner = 0;	// top-left

	m_bUsePos = false;
}

CUpdateServerMetDlg::~CUpdateServerMetDlg()
{
}

void CUpdateServerMetDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
	DDX_Text(pDX, IDC_SERVERMETURL, m_strServerMetURL);
	DDX_Control(pDX, IDC_SERVERMETURL, m_ComboBox);
}


BEGIN_MESSAGE_MAP(CUpdateServerMetDlg, CDialog)
	ON_BN_CLICKED(IDC_UPDATESERVERMETFROMURL, OnBnClickedUpdateservermetfromurl)
	ON_CBN_SELCHANGE(IDC_SERVERMET_URL, OnCbnSelchangeServerMetURL)
END_MESSAGE_MAP()


// CUpdateServerMetDlg message handlers

BOOL CUpdateServerMetDlg::OnInitDialog()
{
	EMULE_TRY
	CDialog::OnInitDialog();
	if(m_bUsePos)
	{
		CRect rWnd;
		GetWindowRect(&rWnd);
		
		switch(m_iCorner)
		{
			case 0: // top-left
				SetWindowPos(NULL, m_cpPosition.x, m_cpPosition.y, 0, 0, SWP_NOZORDER | SWP_NOSIZE);
				break;
			case 1:	// top-right
				SetWindowPos(NULL, m_cpPosition.x - rWnd.Width(), m_cpPosition.y, 0, 0, SWP_NOZORDER | SWP_NOSIZE);
				break;
			case 2: // bottom-right
				SetWindowPos(NULL, m_cpPosition.x - rWnd.Width(), m_cpPosition.y - rWnd.Height(), 0, 0, SWP_NOZORDER | SWP_NOSIZE);
				break;
			case 3: // bottom-left
				SetWindowPos(NULL, m_cpPosition.x, m_cpPosition.y - rWnd.Height(), 0, 0, SWP_NOZORDER | SWP_NOSIZE);
				break;
			default:
				break;
		}
	}
	Localize();
    // 26.5 EC
	if (g_App.m_pPrefs->m_addressesList.IsEmpty()) return TRUE;
	POSITION Pos = g_App.m_pPrefs->m_addressesList.GetHeadPosition();
	while (Pos != NULL)
	     m_ComboBox.AddString(g_App.m_pPrefs->m_addressesList.GetNext(Pos));
    // EC Ends

	return TRUE;  // return TRUE unless you set the focus to a control
	// EXCEPTION: OCX Property Pages should return FALSE
	EMULE_CATCH
	return FALSE;
}

void CUpdateServerMetDlg::SetInitialPos(CPoint pos, int iCorner)
{
	m_iCorner = iCorner;
	m_cpPosition = pos;
	m_bUsePos = true;
}

void CUpdateServerMetDlg::SetParent(CServerWnd* pParent)
{
	m_pParent = pParent;
}

void CUpdateServerMetDlg::Localize()
{
	if(m_hWnd)
	{		
		SetWindowText(GetResString(IDS_SV_MET));
		SetDlgItemText(IDC_URL_LBL, GetResString(IDS_SV_URL));
		SetDlgItemText(IDC_UPDATESERVERMETFROMURL, GetResString(IDS_SV_UPDATE));
	}
}

void CUpdateServerMetDlg::OnBnClickedUpdateservermetfromurl()
{
	UpdateData();

	if(!m_pParent)
		return;

	//if(m_strServerMetURL.IsEmpty())
	//	return;
	
	EndDialog(0x00);
	m_pParent->UpdateServerMetFromURL(m_strServerMetURL);
}

void CUpdateServerMetDlg::OnOK()
{
	OnBnClickedUpdateservermetfromurl();
}

void CUpdateServerMetDlg::OnCbnSelchangeServerMetURL()
{
}
@


1.11
log
@renamed 3 variables
@
text
@d79 2
a80 2
	if (g_App.g_pPrefs->m_addressesList.IsEmpty()) return TRUE;
	POSITION Pos = g_App.g_pPrefs->m_addressesList.GetHeadPosition();
d82 1
a82 1
	     m_ComboBox.AddString(g_App.g_pPrefs->m_addressesList.GetNext(Pos));
@


1.10
log
@Cleaned up resources
@
text
@d79 2
a80 2
	if (g_eMuleApp.m_pGlobPrefs->m_addressesList.IsEmpty()) return TRUE;
	POSITION Pos = g_eMuleApp.m_pGlobPrefs->m_addressesList.GetHeadPosition();
d82 1
a82 1
	     m_ComboBox.AddString(g_eMuleApp.m_pGlobPrefs->m_addressesList.GetNext(Pos));
@


1.9
log
@minor improvements
@
text
@d44 1
a44 1
	ON_CBN_SELCHANGE(IDC_COMBO1, OnCbnSelchangeCombo1)
d132 1
a132 1
void CUpdateServerMetDlg::OnCbnSelchangeCombo1()
@


1.8
log
@Formatting, comments, and name changes.
@
text
@d108 2
a109 2
		GetDlgItem(IDC_URL_LBL)->SetWindowText(GetResString(IDS_SV_URL));
		GetDlgItem(IDC_UPDATESERVERMETFROMURL)->SetWindowText(GetResString(IDS_SV_UPDATE));
@


1.7
log
@A little more method factoring, a few name changes, no (intended) logic changes.
@
text
@a133 1
	// TODO: Add your control notification handler code here
@


1.6
log
@More name changes, reinstated CMuleCtrlItem class, moved srcsarevisible from CPartFile to CMuleCtrlItem (where it belongs), added "Show Full Status Icons" and "Show Gray Paused" features with corresponding preferences, modified "SmartOpen" code to make it sticky and to make it work with sources with changing states.
@
text
@d79 2
a80 2
	if (g_eMuleApp.m_pGlobPrefs->adresses_list.IsEmpty()) return TRUE;
	POSITION Pos = g_eMuleApp.m_pGlobPrefs->adresses_list.GetHeadPosition();
d82 1
a82 1
	     m_ComboBox.AddString(g_eMuleApp.m_pGlobPrefs->adresses_list.GetNext(Pos));
@


1.5
log
@Autoserverupdate returned.
@
text
@d79 2
a80 2
	if (theApp.glob_prefs->adresses_list.IsEmpty()) return TRUE;
	POSITION Pos = theApp.glob_prefs->adresses_list.GetHeadPosition();
d82 1
a82 1
	     m_ComboBox.AddString(theApp.glob_prefs->adresses_list.GetNext(Pos));
@


1.4
log
@ComboBox now uses values from addresses.dat
@
text
@d120 2
a121 2
	if(m_strServerMetURL.IsEmpty())
		return;
@


1.3
log
@Prelisted URLs in update server.met dialog
@
text
@d78 7
a84 3
	m_ComboBox.AddString("http://ocbmaurice.dyndns.org/pl/slist.pl/server.met?download/server-best.met");
	m_ComboBox.AddString("http://ocbmaurice.dyndns.org/pl/slist.pl/server.met?download/server-good.met");
	m_ComboBox.AddString("http://ocbmaurice.dyndns.org/pl/slist.pl/server.met?download/server-max.met");
@


1.2
log
@Added instrumentation for debugging memory leaks :
#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

To all .cpp files (I hope I didn't miss any one)
@
text
@d38 1
d44 1
d52 1
d78 3
d83 2
d115 3
d126 5
@


1.1
log
@*** empty log message ***
@
text
@d9 5
@


1.1.4.1
log
@updating this branch...
@
text
@@

